// Code generated by protoc-gen-gogo.
// source: triggermessagebody.proto
// DO NOT EDIT!

package weibo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TriggerMessageBody struct {
	// Types that are valid to be assigned to TypePresent:
	//	*TriggerMessageBody_Type
	TypePresent isTriggerMessageBody_TypePresent `protobuf_oneof:"type_present"`
	// Types that are valid to be assigned to EventPresent:
	//	*TriggerMessageBody_Event
	EventPresent isTriggerMessageBody_EventPresent `protobuf_oneof:"event_present"`
	// Types that are valid to be assigned to BodyPresent:
	//	*TriggerMessageBody_Body
	BodyPresent isTriggerMessageBody_BodyPresent `protobuf_oneof:"body_present"`
}

func (m *TriggerMessageBody) Reset()         { *m = TriggerMessageBody{} }
func (m *TriggerMessageBody) String() string { return proto.CompactTextString(m) }
func (*TriggerMessageBody) ProtoMessage()    {}
func (*TriggerMessageBody) Descriptor() ([]byte, []int) {
	return fileDescriptorTriggermessagebody, []int{0}
}

type isTriggerMessageBody_TypePresent interface {
	isTriggerMessageBody_TypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isTriggerMessageBody_EventPresent interface {
	isTriggerMessageBody_EventPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isTriggerMessageBody_BodyPresent interface {
	isTriggerMessageBody_BodyPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TriggerMessageBody_Type struct {
	Type string `protobuf:"bytes,601,opt,name=type,proto3,oneof"`
}
type TriggerMessageBody_Event struct {
	Event string `protobuf:"bytes,602,opt,name=event,proto3,oneof"`
}
type TriggerMessageBody_Body struct {
	Body []byte `protobuf:"bytes,604,opt,name=body,proto3,oneof"`
}

func (*TriggerMessageBody_Type) isTriggerMessageBody_TypePresent()   {}
func (*TriggerMessageBody_Event) isTriggerMessageBody_EventPresent() {}
func (*TriggerMessageBody_Body) isTriggerMessageBody_BodyPresent()   {}

func (m *TriggerMessageBody) GetTypePresent() isTriggerMessageBody_TypePresent {
	if m != nil {
		return m.TypePresent
	}
	return nil
}
func (m *TriggerMessageBody) GetEventPresent() isTriggerMessageBody_EventPresent {
	if m != nil {
		return m.EventPresent
	}
	return nil
}
func (m *TriggerMessageBody) GetBodyPresent() isTriggerMessageBody_BodyPresent {
	if m != nil {
		return m.BodyPresent
	}
	return nil
}

func (m *TriggerMessageBody) GetType() string {
	if x, ok := m.GetTypePresent().(*TriggerMessageBody_Type); ok {
		return x.Type
	}
	return ""
}

func (m *TriggerMessageBody) GetEvent() string {
	if x, ok := m.GetEventPresent().(*TriggerMessageBody_Event); ok {
		return x.Event
	}
	return ""
}

func (m *TriggerMessageBody) GetBody() []byte {
	if x, ok := m.GetBodyPresent().(*TriggerMessageBody_Body); ok {
		return x.Body
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TriggerMessageBody) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TriggerMessageBody_OneofMarshaler, _TriggerMessageBody_OneofUnmarshaler, _TriggerMessageBody_OneofSizer, []interface{}{
		(*TriggerMessageBody_Type)(nil),
		(*TriggerMessageBody_Event)(nil),
		(*TriggerMessageBody_Body)(nil),
	}
}

func _TriggerMessageBody_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TriggerMessageBody)
	// type_present
	switch x := m.TypePresent.(type) {
	case *TriggerMessageBody_Type:
		_ = b.EncodeVarint(601<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Type)
	case nil:
	default:
		return fmt.Errorf("TriggerMessageBody.TypePresent has unexpected type %T", x)
	}
	// event_present
	switch x := m.EventPresent.(type) {
	case *TriggerMessageBody_Event:
		_ = b.EncodeVarint(602<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Event)
	case nil:
	default:
		return fmt.Errorf("TriggerMessageBody.EventPresent has unexpected type %T", x)
	}
	// body_present
	switch x := m.BodyPresent.(type) {
	case *TriggerMessageBody_Body:
		_ = b.EncodeVarint(604<<3 | proto.WireBytes)
		_ = b.EncodeRawBytes(x.Body)
	case nil:
	default:
		return fmt.Errorf("TriggerMessageBody.BodyPresent has unexpected type %T", x)
	}
	return nil
}

func _TriggerMessageBody_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TriggerMessageBody)
	switch tag {
	case 601: // type_present.type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TypePresent = &TriggerMessageBody_Type{x}
		return true, err
	case 602: // event_present.event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.EventPresent = &TriggerMessageBody_Event{x}
		return true, err
	case 604: // body_present.body
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.BodyPresent = &TriggerMessageBody_Body{x}
		return true, err
	default:
		return false, nil
	}
}

func _TriggerMessageBody_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TriggerMessageBody)
	// type_present
	switch x := m.TypePresent.(type) {
	case *TriggerMessageBody_Type:
		n += proto.SizeVarint(601<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Type)))
		n += len(x.Type)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// event_present
	switch x := m.EventPresent.(type) {
	case *TriggerMessageBody_Event:
		n += proto.SizeVarint(602<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Event)))
		n += len(x.Event)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// body_present
	switch x := m.BodyPresent.(type) {
	case *TriggerMessageBody_Body:
		n += proto.SizeVarint(604<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Body)))
		n += len(x.Body)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*TriggerMessageBody)(nil), "weibo.TriggerMessageBody")
}
func (m *TriggerMessageBody) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TriggerMessageBody) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.TypePresent != nil {
		nn1, err := m.TypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.EventPresent != nil {
		nn2, err := m.EventPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.BodyPresent != nil {
		nn3, err := m.BodyPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	return i, nil
}

func (m *TriggerMessageBody_Type) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xca
	i++
	dAtA[i] = 0x25
	i++
	i = encodeVarintTriggermessagebody(dAtA, i, uint64(len(m.Type)))
	i += copy(dAtA[i:], m.Type)
	return i, nil
}
func (m *TriggerMessageBody_Event) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0x25
	i++
	i = encodeVarintTriggermessagebody(dAtA, i, uint64(len(m.Event)))
	i += copy(dAtA[i:], m.Event)
	return i, nil
}
func (m *TriggerMessageBody_Body) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Body != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x25
		i++
		i = encodeVarintTriggermessagebody(dAtA, i, uint64(len(m.Body)))
		i += copy(dAtA[i:], m.Body)
	}
	return i, nil
}
func encodeFixed64Triggermessagebody(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Triggermessagebody(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintTriggermessagebody(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *TriggerMessageBody) Size() (n int) {
	var l int
	_ = l
	if m.TypePresent != nil {
		n += m.TypePresent.Size()
	}
	if m.EventPresent != nil {
		n += m.EventPresent.Size()
	}
	if m.BodyPresent != nil {
		n += m.BodyPresent.Size()
	}
	return n
}

func (m *TriggerMessageBody_Type) Size() (n int) {
	var l int
	_ = l
	l = len(m.Type)
	n += 2 + l + sovTriggermessagebody(uint64(l))
	return n
}
func (m *TriggerMessageBody_Event) Size() (n int) {
	var l int
	_ = l
	l = len(m.Event)
	n += 2 + l + sovTriggermessagebody(uint64(l))
	return n
}
func (m *TriggerMessageBody_Body) Size() (n int) {
	var l int
	_ = l
	if m.Body != nil {
		l = len(m.Body)
		n += 2 + l + sovTriggermessagebody(uint64(l))
	}
	return n
}

func sovTriggermessagebody(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozTriggermessagebody(x uint64) (n int) {
	return sovTriggermessagebody(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TriggerMessageBody) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTriggermessagebody
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TriggerMessageBody: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TriggerMessageBody: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 601:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTriggermessagebody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTriggermessagebody
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TypePresent = &TriggerMessageBody_Type{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 602:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTriggermessagebody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTriggermessagebody
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EventPresent = &TriggerMessageBody_Event{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 604:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTriggermessagebody
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTriggermessagebody
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := make([]byte, postIndex-iNdEx)
			copy(v, dAtA[iNdEx:postIndex])
			m.BodyPresent = &TriggerMessageBody_Body{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTriggermessagebody(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTriggermessagebody
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTriggermessagebody(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTriggermessagebody
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTriggermessagebody
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTriggermessagebody
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthTriggermessagebody
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowTriggermessagebody
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipTriggermessagebody(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthTriggermessagebody = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTriggermessagebody   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("triggermessagebody.proto", fileDescriptorTriggermessagebody) }

var fileDescriptorTriggermessagebody = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x29, 0xca, 0x4c,
	0x4f, 0x4f, 0x2d, 0xca, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x4d, 0xca, 0x4f, 0xa9, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x4f, 0xcd, 0x4c, 0xca, 0x57, 0xea, 0x61, 0xe4, 0x12,
	0x0a, 0x81, 0xa8, 0xf1, 0x85, 0xa8, 0x71, 0xca, 0x4f, 0xa9, 0x14, 0x12, 0xe5, 0x62, 0x29, 0xa9,
	0x2c, 0x48, 0x95, 0xb8, 0xc9, 0xa2, 0xc0, 0xa8, 0xc1, 0xe9, 0xc1, 0x10, 0x04, 0xe6, 0x0a, 0x89,
	0x73, 0xb1, 0xa6, 0x96, 0xa5, 0xe6, 0x95, 0x48, 0xdc, 0x82, 0x88, 0x33, 0x06, 0x41, 0xf8, 0x20,
	0xf5, 0x20, 0xb3, 0x25, 0xee, 0x80, 0xc4, 0x79, 0x3c, 0x98, 0x82, 0xc0, 0x5c, 0x27, 0x3e, 0x2e,
	0x1e, 0x90, 0xbe, 0xf8, 0x82, 0xa2, 0xd4, 0xe2, 0xd4, 0xbc, 0x12, 0x27, 0x7e, 0x2e, 0x5e, 0xb0,
	0x7a, 0xb8, 0x00, 0x1f, 0x17, 0x0f, 0x48, 0x21, 0x9c, 0x6f, 0x73, 0xe2, 0x91, 0x1c, 0xe3, 0x85,
	0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0xce, 0x78, 0x2c, 0xc7, 0xc0, 0x25, 0x9b, 0x9c, 0x9f,
	0xab, 0x07, 0x76, 0xab, 0x1e, 0xd4, 0x2f, 0x7a, 0xc9, 0xf9, 0xb9, 0xb9, 0xf9, 0x79, 0x7a, 0x49,
	0xa9, 0x89, 0x79, 0x4e, 0xdc, 0x48, 0xae, 0x4e, 0x62, 0x03, 0x7b, 0xcd, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x0b, 0x22, 0xcf, 0xeb, 0xf6, 0x00, 0x00, 0x00,
}
