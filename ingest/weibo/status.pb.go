// Code generated by protoc-gen-gogo.
// source: status.proto
// DO NOT EDIT!

package weibo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Status struct {
	// basic info
	//
	// Types that are valid to be assigned to IdPresent:
	//	*Status_Id
	IdPresent isStatus_IdPresent `protobuf_oneof:"id_present"`
	// Types that are valid to be assigned to TextPresent:
	//	*Status_Text
	TextPresent isStatus_TextPresent `protobuf_oneof:"text_present"`
	// Types that are valid to be assigned to CreatedAtPresent:
	//	*Status_CreatedAt
	CreatedAtPresent isStatus_CreatedAtPresent `protobuf_oneof:"created_at_present"`
	// Types that are valid to be assigned to FavoritedPresent:
	//	*Status_Favorited
	FavoritedPresent isStatus_FavoritedPresent `protobuf_oneof:"favorited_present"`
	// Types that are valid to be assigned to MidPresent:
	//	*Status_Mid
	MidPresent isStatus_MidPresent `protobuf_oneof:"mid_present"`
	// Types that are valid to be assigned to PostSourcePresent:
	//	*Status_PostSource
	PostSourcePresent isStatus_PostSourcePresent `protobuf_oneof:"post_source_present"`
	// Types that are valid to be assigned to AuthorPresent:
	//	*Status_Author
	AuthorPresent isStatus_AuthorPresent `protobuf_oneof:"author_present"`
	// Types that are valid to be assigned to EditAtPresent:
	//	*Status_EditAt
	EditAtPresent isStatus_EditAtPresent `protobuf_oneof:"edit_at_present"`
	// Types that are valid to be assigned to EditCountPresent:
	//	*Status_EditCount
	EditCountPresent isStatus_EditCountPresent `protobuf_oneof:"edit_count_present"`
	// Types that are valid to be assigned to IsHistoryPresent:
	//	*Status_IsHistory
	IsHistoryPresent isStatus_IsHistoryPresent `protobuf_oneof:"is_history_present"`
	// Types that are valid to be assigned to AdStatePresent:
	//	*Status_AdState
	AdStatePresent isStatus_AdStatePresent `protobuf_oneof:"ad_state_present"`
	// Types that are valid to be assigned to ContentAuthPresent:
	//	*Status_ContentAuth
	ContentAuthPresent isStatus_ContentAuthPresent `protobuf_oneof:"content_auth_present"`
	// Types that are valid to be assigned to RtPresent:
	//	*Status_Rt
	RtPresent isStatus_RtPresent `protobuf_oneof:"rt_present"`
	// Types that are valid to be assigned to RtIdDbPresent:
	//	*Status_RtIdDb
	RtIdDbPresent isStatus_RtIdDbPresent `protobuf_oneof:"rt_id_db_present"`
	// Types that are valid to be assigned to RtMidDbPresent:
	//	*Status_RtMidDb
	RtMidDbPresent isStatus_RtMidDbPresent `protobuf_oneof:"rt_mid_db_present"`
	// Types that are valid to be assigned to ParentRtIdDbPresent:
	//	*Status_ParentRtIdDb
	ParentRtIdDbPresent isStatus_ParentRtIdDbPresent `protobuf_oneof:"parent_rt_id_db_present"`
	RtChainDb           []uint64                     `protobuf:"varint,124,rep,name=rt_chain_db,json=rtChainDb" json:"rt_chain_db,omitempty"`
	MentionUid          []uint64                     `protobuf:"varint,126,rep,name=mention_uid,json=mentionUid" json:"mention_uid,omitempty"`
	// media/photo/annotation
	// from pic_id, we can get thumbnail_pic, bmiddle_pic, original_pic
	//
	// Types that are valid to be assigned to PicIdPresent:
	//	*Status_PicId
	PicIdPresent isStatus_PicIdPresent `protobuf_oneof:"pic_id_present"`
	// geo tag, optional
	//
	// Types that are valid to be assigned to LatitudePresent:
	//	*Status_Latitude
	LatitudePresent isStatus_LatitudePresent `protobuf_oneof:"latitude_present"`
	// Types that are valid to be assigned to LongitudePresent:
	//	*Status_Longitude
	LongitudePresent isStatus_LongitudePresent `protobuf_oneof:"longitude_present"`
	// Types that are valid to be assigned to AnnotationPresent:
	//	*Status_Annotation
	AnnotationPresent isStatus_AnnotationPresent `protobuf_oneof:"annotation_present"`
	// tag id, can be public, repeated means 0~n
	TagIds []uint64 `protobuf:"varint,145,rep,name=tagIds" json:"tagIds,omitempty"`
	// internal field
	//
	// Types that are valid to be assigned to IpPresent:
	//	*Status_Ip
	IpPresent isStatus_IpPresent `protobuf_oneof:"ip_present"`
	// Types that are valid to be assigned to UidDbPresent:
	//	*Status_UidDb
	UidDbPresent isStatus_UidDbPresent `protobuf_oneof:"uid_db_present"`
	// Types that are valid to be assigned to FeaturePresent:
	//	*Status_Feature
	FeaturePresent isStatus_FeaturePresent `protobuf_oneof:"feature_present"`
	// Types that are valid to be assigned to StatePresent:
	//	*Status_State
	StatePresent isStatus_StatePresent `protobuf_oneof:"state_present"`
	// Types that are valid to be assigned to ApiStatePresent:
	//	*Status_ApiState
	ApiStatePresent isStatus_ApiStatePresent `protobuf_oneof:"api_state_present"`
	// Types that are valid to be assigned to WeiboStatePresent:
	//	*Status_WeiboState
	WeiboStatePresent isStatus_WeiboStatePresent `protobuf_oneof:"WeiboState_present"`
	// Types that are valid to be assigned to MflagPresent:
	//	*Status_Mflag
	MflagPresent isStatus_MflagPresent `protobuf_oneof:"mflag_present"`
	// Types that are valid to be assigned to VflagPresent:
	//	*Status_Vflag
	VflagPresent isStatus_VflagPresent `protobuf_oneof:"vflag_present"`
	// Types that are valid to be assigned to FflagPresent:
	//	*Status_Fflag
	FflagPresent isStatus_FflagPresent `protobuf_oneof:"fflag_present"`
	// Types that are valid to be assigned to GroupIdPresent:
	//	*Status_GroupId
	GroupIdPresent isStatus_GroupIdPresent `protobuf_oneof:"group_id_present"`
	// Types that are valid to be assigned to ExpireTimePresent:
	//	*Status_ExpireTime
	ExpireTimePresent isStatus_ExpireTimePresent `protobuf_oneof:"expire_time_present"`
	// Types that are valid to be assigned to SgidPresent:
	//	*Status_Sgid
	SgidPresent isStatus_SgidPresent `protobuf_oneof:"sgid_present"`
	// title structure
	ShareSource []uint32 `protobuf:"varint,164,rep,name=share_source,json=shareSource" json:"share_source,omitempty"`
	ShareId     []uint64 `protobuf:"varint,165,rep,name=share_id,json=shareId" json:"share_id,omitempty"`
	// Types that are valid to be assigned to FidPresent:
	//	*Status_Fid
	FidPresent isStatus_FidPresent `protobuf_oneof:"fid_present"`
	// Types that are valid to be assigned to CustomSourcePresent:
	//	*Status_CustomSource
	CustomSourcePresent isStatus_CustomSourcePresent `protobuf_oneof:"custom_source_present"`
	// ad tags to push firehose  format: repeat adtype:value1,value2,value3
	Adtags []string `protobuf:"bytes,168,rep,name=adtags" json:"adtags,omitempty"`
	// biz info
	BizIds []uint32 `protobuf:"varint,169,rep,name=biz_ids,json=bizIds" json:"biz_ids,omitempty"`
	// Types that are valid to be assigned to ObjectTypePresent:
	//	*Status_ObjectType
	ObjectTypePresent isStatus_ObjectTypePresent `protobuf_oneof:"object_type_present"`
	// Types that are valid to be assigned to PageMarkLevelPresent:
	//	*Status_PageMarkLevel
	PageMarkLevelPresent isStatus_PageMarkLevelPresent `protobuf_oneof:"page_mark_level_present"`
	ObjectIds            []string                      `protobuf:"bytes,172,rep,name=object_ids,json=objectIds" json:"object_ids,omitempty"`
	// Types that are valid to be assigned to PhotoTagPresent:
	//	*Status_PhotoTag
	PhotoTagPresent isStatus_PhotoTagPresent `protobuf_oneof:"photoTag_present"`
	// Types that are valid to be assigned to ExtInfoPresent:
	//	*Status_ExtInfo
	ExtInfoPresent isStatus_ExtInfoPresent `protobuf_oneof:"ext_info_present"`
	// Types that are valid to be assigned to StatusTypePresent:
	//	*Status_StatusType
	StatusTypePresent isStatus_StatusTypePresent `protobuf_oneof:"status_type_present"`
	// Types that are valid to be assigned to BizFeaturePresent:
	//	*Status_BizFeature
	BizFeaturePresent isStatus_BizFeaturePresent `protobuf_oneof:"biz_feature_present"`
	DarwinIdsStatus   []string                   `protobuf:"bytes,177,rep,name=darwinIds_status,json=darwinIdsStatus" json:"darwinIds_status,omitempty"`
	// Types that are valid to be assigned to PageTypePresent:
	//	*Status_PageType
	PageTypePresent isStatus_PageTypePresent `protobuf_oneof:"page_type_present"`
	// Types that are valid to be assigned to IsLongTextPresent:
	//	*Status_IsLongText
	IsLongTextPresent isStatus_IsLongTextPresent `protobuf_oneof:"isLongText_present"`
	// Types that are valid to be assigned to LongTextFidPresent:
	//	*Status_LongTextFid
	LongTextFidPresent isStatus_LongTextFidPresent `protobuf_oneof:"longTextFid_present"`
	// Types that are valid to be assigned to TextLengthPresent:
	//	*Status_TextLength
	TextLengthPresent isStatus_TextLengthPresent `protobuf_oneof:"textLength_present"`
	// BigInteger
	//
	// Types that are valid to be assigned to SimilarityPresent:
	//	*Status_Similarity
	SimilarityPresent isStatus_SimilarityPresent `protobuf_oneof:"similarity_present"`
	// Types that are valid to be assigned to TopicUuidPresent:
	//	*Status_TopicUuid
	TopicUuidPresent isStatus_TopicUuidPresent `protobuf_oneof:"topic_uuid_present"`
	// Types that are valid to be assigned to TopicIdPresent:
	//	*Status_TopicId
	TopicIdPresent isStatus_TopicIdPresent `protobuf_oneof:"topic_id_present"`
	// Types that are valid to be assigned to SyncMblogPresent:
	//	*Status_SyncMblog
	SyncMblogPresent isStatus_SyncMblogPresent `protobuf_oneof:"sync_mblog_present"`
	// Types that are valid to be assigned to GifIdsPresent:
	//	*Status_GifIds
	GifIdsPresent isStatus_GifIdsPresent `protobuf_oneof:"gif_ids_present"`
	// Types that are valid to be assigned to ContentOnlyTypePresent:
	//	*Status_ContentOnlyType
	ContentOnlyTypePresent isStatus_ContentOnlyTypePresent `protobuf_oneof:"content_only_type_present"`
	// Types that are valid to be assigned to OriginalSourcePresent:
	//	*Status_OriginalSource
	OriginalSourcePresent isStatus_OriginalSourcePresent `protobuf_oneof:"original_source_present"`
	// Types that are valid to be assigned to ProcessedByV4Present:
	//	*Status_ProcessedByV4
	ProcessedByV4Present isStatus_ProcessedByV4Present `protobuf_oneof:"processed_by_v4_present"`
	// Types that are valid to be assigned to RepostsCountPresent:
	//	*Status_RepostsCount
	RepostsCountPresent isStatus_RepostsCountPresent `protobuf_oneof:"reposts_count_present"`
	// Types that are valid to be assigned to CommentsCountPresent:
	//	*Status_CommentsCount
	CommentsCountPresent isStatus_CommentsCountPresent `protobuf_oneof:"comments_count_present"`
	// Types that are valid to be assigned to IsImportedTopicPresent:
	//	*Status_IsImportedTopic
	IsImportedTopicPresent isStatus_IsImportedTopicPresent `protobuf_oneof:"is_imported_topic_present"`
	// Types that are valid to be assigned to IfCanFlowInTopicPresent:
	//	*Status_IfCanFlowInTopic
	IfCanFlowInTopicPresent isStatus_IfCanFlowInTopicPresent `protobuf_oneof:"if_can_flow_in_topic_present"`
	// Types that are valid to be assigned to ApprovalMarkTimePresent:
	//	*Status_ApprovalMarkTime
	ApprovalMarkTimePresent isStatus_ApprovalMarkTimePresent `protobuf_oneof:"approval_mark_time_present"`
	// Types that are valid to be assigned to WithCommentPresent:
	//	*Status_WithComment
	WithCommentPresent isStatus_WithCommentPresent `protobuf_oneof:"withComment_present"`
	ManageFlag         uint64                      `protobuf:"varint,197,opt,name=manage_flag,json=manageFlag,proto3" json:"manage_flag,omitempty"`
	// Types that are valid to be assigned to MblogVipTypePresent:
	//	*Status_MblogVipType
	MblogVipTypePresent isStatus_MblogVipTypePresent `protobuf_oneof:"mblogVipType_present"`
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptorStatus, []int{0} }

type isStatus_IdPresent interface {
	isStatus_IdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_TextPresent interface {
	isStatus_TextPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_CreatedAtPresent interface {
	isStatus_CreatedAtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_FavoritedPresent interface {
	isStatus_FavoritedPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_MidPresent interface {
	isStatus_MidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_PostSourcePresent interface {
	isStatus_PostSourcePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_AuthorPresent interface {
	isStatus_AuthorPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_EditAtPresent interface {
	isStatus_EditAtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_EditCountPresent interface {
	isStatus_EditCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_IsHistoryPresent interface {
	isStatus_IsHistoryPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_AdStatePresent interface {
	isStatus_AdStatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ContentAuthPresent interface {
	isStatus_ContentAuthPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_RtPresent interface {
	isStatus_RtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_RtIdDbPresent interface {
	isStatus_RtIdDbPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_RtMidDbPresent interface {
	isStatus_RtMidDbPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ParentRtIdDbPresent interface {
	isStatus_ParentRtIdDbPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_PicIdPresent interface {
	isStatus_PicIdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_LatitudePresent interface {
	isStatus_LatitudePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_LongitudePresent interface {
	isStatus_LongitudePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_AnnotationPresent interface {
	isStatus_AnnotationPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_IpPresent interface {
	isStatus_IpPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_UidDbPresent interface {
	isStatus_UidDbPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_FeaturePresent interface {
	isStatus_FeaturePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_StatePresent interface {
	isStatus_StatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ApiStatePresent interface {
	isStatus_ApiStatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_WeiboStatePresent interface {
	isStatus_WeiboStatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_MflagPresent interface {
	isStatus_MflagPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_VflagPresent interface {
	isStatus_VflagPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_FflagPresent interface {
	isStatus_FflagPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_GroupIdPresent interface {
	isStatus_GroupIdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ExpireTimePresent interface {
	isStatus_ExpireTimePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_SgidPresent interface {
	isStatus_SgidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_FidPresent interface {
	isStatus_FidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_CustomSourcePresent interface {
	isStatus_CustomSourcePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ObjectTypePresent interface {
	isStatus_ObjectTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_PageMarkLevelPresent interface {
	isStatus_PageMarkLevelPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_PhotoTagPresent interface {
	isStatus_PhotoTagPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ExtInfoPresent interface {
	isStatus_ExtInfoPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_StatusTypePresent interface {
	isStatus_StatusTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_BizFeaturePresent interface {
	isStatus_BizFeaturePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_PageTypePresent interface {
	isStatus_PageTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_IsLongTextPresent interface {
	isStatus_IsLongTextPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_LongTextFidPresent interface {
	isStatus_LongTextFidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_TextLengthPresent interface {
	isStatus_TextLengthPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_SimilarityPresent interface {
	isStatus_SimilarityPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_TopicUuidPresent interface {
	isStatus_TopicUuidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_TopicIdPresent interface {
	isStatus_TopicIdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_SyncMblogPresent interface {
	isStatus_SyncMblogPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_GifIdsPresent interface {
	isStatus_GifIdsPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ContentOnlyTypePresent interface {
	isStatus_ContentOnlyTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_OriginalSourcePresent interface {
	isStatus_OriginalSourcePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ProcessedByV4Present interface {
	isStatus_ProcessedByV4Present()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_RepostsCountPresent interface {
	isStatus_RepostsCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_CommentsCountPresent interface {
	isStatus_CommentsCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_IsImportedTopicPresent interface {
	isStatus_IsImportedTopicPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_IfCanFlowInTopicPresent interface {
	isStatus_IfCanFlowInTopicPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_ApprovalMarkTimePresent interface {
	isStatus_ApprovalMarkTimePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_WithCommentPresent interface {
	isStatus_WithCommentPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isStatus_MblogVipTypePresent interface {
	isStatus_MblogVipTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Status_Id struct {
	Id uint64 `protobuf:"varint,101,opt,name=id,proto3,oneof"`
}
type Status_Text struct {
	Text string `protobuf:"bytes,102,opt,name=text,proto3,oneof"`
}
type Status_CreatedAt struct {
	CreatedAt uint64 `protobuf:"varint,103,opt,name=created_at,json=createdAt,proto3,oneof"`
}
type Status_Favorited struct {
	Favorited bool `protobuf:"varint,108,opt,name=favorited,proto3,oneof"`
}
type Status_Mid struct {
	Mid uint64 `protobuf:"varint,109,opt,name=mid,proto3,oneof"`
}
type Status_PostSource struct {
	PostSource *PostSource `protobuf:"bytes,110,opt,name=post_source,json=postSource,oneof"`
}
type Status_Author struct {
	Author *SinaUser `protobuf:"bytes,111,opt,name=author,oneof"`
}
type Status_EditAt struct {
	EditAt uint64 `protobuf:"varint,112,opt,name=edit_at,json=editAt,proto3,oneof"`
}
type Status_EditCount struct {
	EditCount uint32 `protobuf:"varint,113,opt,name=edit_count,json=editCount,proto3,oneof"`
}
type Status_IsHistory struct {
	IsHistory bool `protobuf:"varint,114,opt,name=is_history,json=isHistory,proto3,oneof"`
}
type Status_AdState struct {
	AdState uint32 `protobuf:"varint,115,opt,name=ad_state,json=adState,proto3,oneof"`
}
type Status_ContentAuth struct {
	ContentAuth uint32 `protobuf:"varint,116,opt,name=content_auth,json=contentAuth,proto3,oneof"`
}
type Status_Rt struct {
	Rt *Status `protobuf:"bytes,120,opt,name=rt,oneof"`
}
type Status_RtIdDb struct {
	RtIdDb uint64 `protobuf:"varint,121,opt,name=rt_id_db,json=rtIdDb,proto3,oneof"`
}
type Status_RtMidDb struct {
	RtMidDb uint64 `protobuf:"varint,122,opt,name=rt_mid_db,json=rtMidDb,proto3,oneof"`
}
type Status_ParentRtIdDb struct {
	ParentRtIdDb uint64 `protobuf:"varint,123,opt,name=parent_rt_id_db,json=parentRtIdDb,proto3,oneof"`
}
type Status_PicId struct {
	PicId string `protobuf:"bytes,131,opt,name=pic_id,json=picId,proto3,oneof"`
}
type Status_Latitude struct {
	Latitude string `protobuf:"bytes,141,opt,name=latitude,proto3,oneof"`
}
type Status_Longitude struct {
	Longitude string `protobuf:"bytes,142,opt,name=longitude,proto3,oneof"`
}
type Status_Annotation struct {
	Annotation string `protobuf:"bytes,146,opt,name=annotation,proto3,oneof"`
}
type Status_Ip struct {
	Ip uint32 `protobuf:"varint,151,opt,name=ip,proto3,oneof"`
}
type Status_UidDb struct {
	UidDb uint64 `protobuf:"varint,152,opt,name=uid_db,json=uidDb,proto3,oneof"`
}
type Status_Feature struct {
	Feature uint64 `protobuf:"varint,153,opt,name=feature,proto3,oneof"`
}
type Status_State struct {
	State uint32 `protobuf:"varint,155,opt,name=state,proto3,oneof"`
}
type Status_ApiState struct {
	ApiState ApiState `protobuf:"varint,156,opt,name=api_state,json=apiState,proto3,enum=weibo.ApiState,oneof"`
}
type Status_WeiboState struct {
	WeiboState uint64 `protobuf:"varint,157,opt,name=WeiboState,proto3,oneof"`
}
type Status_Mflag struct {
	Mflag int32 `protobuf:"varint,158,opt,name=mflag,proto3,oneof"`
}
type Status_Vflag struct {
	Vflag uint32 `protobuf:"varint,159,opt,name=vflag,proto3,oneof"`
}
type Status_Fflag struct {
	Fflag uint32 `protobuf:"varint,160,opt,name=fflag,proto3,oneof"`
}
type Status_GroupId struct {
	GroupId int64 `protobuf:"varint,161,opt,name=group_id,json=groupId,proto3,oneof"`
}
type Status_ExpireTime struct {
	ExpireTime uint64 `protobuf:"varint,162,opt,name=expire_time,json=expireTime,proto3,oneof"`
}
type Status_Sgid struct {
	Sgid int64 `protobuf:"varint,163,opt,name=sgid,proto3,oneof"`
}
type Status_Fid struct {
	Fid uint64 `protobuf:"varint,166,opt,name=fid,proto3,oneof"`
}
type Status_CustomSource struct {
	CustomSource string `protobuf:"bytes,167,opt,name=custom_source,json=customSource,proto3,oneof"`
}
type Status_ObjectType struct {
	ObjectType string `protobuf:"bytes,170,opt,name=object_type,json=objectType,proto3,oneof"`
}
type Status_PageMarkLevel struct {
	PageMarkLevel uint64 `protobuf:"varint,171,opt,name=page_mark_level,json=pageMarkLevel,proto3,oneof"`
}
type Status_PhotoTag struct {
	PhotoTag string `protobuf:"bytes,173,opt,name=photoTag,proto3,oneof"`
}
type Status_ExtInfo struct {
	ExtInfo string `protobuf:"bytes,174,opt,name=ext_info,json=extInfo,proto3,oneof"`
}
type Status_StatusType struct {
	StatusType string `protobuf:"bytes,175,opt,name=status_type,json=statusType,proto3,oneof"`
}
type Status_BizFeature struct {
	BizFeature uint64 `protobuf:"varint,176,opt,name=biz_feature,json=bizFeature,proto3,oneof"`
}
type Status_PageType struct {
	PageType uint64 `protobuf:"varint,178,opt,name=page_type,json=pageType,proto3,oneof"`
}
type Status_IsLongText struct {
	IsLongText bool `protobuf:"varint,179,opt,name=isLongText,proto3,oneof"`
}
type Status_LongTextFid struct {
	LongTextFid string `protobuf:"bytes,180,opt,name=longTextFid,proto3,oneof"`
}
type Status_TextLength struct {
	TextLength int32 `protobuf:"varint,181,opt,name=textLength,proto3,oneof"`
}
type Status_Similarity struct {
	Similarity string `protobuf:"bytes,182,opt,name=similarity,proto3,oneof"`
}
type Status_TopicUuid struct {
	TopicUuid uint64 `protobuf:"varint,183,opt,name=topic_uuid,json=topicUuid,proto3,oneof"`
}
type Status_TopicId struct {
	TopicId string `protobuf:"bytes,184,opt,name=topic_id,json=topicId,proto3,oneof"`
}
type Status_SyncMblog struct {
	SyncMblog bool `protobuf:"varint,185,opt,name=sync_mblog,json=syncMblog,proto3,oneof"`
}
type Status_GifIds struct {
	GifIds string `protobuf:"bytes,186,opt,name=gif_ids,json=gifIds,proto3,oneof"`
}
type Status_ContentOnlyType struct {
	ContentOnlyType int32 `protobuf:"varint,187,opt,name=content_only_type,json=contentOnlyType,proto3,oneof"`
}
type Status_OriginalSource struct {
	OriginalSource string `protobuf:"bytes,188,opt,name=original_source,json=originalSource,proto3,oneof"`
}
type Status_ProcessedByV4 struct {
	ProcessedByV4 bool `protobuf:"varint,189,opt,name=processed_by_v4,json=processedByV4,proto3,oneof"`
}
type Status_RepostsCount struct {
	RepostsCount uint32 `protobuf:"varint,190,opt,name=reposts_count,json=repostsCount,proto3,oneof"`
}
type Status_CommentsCount struct {
	CommentsCount uint32 `protobuf:"varint,191,opt,name=comments_count,json=commentsCount,proto3,oneof"`
}
type Status_IsImportedTopic struct {
	IsImportedTopic bool `protobuf:"varint,192,opt,name=is_imported_topic,json=isImportedTopic,proto3,oneof"`
}
type Status_IfCanFlowInTopic struct {
	IfCanFlowInTopic bool `protobuf:"varint,193,opt,name=if_can_flow_in_topic,json=ifCanFlowInTopic,proto3,oneof"`
}
type Status_ApprovalMarkTime struct {
	ApprovalMarkTime uint64 `protobuf:"varint,194,opt,name=approval_mark_time,json=approvalMarkTime,proto3,oneof"`
}
type Status_WithComment struct {
	WithComment int32 `protobuf:"varint,195,opt,name=withComment,proto3,oneof"`
}
type Status_MblogVipType struct {
	MblogVipType uint32 `protobuf:"varint,198,opt,name=mblogVipType,proto3,oneof"`
}

func (*Status_Id) isStatus_IdPresent()                             {}
func (*Status_Text) isStatus_TextPresent()                         {}
func (*Status_CreatedAt) isStatus_CreatedAtPresent()               {}
func (*Status_Favorited) isStatus_FavoritedPresent()               {}
func (*Status_Mid) isStatus_MidPresent()                           {}
func (*Status_PostSource) isStatus_PostSourcePresent()             {}
func (*Status_Author) isStatus_AuthorPresent()                     {}
func (*Status_EditAt) isStatus_EditAtPresent()                     {}
func (*Status_EditCount) isStatus_EditCountPresent()               {}
func (*Status_IsHistory) isStatus_IsHistoryPresent()               {}
func (*Status_AdState) isStatus_AdStatePresent()                   {}
func (*Status_ContentAuth) isStatus_ContentAuthPresent()           {}
func (*Status_Rt) isStatus_RtPresent()                             {}
func (*Status_RtIdDb) isStatus_RtIdDbPresent()                     {}
func (*Status_RtMidDb) isStatus_RtMidDbPresent()                   {}
func (*Status_ParentRtIdDb) isStatus_ParentRtIdDbPresent()         {}
func (*Status_PicId) isStatus_PicIdPresent()                       {}
func (*Status_Latitude) isStatus_LatitudePresent()                 {}
func (*Status_Longitude) isStatus_LongitudePresent()               {}
func (*Status_Annotation) isStatus_AnnotationPresent()             {}
func (*Status_Ip) isStatus_IpPresent()                             {}
func (*Status_UidDb) isStatus_UidDbPresent()                       {}
func (*Status_Feature) isStatus_FeaturePresent()                   {}
func (*Status_State) isStatus_StatePresent()                       {}
func (*Status_ApiState) isStatus_ApiStatePresent()                 {}
func (*Status_WeiboState) isStatus_WeiboStatePresent()             {}
func (*Status_Mflag) isStatus_MflagPresent()                       {}
func (*Status_Vflag) isStatus_VflagPresent()                       {}
func (*Status_Fflag) isStatus_FflagPresent()                       {}
func (*Status_GroupId) isStatus_GroupIdPresent()                   {}
func (*Status_ExpireTime) isStatus_ExpireTimePresent()             {}
func (*Status_Sgid) isStatus_SgidPresent()                         {}
func (*Status_Fid) isStatus_FidPresent()                           {}
func (*Status_CustomSource) isStatus_CustomSourcePresent()         {}
func (*Status_ObjectType) isStatus_ObjectTypePresent()             {}
func (*Status_PageMarkLevel) isStatus_PageMarkLevelPresent()       {}
func (*Status_PhotoTag) isStatus_PhotoTagPresent()                 {}
func (*Status_ExtInfo) isStatus_ExtInfoPresent()                   {}
func (*Status_StatusType) isStatus_StatusTypePresent()             {}
func (*Status_BizFeature) isStatus_BizFeaturePresent()             {}
func (*Status_PageType) isStatus_PageTypePresent()                 {}
func (*Status_IsLongText) isStatus_IsLongTextPresent()             {}
func (*Status_LongTextFid) isStatus_LongTextFidPresent()           {}
func (*Status_TextLength) isStatus_TextLengthPresent()             {}
func (*Status_Similarity) isStatus_SimilarityPresent()             {}
func (*Status_TopicUuid) isStatus_TopicUuidPresent()               {}
func (*Status_TopicId) isStatus_TopicIdPresent()                   {}
func (*Status_SyncMblog) isStatus_SyncMblogPresent()               {}
func (*Status_GifIds) isStatus_GifIdsPresent()                     {}
func (*Status_ContentOnlyType) isStatus_ContentOnlyTypePresent()   {}
func (*Status_OriginalSource) isStatus_OriginalSourcePresent()     {}
func (*Status_ProcessedByV4) isStatus_ProcessedByV4Present()       {}
func (*Status_RepostsCount) isStatus_RepostsCountPresent()         {}
func (*Status_CommentsCount) isStatus_CommentsCountPresent()       {}
func (*Status_IsImportedTopic) isStatus_IsImportedTopicPresent()   {}
func (*Status_IfCanFlowInTopic) isStatus_IfCanFlowInTopicPresent() {}
func (*Status_ApprovalMarkTime) isStatus_ApprovalMarkTimePresent() {}
func (*Status_WithComment) isStatus_WithCommentPresent()           {}
func (*Status_MblogVipType) isStatus_MblogVipTypePresent()         {}

func (m *Status) GetIdPresent() isStatus_IdPresent {
	if m != nil {
		return m.IdPresent
	}
	return nil
}
func (m *Status) GetTextPresent() isStatus_TextPresent {
	if m != nil {
		return m.TextPresent
	}
	return nil
}
func (m *Status) GetCreatedAtPresent() isStatus_CreatedAtPresent {
	if m != nil {
		return m.CreatedAtPresent
	}
	return nil
}
func (m *Status) GetFavoritedPresent() isStatus_FavoritedPresent {
	if m != nil {
		return m.FavoritedPresent
	}
	return nil
}
func (m *Status) GetMidPresent() isStatus_MidPresent {
	if m != nil {
		return m.MidPresent
	}
	return nil
}
func (m *Status) GetPostSourcePresent() isStatus_PostSourcePresent {
	if m != nil {
		return m.PostSourcePresent
	}
	return nil
}
func (m *Status) GetAuthorPresent() isStatus_AuthorPresent {
	if m != nil {
		return m.AuthorPresent
	}
	return nil
}
func (m *Status) GetEditAtPresent() isStatus_EditAtPresent {
	if m != nil {
		return m.EditAtPresent
	}
	return nil
}
func (m *Status) GetEditCountPresent() isStatus_EditCountPresent {
	if m != nil {
		return m.EditCountPresent
	}
	return nil
}
func (m *Status) GetIsHistoryPresent() isStatus_IsHistoryPresent {
	if m != nil {
		return m.IsHistoryPresent
	}
	return nil
}
func (m *Status) GetAdStatePresent() isStatus_AdStatePresent {
	if m != nil {
		return m.AdStatePresent
	}
	return nil
}
func (m *Status) GetContentAuthPresent() isStatus_ContentAuthPresent {
	if m != nil {
		return m.ContentAuthPresent
	}
	return nil
}
func (m *Status) GetRtPresent() isStatus_RtPresent {
	if m != nil {
		return m.RtPresent
	}
	return nil
}
func (m *Status) GetRtIdDbPresent() isStatus_RtIdDbPresent {
	if m != nil {
		return m.RtIdDbPresent
	}
	return nil
}
func (m *Status) GetRtMidDbPresent() isStatus_RtMidDbPresent {
	if m != nil {
		return m.RtMidDbPresent
	}
	return nil
}
func (m *Status) GetParentRtIdDbPresent() isStatus_ParentRtIdDbPresent {
	if m != nil {
		return m.ParentRtIdDbPresent
	}
	return nil
}
func (m *Status) GetPicIdPresent() isStatus_PicIdPresent {
	if m != nil {
		return m.PicIdPresent
	}
	return nil
}
func (m *Status) GetLatitudePresent() isStatus_LatitudePresent {
	if m != nil {
		return m.LatitudePresent
	}
	return nil
}
func (m *Status) GetLongitudePresent() isStatus_LongitudePresent {
	if m != nil {
		return m.LongitudePresent
	}
	return nil
}
func (m *Status) GetAnnotationPresent() isStatus_AnnotationPresent {
	if m != nil {
		return m.AnnotationPresent
	}
	return nil
}
func (m *Status) GetIpPresent() isStatus_IpPresent {
	if m != nil {
		return m.IpPresent
	}
	return nil
}
func (m *Status) GetUidDbPresent() isStatus_UidDbPresent {
	if m != nil {
		return m.UidDbPresent
	}
	return nil
}
func (m *Status) GetFeaturePresent() isStatus_FeaturePresent {
	if m != nil {
		return m.FeaturePresent
	}
	return nil
}
func (m *Status) GetStatePresent() isStatus_StatePresent {
	if m != nil {
		return m.StatePresent
	}
	return nil
}
func (m *Status) GetApiStatePresent() isStatus_ApiStatePresent {
	if m != nil {
		return m.ApiStatePresent
	}
	return nil
}
func (m *Status) GetWeiboStatePresent() isStatus_WeiboStatePresent {
	if m != nil {
		return m.WeiboStatePresent
	}
	return nil
}
func (m *Status) GetMflagPresent() isStatus_MflagPresent {
	if m != nil {
		return m.MflagPresent
	}
	return nil
}
func (m *Status) GetVflagPresent() isStatus_VflagPresent {
	if m != nil {
		return m.VflagPresent
	}
	return nil
}
func (m *Status) GetFflagPresent() isStatus_FflagPresent {
	if m != nil {
		return m.FflagPresent
	}
	return nil
}
func (m *Status) GetGroupIdPresent() isStatus_GroupIdPresent {
	if m != nil {
		return m.GroupIdPresent
	}
	return nil
}
func (m *Status) GetExpireTimePresent() isStatus_ExpireTimePresent {
	if m != nil {
		return m.ExpireTimePresent
	}
	return nil
}
func (m *Status) GetSgidPresent() isStatus_SgidPresent {
	if m != nil {
		return m.SgidPresent
	}
	return nil
}
func (m *Status) GetFidPresent() isStatus_FidPresent {
	if m != nil {
		return m.FidPresent
	}
	return nil
}
func (m *Status) GetCustomSourcePresent() isStatus_CustomSourcePresent {
	if m != nil {
		return m.CustomSourcePresent
	}
	return nil
}
func (m *Status) GetObjectTypePresent() isStatus_ObjectTypePresent {
	if m != nil {
		return m.ObjectTypePresent
	}
	return nil
}
func (m *Status) GetPageMarkLevelPresent() isStatus_PageMarkLevelPresent {
	if m != nil {
		return m.PageMarkLevelPresent
	}
	return nil
}
func (m *Status) GetPhotoTagPresent() isStatus_PhotoTagPresent {
	if m != nil {
		return m.PhotoTagPresent
	}
	return nil
}
func (m *Status) GetExtInfoPresent() isStatus_ExtInfoPresent {
	if m != nil {
		return m.ExtInfoPresent
	}
	return nil
}
func (m *Status) GetStatusTypePresent() isStatus_StatusTypePresent {
	if m != nil {
		return m.StatusTypePresent
	}
	return nil
}
func (m *Status) GetBizFeaturePresent() isStatus_BizFeaturePresent {
	if m != nil {
		return m.BizFeaturePresent
	}
	return nil
}
func (m *Status) GetPageTypePresent() isStatus_PageTypePresent {
	if m != nil {
		return m.PageTypePresent
	}
	return nil
}
func (m *Status) GetIsLongTextPresent() isStatus_IsLongTextPresent {
	if m != nil {
		return m.IsLongTextPresent
	}
	return nil
}
func (m *Status) GetLongTextFidPresent() isStatus_LongTextFidPresent {
	if m != nil {
		return m.LongTextFidPresent
	}
	return nil
}
func (m *Status) GetTextLengthPresent() isStatus_TextLengthPresent {
	if m != nil {
		return m.TextLengthPresent
	}
	return nil
}
func (m *Status) GetSimilarityPresent() isStatus_SimilarityPresent {
	if m != nil {
		return m.SimilarityPresent
	}
	return nil
}
func (m *Status) GetTopicUuidPresent() isStatus_TopicUuidPresent {
	if m != nil {
		return m.TopicUuidPresent
	}
	return nil
}
func (m *Status) GetTopicIdPresent() isStatus_TopicIdPresent {
	if m != nil {
		return m.TopicIdPresent
	}
	return nil
}
func (m *Status) GetSyncMblogPresent() isStatus_SyncMblogPresent {
	if m != nil {
		return m.SyncMblogPresent
	}
	return nil
}
func (m *Status) GetGifIdsPresent() isStatus_GifIdsPresent {
	if m != nil {
		return m.GifIdsPresent
	}
	return nil
}
func (m *Status) GetContentOnlyTypePresent() isStatus_ContentOnlyTypePresent {
	if m != nil {
		return m.ContentOnlyTypePresent
	}
	return nil
}
func (m *Status) GetOriginalSourcePresent() isStatus_OriginalSourcePresent {
	if m != nil {
		return m.OriginalSourcePresent
	}
	return nil
}
func (m *Status) GetProcessedByV4Present() isStatus_ProcessedByV4Present {
	if m != nil {
		return m.ProcessedByV4Present
	}
	return nil
}
func (m *Status) GetRepostsCountPresent() isStatus_RepostsCountPresent {
	if m != nil {
		return m.RepostsCountPresent
	}
	return nil
}
func (m *Status) GetCommentsCountPresent() isStatus_CommentsCountPresent {
	if m != nil {
		return m.CommentsCountPresent
	}
	return nil
}
func (m *Status) GetIsImportedTopicPresent() isStatus_IsImportedTopicPresent {
	if m != nil {
		return m.IsImportedTopicPresent
	}
	return nil
}
func (m *Status) GetIfCanFlowInTopicPresent() isStatus_IfCanFlowInTopicPresent {
	if m != nil {
		return m.IfCanFlowInTopicPresent
	}
	return nil
}
func (m *Status) GetApprovalMarkTimePresent() isStatus_ApprovalMarkTimePresent {
	if m != nil {
		return m.ApprovalMarkTimePresent
	}
	return nil
}
func (m *Status) GetWithCommentPresent() isStatus_WithCommentPresent {
	if m != nil {
		return m.WithCommentPresent
	}
	return nil
}
func (m *Status) GetMblogVipTypePresent() isStatus_MblogVipTypePresent {
	if m != nil {
		return m.MblogVipTypePresent
	}
	return nil
}

func (m *Status) GetId() uint64 {
	if x, ok := m.GetIdPresent().(*Status_Id); ok {
		return x.Id
	}
	return 0
}

func (m *Status) GetText() string {
	if x, ok := m.GetTextPresent().(*Status_Text); ok {
		return x.Text
	}
	return ""
}

func (m *Status) GetCreatedAt() uint64 {
	if x, ok := m.GetCreatedAtPresent().(*Status_CreatedAt); ok {
		return x.CreatedAt
	}
	return 0
}

func (m *Status) GetFavorited() bool {
	if x, ok := m.GetFavoritedPresent().(*Status_Favorited); ok {
		return x.Favorited
	}
	return false
}

func (m *Status) GetMid() uint64 {
	if x, ok := m.GetMidPresent().(*Status_Mid); ok {
		return x.Mid
	}
	return 0
}

func (m *Status) GetPostSource() *PostSource {
	if x, ok := m.GetPostSourcePresent().(*Status_PostSource); ok {
		return x.PostSource
	}
	return nil
}

func (m *Status) GetAuthor() *SinaUser {
	if x, ok := m.GetAuthorPresent().(*Status_Author); ok {
		return x.Author
	}
	return nil
}

func (m *Status) GetEditAt() uint64 {
	if x, ok := m.GetEditAtPresent().(*Status_EditAt); ok {
		return x.EditAt
	}
	return 0
}

func (m *Status) GetEditCount() uint32 {
	if x, ok := m.GetEditCountPresent().(*Status_EditCount); ok {
		return x.EditCount
	}
	return 0
}

func (m *Status) GetIsHistory() bool {
	if x, ok := m.GetIsHistoryPresent().(*Status_IsHistory); ok {
		return x.IsHistory
	}
	return false
}

func (m *Status) GetAdState() uint32 {
	if x, ok := m.GetAdStatePresent().(*Status_AdState); ok {
		return x.AdState
	}
	return 0
}

func (m *Status) GetContentAuth() uint32 {
	if x, ok := m.GetContentAuthPresent().(*Status_ContentAuth); ok {
		return x.ContentAuth
	}
	return 0
}

func (m *Status) GetRt() *Status {
	if x, ok := m.GetRtPresent().(*Status_Rt); ok {
		return x.Rt
	}
	return nil
}

func (m *Status) GetRtIdDb() uint64 {
	if x, ok := m.GetRtIdDbPresent().(*Status_RtIdDb); ok {
		return x.RtIdDb
	}
	return 0
}

func (m *Status) GetRtMidDb() uint64 {
	if x, ok := m.GetRtMidDbPresent().(*Status_RtMidDb); ok {
		return x.RtMidDb
	}
	return 0
}

func (m *Status) GetParentRtIdDb() uint64 {
	if x, ok := m.GetParentRtIdDbPresent().(*Status_ParentRtIdDb); ok {
		return x.ParentRtIdDb
	}
	return 0
}

func (m *Status) GetPicId() string {
	if x, ok := m.GetPicIdPresent().(*Status_PicId); ok {
		return x.PicId
	}
	return ""
}

func (m *Status) GetLatitude() string {
	if x, ok := m.GetLatitudePresent().(*Status_Latitude); ok {
		return x.Latitude
	}
	return ""
}

func (m *Status) GetLongitude() string {
	if x, ok := m.GetLongitudePresent().(*Status_Longitude); ok {
		return x.Longitude
	}
	return ""
}

func (m *Status) GetAnnotation() string {
	if x, ok := m.GetAnnotationPresent().(*Status_Annotation); ok {
		return x.Annotation
	}
	return ""
}

func (m *Status) GetIp() uint32 {
	if x, ok := m.GetIpPresent().(*Status_Ip); ok {
		return x.Ip
	}
	return 0
}

func (m *Status) GetUidDb() uint64 {
	if x, ok := m.GetUidDbPresent().(*Status_UidDb); ok {
		return x.UidDb
	}
	return 0
}

func (m *Status) GetFeature() uint64 {
	if x, ok := m.GetFeaturePresent().(*Status_Feature); ok {
		return x.Feature
	}
	return 0
}

func (m *Status) GetState() uint32 {
	if x, ok := m.GetStatePresent().(*Status_State); ok {
		return x.State
	}
	return 0
}

func (m *Status) GetApiState() ApiState {
	if x, ok := m.GetApiStatePresent().(*Status_ApiState); ok {
		return x.ApiState
	}
	return ApiState_UNKNOWN
}

func (m *Status) GetWeiboState() uint64 {
	if x, ok := m.GetWeiboStatePresent().(*Status_WeiboState); ok {
		return x.WeiboState
	}
	return 0
}

func (m *Status) GetMflag() int32 {
	if x, ok := m.GetMflagPresent().(*Status_Mflag); ok {
		return x.Mflag
	}
	return 0
}

func (m *Status) GetVflag() uint32 {
	if x, ok := m.GetVflagPresent().(*Status_Vflag); ok {
		return x.Vflag
	}
	return 0
}

func (m *Status) GetFflag() uint32 {
	if x, ok := m.GetFflagPresent().(*Status_Fflag); ok {
		return x.Fflag
	}
	return 0
}

func (m *Status) GetGroupId() int64 {
	if x, ok := m.GetGroupIdPresent().(*Status_GroupId); ok {
		return x.GroupId
	}
	return 0
}

func (m *Status) GetExpireTime() uint64 {
	if x, ok := m.GetExpireTimePresent().(*Status_ExpireTime); ok {
		return x.ExpireTime
	}
	return 0
}

func (m *Status) GetSgid() int64 {
	if x, ok := m.GetSgidPresent().(*Status_Sgid); ok {
		return x.Sgid
	}
	return 0
}

func (m *Status) GetFid() uint64 {
	if x, ok := m.GetFidPresent().(*Status_Fid); ok {
		return x.Fid
	}
	return 0
}

func (m *Status) GetCustomSource() string {
	if x, ok := m.GetCustomSourcePresent().(*Status_CustomSource); ok {
		return x.CustomSource
	}
	return ""
}

func (m *Status) GetObjectType() string {
	if x, ok := m.GetObjectTypePresent().(*Status_ObjectType); ok {
		return x.ObjectType
	}
	return ""
}

func (m *Status) GetPageMarkLevel() uint64 {
	if x, ok := m.GetPageMarkLevelPresent().(*Status_PageMarkLevel); ok {
		return x.PageMarkLevel
	}
	return 0
}

func (m *Status) GetPhotoTag() string {
	if x, ok := m.GetPhotoTagPresent().(*Status_PhotoTag); ok {
		return x.PhotoTag
	}
	return ""
}

func (m *Status) GetExtInfo() string {
	if x, ok := m.GetExtInfoPresent().(*Status_ExtInfo); ok {
		return x.ExtInfo
	}
	return ""
}

func (m *Status) GetStatusType() string {
	if x, ok := m.GetStatusTypePresent().(*Status_StatusType); ok {
		return x.StatusType
	}
	return ""
}

func (m *Status) GetBizFeature() uint64 {
	if x, ok := m.GetBizFeaturePresent().(*Status_BizFeature); ok {
		return x.BizFeature
	}
	return 0
}

func (m *Status) GetPageType() uint64 {
	if x, ok := m.GetPageTypePresent().(*Status_PageType); ok {
		return x.PageType
	}
	return 0
}

func (m *Status) GetIsLongText() bool {
	if x, ok := m.GetIsLongTextPresent().(*Status_IsLongText); ok {
		return x.IsLongText
	}
	return false
}

func (m *Status) GetLongTextFid() string {
	if x, ok := m.GetLongTextFidPresent().(*Status_LongTextFid); ok {
		return x.LongTextFid
	}
	return ""
}

func (m *Status) GetTextLength() int32 {
	if x, ok := m.GetTextLengthPresent().(*Status_TextLength); ok {
		return x.TextLength
	}
	return 0
}

func (m *Status) GetSimilarity() string {
	if x, ok := m.GetSimilarityPresent().(*Status_Similarity); ok {
		return x.Similarity
	}
	return ""
}

func (m *Status) GetTopicUuid() uint64 {
	if x, ok := m.GetTopicUuidPresent().(*Status_TopicUuid); ok {
		return x.TopicUuid
	}
	return 0
}

func (m *Status) GetTopicId() string {
	if x, ok := m.GetTopicIdPresent().(*Status_TopicId); ok {
		return x.TopicId
	}
	return ""
}

func (m *Status) GetSyncMblog() bool {
	if x, ok := m.GetSyncMblogPresent().(*Status_SyncMblog); ok {
		return x.SyncMblog
	}
	return false
}

func (m *Status) GetGifIds() string {
	if x, ok := m.GetGifIdsPresent().(*Status_GifIds); ok {
		return x.GifIds
	}
	return ""
}

func (m *Status) GetContentOnlyType() int32 {
	if x, ok := m.GetContentOnlyTypePresent().(*Status_ContentOnlyType); ok {
		return x.ContentOnlyType
	}
	return 0
}

func (m *Status) GetOriginalSource() string {
	if x, ok := m.GetOriginalSourcePresent().(*Status_OriginalSource); ok {
		return x.OriginalSource
	}
	return ""
}

func (m *Status) GetProcessedByV4() bool {
	if x, ok := m.GetProcessedByV4Present().(*Status_ProcessedByV4); ok {
		return x.ProcessedByV4
	}
	return false
}

func (m *Status) GetRepostsCount() uint32 {
	if x, ok := m.GetRepostsCountPresent().(*Status_RepostsCount); ok {
		return x.RepostsCount
	}
	return 0
}

func (m *Status) GetCommentsCount() uint32 {
	if x, ok := m.GetCommentsCountPresent().(*Status_CommentsCount); ok {
		return x.CommentsCount
	}
	return 0
}

func (m *Status) GetIsImportedTopic() bool {
	if x, ok := m.GetIsImportedTopicPresent().(*Status_IsImportedTopic); ok {
		return x.IsImportedTopic
	}
	return false
}

func (m *Status) GetIfCanFlowInTopic() bool {
	if x, ok := m.GetIfCanFlowInTopicPresent().(*Status_IfCanFlowInTopic); ok {
		return x.IfCanFlowInTopic
	}
	return false
}

func (m *Status) GetApprovalMarkTime() uint64 {
	if x, ok := m.GetApprovalMarkTimePresent().(*Status_ApprovalMarkTime); ok {
		return x.ApprovalMarkTime
	}
	return 0
}

func (m *Status) GetWithComment() int32 {
	if x, ok := m.GetWithCommentPresent().(*Status_WithComment); ok {
		return x.WithComment
	}
	return 0
}

func (m *Status) GetMblogVipType() uint32 {
	if x, ok := m.GetMblogVipTypePresent().(*Status_MblogVipType); ok {
		return x.MblogVipType
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Status) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Status_OneofMarshaler, _Status_OneofUnmarshaler, _Status_OneofSizer, []interface{}{
		(*Status_Id)(nil),
		(*Status_Text)(nil),
		(*Status_CreatedAt)(nil),
		(*Status_Favorited)(nil),
		(*Status_Mid)(nil),
		(*Status_PostSource)(nil),
		(*Status_Author)(nil),
		(*Status_EditAt)(nil),
		(*Status_EditCount)(nil),
		(*Status_IsHistory)(nil),
		(*Status_AdState)(nil),
		(*Status_ContentAuth)(nil),
		(*Status_Rt)(nil),
		(*Status_RtIdDb)(nil),
		(*Status_RtMidDb)(nil),
		(*Status_ParentRtIdDb)(nil),
		(*Status_PicId)(nil),
		(*Status_Latitude)(nil),
		(*Status_Longitude)(nil),
		(*Status_Annotation)(nil),
		(*Status_Ip)(nil),
		(*Status_UidDb)(nil),
		(*Status_Feature)(nil),
		(*Status_State)(nil),
		(*Status_ApiState)(nil),
		(*Status_WeiboState)(nil),
		(*Status_Mflag)(nil),
		(*Status_Vflag)(nil),
		(*Status_Fflag)(nil),
		(*Status_GroupId)(nil),
		(*Status_ExpireTime)(nil),
		(*Status_Sgid)(nil),
		(*Status_Fid)(nil),
		(*Status_CustomSource)(nil),
		(*Status_ObjectType)(nil),
		(*Status_PageMarkLevel)(nil),
		(*Status_PhotoTag)(nil),
		(*Status_ExtInfo)(nil),
		(*Status_StatusType)(nil),
		(*Status_BizFeature)(nil),
		(*Status_PageType)(nil),
		(*Status_IsLongText)(nil),
		(*Status_LongTextFid)(nil),
		(*Status_TextLength)(nil),
		(*Status_Similarity)(nil),
		(*Status_TopicUuid)(nil),
		(*Status_TopicId)(nil),
		(*Status_SyncMblog)(nil),
		(*Status_GifIds)(nil),
		(*Status_ContentOnlyType)(nil),
		(*Status_OriginalSource)(nil),
		(*Status_ProcessedByV4)(nil),
		(*Status_RepostsCount)(nil),
		(*Status_CommentsCount)(nil),
		(*Status_IsImportedTopic)(nil),
		(*Status_IfCanFlowInTopic)(nil),
		(*Status_ApprovalMarkTime)(nil),
		(*Status_WithComment)(nil),
		(*Status_MblogVipType)(nil),
	}
}

func _Status_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Status)
	// id_present
	switch x := m.IdPresent.(type) {
	case *Status_Id:
		_ = b.EncodeVarint(101<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Id))
	case nil:
	default:
		return fmt.Errorf("Status.IdPresent has unexpected type %T", x)
	}
	// text_present
	switch x := m.TextPresent.(type) {
	case *Status_Text:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Text)
	case nil:
	default:
		return fmt.Errorf("Status.TextPresent has unexpected type %T", x)
	}
	// created_at_present
	switch x := m.CreatedAtPresent.(type) {
	case *Status_CreatedAt:
		_ = b.EncodeVarint(103<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.CreatedAt))
	case nil:
	default:
		return fmt.Errorf("Status.CreatedAtPresent has unexpected type %T", x)
	}
	// favorited_present
	switch x := m.FavoritedPresent.(type) {
	case *Status_Favorited:
		t := uint64(0)
		if x.Favorited {
			t = 1
		}
		_ = b.EncodeVarint(108<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.FavoritedPresent has unexpected type %T", x)
	}
	// mid_present
	switch x := m.MidPresent.(type) {
	case *Status_Mid:
		_ = b.EncodeVarint(109<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Mid))
	case nil:
	default:
		return fmt.Errorf("Status.MidPresent has unexpected type %T", x)
	}
	// post_source_present
	switch x := m.PostSourcePresent.(type) {
	case *Status_PostSource:
		_ = b.EncodeVarint(110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PostSource); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Status.PostSourcePresent has unexpected type %T", x)
	}
	// author_present
	switch x := m.AuthorPresent.(type) {
	case *Status_Author:
		_ = b.EncodeVarint(111<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Author); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Status.AuthorPresent has unexpected type %T", x)
	}
	// edit_at_present
	switch x := m.EditAtPresent.(type) {
	case *Status_EditAt:
		_ = b.EncodeVarint(112<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.EditAt))
	case nil:
	default:
		return fmt.Errorf("Status.EditAtPresent has unexpected type %T", x)
	}
	// edit_count_present
	switch x := m.EditCountPresent.(type) {
	case *Status_EditCount:
		_ = b.EncodeVarint(113<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.EditCount))
	case nil:
	default:
		return fmt.Errorf("Status.EditCountPresent has unexpected type %T", x)
	}
	// is_history_present
	switch x := m.IsHistoryPresent.(type) {
	case *Status_IsHistory:
		t := uint64(0)
		if x.IsHistory {
			t = 1
		}
		_ = b.EncodeVarint(114<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.IsHistoryPresent has unexpected type %T", x)
	}
	// ad_state_present
	switch x := m.AdStatePresent.(type) {
	case *Status_AdState:
		_ = b.EncodeVarint(115<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.AdState))
	case nil:
	default:
		return fmt.Errorf("Status.AdStatePresent has unexpected type %T", x)
	}
	// content_auth_present
	switch x := m.ContentAuthPresent.(type) {
	case *Status_ContentAuth:
		_ = b.EncodeVarint(116<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ContentAuth))
	case nil:
	default:
		return fmt.Errorf("Status.ContentAuthPresent has unexpected type %T", x)
	}
	// rt_present
	switch x := m.RtPresent.(type) {
	case *Status_Rt:
		_ = b.EncodeVarint(120<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rt); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Status.RtPresent has unexpected type %T", x)
	}
	// rt_id_db_present
	switch x := m.RtIdDbPresent.(type) {
	case *Status_RtIdDb:
		_ = b.EncodeVarint(121<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.RtIdDb))
	case nil:
	default:
		return fmt.Errorf("Status.RtIdDbPresent has unexpected type %T", x)
	}
	// rt_mid_db_present
	switch x := m.RtMidDbPresent.(type) {
	case *Status_RtMidDb:
		_ = b.EncodeVarint(122<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.RtMidDb))
	case nil:
	default:
		return fmt.Errorf("Status.RtMidDbPresent has unexpected type %T", x)
	}
	// parent_rt_id_db_present
	switch x := m.ParentRtIdDbPresent.(type) {
	case *Status_ParentRtIdDb:
		_ = b.EncodeVarint(123<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ParentRtIdDb))
	case nil:
	default:
		return fmt.Errorf("Status.ParentRtIdDbPresent has unexpected type %T", x)
	}
	// pic_id_present
	switch x := m.PicIdPresent.(type) {
	case *Status_PicId:
		_ = b.EncodeVarint(131<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.PicId)
	case nil:
	default:
		return fmt.Errorf("Status.PicIdPresent has unexpected type %T", x)
	}
	// latitude_present
	switch x := m.LatitudePresent.(type) {
	case *Status_Latitude:
		_ = b.EncodeVarint(141<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Latitude)
	case nil:
	default:
		return fmt.Errorf("Status.LatitudePresent has unexpected type %T", x)
	}
	// longitude_present
	switch x := m.LongitudePresent.(type) {
	case *Status_Longitude:
		_ = b.EncodeVarint(142<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Longitude)
	case nil:
	default:
		return fmt.Errorf("Status.LongitudePresent has unexpected type %T", x)
	}
	// annotation_present
	switch x := m.AnnotationPresent.(type) {
	case *Status_Annotation:
		_ = b.EncodeVarint(146<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Annotation)
	case nil:
	default:
		return fmt.Errorf("Status.AnnotationPresent has unexpected type %T", x)
	}
	// ip_present
	switch x := m.IpPresent.(type) {
	case *Status_Ip:
		_ = b.EncodeVarint(151<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Ip))
	case nil:
	default:
		return fmt.Errorf("Status.IpPresent has unexpected type %T", x)
	}
	// uid_db_present
	switch x := m.UidDbPresent.(type) {
	case *Status_UidDb:
		_ = b.EncodeVarint(152<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.UidDb))
	case nil:
	default:
		return fmt.Errorf("Status.UidDbPresent has unexpected type %T", x)
	}
	// feature_present
	switch x := m.FeaturePresent.(type) {
	case *Status_Feature:
		_ = b.EncodeVarint(153<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Feature))
	case nil:
	default:
		return fmt.Errorf("Status.FeaturePresent has unexpected type %T", x)
	}
	// state_present
	switch x := m.StatePresent.(type) {
	case *Status_State:
		_ = b.EncodeVarint(155<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.State))
	case nil:
	default:
		return fmt.Errorf("Status.StatePresent has unexpected type %T", x)
	}
	// api_state_present
	switch x := m.ApiStatePresent.(type) {
	case *Status_ApiState:
		_ = b.EncodeVarint(156<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ApiState))
	case nil:
	default:
		return fmt.Errorf("Status.ApiStatePresent has unexpected type %T", x)
	}
	// WeiboState_present
	switch x := m.WeiboStatePresent.(type) {
	case *Status_WeiboState:
		_ = b.EncodeVarint(157<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.WeiboState))
	case nil:
	default:
		return fmt.Errorf("Status.WeiboStatePresent has unexpected type %T", x)
	}
	// mflag_present
	switch x := m.MflagPresent.(type) {
	case *Status_Mflag:
		_ = b.EncodeVarint(158<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Mflag))
	case nil:
	default:
		return fmt.Errorf("Status.MflagPresent has unexpected type %T", x)
	}
	// vflag_present
	switch x := m.VflagPresent.(type) {
	case *Status_Vflag:
		_ = b.EncodeVarint(159<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Vflag))
	case nil:
	default:
		return fmt.Errorf("Status.VflagPresent has unexpected type %T", x)
	}
	// fflag_present
	switch x := m.FflagPresent.(type) {
	case *Status_Fflag:
		_ = b.EncodeVarint(160<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Fflag))
	case nil:
	default:
		return fmt.Errorf("Status.FflagPresent has unexpected type %T", x)
	}
	// group_id_present
	switch x := m.GroupIdPresent.(type) {
	case *Status_GroupId:
		_ = b.EncodeVarint(161<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.GroupId))
	case nil:
	default:
		return fmt.Errorf("Status.GroupIdPresent has unexpected type %T", x)
	}
	// expire_time_present
	switch x := m.ExpireTimePresent.(type) {
	case *Status_ExpireTime:
		_ = b.EncodeVarint(162<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ExpireTime))
	case nil:
	default:
		return fmt.Errorf("Status.ExpireTimePresent has unexpected type %T", x)
	}
	// sgid_present
	switch x := m.SgidPresent.(type) {
	case *Status_Sgid:
		_ = b.EncodeVarint(163<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Sgid))
	case nil:
	default:
		return fmt.Errorf("Status.SgidPresent has unexpected type %T", x)
	}
	// fid_present
	switch x := m.FidPresent.(type) {
	case *Status_Fid:
		_ = b.EncodeVarint(166<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Fid))
	case nil:
	default:
		return fmt.Errorf("Status.FidPresent has unexpected type %T", x)
	}
	// custom_source_present
	switch x := m.CustomSourcePresent.(type) {
	case *Status_CustomSource:
		_ = b.EncodeVarint(167<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.CustomSource)
	case nil:
	default:
		return fmt.Errorf("Status.CustomSourcePresent has unexpected type %T", x)
	}
	// object_type_present
	switch x := m.ObjectTypePresent.(type) {
	case *Status_ObjectType:
		_ = b.EncodeVarint(170<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.ObjectType)
	case nil:
	default:
		return fmt.Errorf("Status.ObjectTypePresent has unexpected type %T", x)
	}
	// page_mark_level_present
	switch x := m.PageMarkLevelPresent.(type) {
	case *Status_PageMarkLevel:
		_ = b.EncodeVarint(171<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.PageMarkLevel))
	case nil:
	default:
		return fmt.Errorf("Status.PageMarkLevelPresent has unexpected type %T", x)
	}
	// photoTag_present
	switch x := m.PhotoTagPresent.(type) {
	case *Status_PhotoTag:
		_ = b.EncodeVarint(173<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.PhotoTag)
	case nil:
	default:
		return fmt.Errorf("Status.PhotoTagPresent has unexpected type %T", x)
	}
	// ext_info_present
	switch x := m.ExtInfoPresent.(type) {
	case *Status_ExtInfo:
		_ = b.EncodeVarint(174<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.ExtInfo)
	case nil:
	default:
		return fmt.Errorf("Status.ExtInfoPresent has unexpected type %T", x)
	}
	// status_type_present
	switch x := m.StatusTypePresent.(type) {
	case *Status_StatusType:
		_ = b.EncodeVarint(175<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.StatusType)
	case nil:
	default:
		return fmt.Errorf("Status.StatusTypePresent has unexpected type %T", x)
	}
	// biz_feature_present
	switch x := m.BizFeaturePresent.(type) {
	case *Status_BizFeature:
		_ = b.EncodeVarint(176<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.BizFeature))
	case nil:
	default:
		return fmt.Errorf("Status.BizFeaturePresent has unexpected type %T", x)
	}
	// page_type_present
	switch x := m.PageTypePresent.(type) {
	case *Status_PageType:
		_ = b.EncodeVarint(178<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.PageType))
	case nil:
	default:
		return fmt.Errorf("Status.PageTypePresent has unexpected type %T", x)
	}
	// isLongText_present
	switch x := m.IsLongTextPresent.(type) {
	case *Status_IsLongText:
		t := uint64(0)
		if x.IsLongText {
			t = 1
		}
		_ = b.EncodeVarint(179<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.IsLongTextPresent has unexpected type %T", x)
	}
	// longTextFid_present
	switch x := m.LongTextFidPresent.(type) {
	case *Status_LongTextFid:
		_ = b.EncodeVarint(180<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.LongTextFid)
	case nil:
	default:
		return fmt.Errorf("Status.LongTextFidPresent has unexpected type %T", x)
	}
	// textLength_present
	switch x := m.TextLengthPresent.(type) {
	case *Status_TextLength:
		_ = b.EncodeVarint(181<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.TextLength))
	case nil:
	default:
		return fmt.Errorf("Status.TextLengthPresent has unexpected type %T", x)
	}
	// similarity_present
	switch x := m.SimilarityPresent.(type) {
	case *Status_Similarity:
		_ = b.EncodeVarint(182<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Similarity)
	case nil:
	default:
		return fmt.Errorf("Status.SimilarityPresent has unexpected type %T", x)
	}
	// topic_uuid_present
	switch x := m.TopicUuidPresent.(type) {
	case *Status_TopicUuid:
		_ = b.EncodeVarint(183<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.TopicUuid))
	case nil:
	default:
		return fmt.Errorf("Status.TopicUuidPresent has unexpected type %T", x)
	}
	// topic_id_present
	switch x := m.TopicIdPresent.(type) {
	case *Status_TopicId:
		_ = b.EncodeVarint(184<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.TopicId)
	case nil:
	default:
		return fmt.Errorf("Status.TopicIdPresent has unexpected type %T", x)
	}
	// sync_mblog_present
	switch x := m.SyncMblogPresent.(type) {
	case *Status_SyncMblog:
		t := uint64(0)
		if x.SyncMblog {
			t = 1
		}
		_ = b.EncodeVarint(185<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.SyncMblogPresent has unexpected type %T", x)
	}
	// gif_ids_present
	switch x := m.GifIdsPresent.(type) {
	case *Status_GifIds:
		_ = b.EncodeVarint(186<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.GifIds)
	case nil:
	default:
		return fmt.Errorf("Status.GifIdsPresent has unexpected type %T", x)
	}
	// content_only_type_present
	switch x := m.ContentOnlyTypePresent.(type) {
	case *Status_ContentOnlyType:
		_ = b.EncodeVarint(187<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ContentOnlyType))
	case nil:
	default:
		return fmt.Errorf("Status.ContentOnlyTypePresent has unexpected type %T", x)
	}
	// original_source_present
	switch x := m.OriginalSourcePresent.(type) {
	case *Status_OriginalSource:
		_ = b.EncodeVarint(188<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.OriginalSource)
	case nil:
	default:
		return fmt.Errorf("Status.OriginalSourcePresent has unexpected type %T", x)
	}
	// processed_by_v4_present
	switch x := m.ProcessedByV4Present.(type) {
	case *Status_ProcessedByV4:
		t := uint64(0)
		if x.ProcessedByV4 {
			t = 1
		}
		_ = b.EncodeVarint(189<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.ProcessedByV4Present has unexpected type %T", x)
	}
	// reposts_count_present
	switch x := m.RepostsCountPresent.(type) {
	case *Status_RepostsCount:
		_ = b.EncodeVarint(190<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.RepostsCount))
	case nil:
	default:
		return fmt.Errorf("Status.RepostsCountPresent has unexpected type %T", x)
	}
	// comments_count_present
	switch x := m.CommentsCountPresent.(type) {
	case *Status_CommentsCount:
		_ = b.EncodeVarint(191<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.CommentsCount))
	case nil:
	default:
		return fmt.Errorf("Status.CommentsCountPresent has unexpected type %T", x)
	}
	// is_imported_topic_present
	switch x := m.IsImportedTopicPresent.(type) {
	case *Status_IsImportedTopic:
		t := uint64(0)
		if x.IsImportedTopic {
			t = 1
		}
		_ = b.EncodeVarint(192<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.IsImportedTopicPresent has unexpected type %T", x)
	}
	// if_can_flow_in_topic_present
	switch x := m.IfCanFlowInTopicPresent.(type) {
	case *Status_IfCanFlowInTopic:
		t := uint64(0)
		if x.IfCanFlowInTopic {
			t = 1
		}
		_ = b.EncodeVarint(193<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Status.IfCanFlowInTopicPresent has unexpected type %T", x)
	}
	// approval_mark_time_present
	switch x := m.ApprovalMarkTimePresent.(type) {
	case *Status_ApprovalMarkTime:
		_ = b.EncodeVarint(194<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ApprovalMarkTime))
	case nil:
	default:
		return fmt.Errorf("Status.ApprovalMarkTimePresent has unexpected type %T", x)
	}
	// withComment_present
	switch x := m.WithCommentPresent.(type) {
	case *Status_WithComment:
		_ = b.EncodeVarint(195<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.WithComment))
	case nil:
	default:
		return fmt.Errorf("Status.WithCommentPresent has unexpected type %T", x)
	}
	// mblogVipType_present
	switch x := m.MblogVipTypePresent.(type) {
	case *Status_MblogVipType:
		_ = b.EncodeVarint(198<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.MblogVipType))
	case nil:
	default:
		return fmt.Errorf("Status.MblogVipTypePresent has unexpected type %T", x)
	}
	return nil
}

func _Status_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Status)
	switch tag {
	case 101: // id_present.id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IdPresent = &Status_Id{x}
		return true, err
	case 102: // text_present.text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TextPresent = &Status_Text{x}
		return true, err
	case 103: // created_at_present.created_at
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CreatedAtPresent = &Status_CreatedAt{x}
		return true, err
	case 108: // favorited_present.favorited
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FavoritedPresent = &Status_Favorited{x != 0}
		return true, err
	case 109: // mid_present.mid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MidPresent = &Status_Mid{x}
		return true, err
	case 110: // post_source_present.post_source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PostSource)
		err := b.DecodeMessage(msg)
		m.PostSourcePresent = &Status_PostSource{msg}
		return true, err
	case 111: // author_present.author
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SinaUser)
		err := b.DecodeMessage(msg)
		m.AuthorPresent = &Status_Author{msg}
		return true, err
	case 112: // edit_at_present.edit_at
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EditAtPresent = &Status_EditAt{x}
		return true, err
	case 113: // edit_count_present.edit_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EditCountPresent = &Status_EditCount{uint32(x)}
		return true, err
	case 114: // is_history_present.is_history
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IsHistoryPresent = &Status_IsHistory{x != 0}
		return true, err
	case 115: // ad_state_present.ad_state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AdStatePresent = &Status_AdState{uint32(x)}
		return true, err
	case 116: // content_auth_present.content_auth
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ContentAuthPresent = &Status_ContentAuth{uint32(x)}
		return true, err
	case 120: // rt_present.rt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Status)
		err := b.DecodeMessage(msg)
		m.RtPresent = &Status_Rt{msg}
		return true, err
	case 121: // rt_id_db_present.rt_id_db
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RtIdDbPresent = &Status_RtIdDb{x}
		return true, err
	case 122: // rt_mid_db_present.rt_mid_db
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RtMidDbPresent = &Status_RtMidDb{x}
		return true, err
	case 123: // parent_rt_id_db_present.parent_rt_id_db
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ParentRtIdDbPresent = &Status_ParentRtIdDb{x}
		return true, err
	case 131: // pic_id_present.pic_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PicIdPresent = &Status_PicId{x}
		return true, err
	case 141: // latitude_present.latitude
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.LatitudePresent = &Status_Latitude{x}
		return true, err
	case 142: // longitude_present.longitude
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.LongitudePresent = &Status_Longitude{x}
		return true, err
	case 146: // annotation_present.annotation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AnnotationPresent = &Status_Annotation{x}
		return true, err
	case 151: // ip_present.ip
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IpPresent = &Status_Ip{uint32(x)}
		return true, err
	case 152: // uid_db_present.uid_db
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UidDbPresent = &Status_UidDb{x}
		return true, err
	case 153: // feature_present.feature
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FeaturePresent = &Status_Feature{x}
		return true, err
	case 155: // state_present.state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StatePresent = &Status_State{uint32(x)}
		return true, err
	case 156: // api_state_present.api_state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ApiStatePresent = &Status_ApiState{ApiState(x)}
		return true, err
	case 157: // WeiboState_present.WeiboState
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.WeiboStatePresent = &Status_WeiboState{x}
		return true, err
	case 158: // mflag_present.mflag
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MflagPresent = &Status_Mflag{int32(x)}
		return true, err
	case 159: // vflag_present.vflag
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.VflagPresent = &Status_Vflag{uint32(x)}
		return true, err
	case 160: // fflag_present.fflag
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FflagPresent = &Status_Fflag{uint32(x)}
		return true, err
	case 161: // group_id_present.group_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.GroupIdPresent = &Status_GroupId{int64(x)}
		return true, err
	case 162: // expire_time_present.expire_time
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ExpireTimePresent = &Status_ExpireTime{x}
		return true, err
	case 163: // sgid_present.sgid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SgidPresent = &Status_Sgid{int64(x)}
		return true, err
	case 166: // fid_present.fid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FidPresent = &Status_Fid{x}
		return true, err
	case 167: // custom_source_present.custom_source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CustomSourcePresent = &Status_CustomSource{x}
		return true, err
	case 170: // object_type_present.object_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ObjectTypePresent = &Status_ObjectType{x}
		return true, err
	case 171: // page_mark_level_present.page_mark_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PageMarkLevelPresent = &Status_PageMarkLevel{x}
		return true, err
	case 173: // photoTag_present.photoTag
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PhotoTagPresent = &Status_PhotoTag{x}
		return true, err
	case 174: // ext_info_present.ext_info
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ExtInfoPresent = &Status_ExtInfo{x}
		return true, err
	case 175: // status_type_present.status_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.StatusTypePresent = &Status_StatusType{x}
		return true, err
	case 176: // biz_feature_present.biz_feature
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BizFeaturePresent = &Status_BizFeature{x}
		return true, err
	case 178: // page_type_present.page_type
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PageTypePresent = &Status_PageType{x}
		return true, err
	case 179: // isLongText_present.isLongText
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IsLongTextPresent = &Status_IsLongText{x != 0}
		return true, err
	case 180: // longTextFid_present.longTextFid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.LongTextFidPresent = &Status_LongTextFid{x}
		return true, err
	case 181: // textLength_present.textLength
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TextLengthPresent = &Status_TextLength{int32(x)}
		return true, err
	case 182: // similarity_present.similarity
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.SimilarityPresent = &Status_Similarity{x}
		return true, err
	case 183: // topic_uuid_present.topic_uuid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TopicUuidPresent = &Status_TopicUuid{x}
		return true, err
	case 184: // topic_id_present.topic_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TopicIdPresent = &Status_TopicId{x}
		return true, err
	case 185: // sync_mblog_present.sync_mblog
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SyncMblogPresent = &Status_SyncMblog{x != 0}
		return true, err
	case 186: // gif_ids_present.gif_ids
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.GifIdsPresent = &Status_GifIds{x}
		return true, err
	case 187: // content_only_type_present.content_only_type
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ContentOnlyTypePresent = &Status_ContentOnlyType{int32(x)}
		return true, err
	case 188: // original_source_present.original_source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.OriginalSourcePresent = &Status_OriginalSource{x}
		return true, err
	case 189: // processed_by_v4_present.processed_by_v4
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ProcessedByV4Present = &Status_ProcessedByV4{x != 0}
		return true, err
	case 190: // reposts_count_present.reposts_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RepostsCountPresent = &Status_RepostsCount{uint32(x)}
		return true, err
	case 191: // comments_count_present.comments_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CommentsCountPresent = &Status_CommentsCount{uint32(x)}
		return true, err
	case 192: // is_imported_topic_present.is_imported_topic
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IsImportedTopicPresent = &Status_IsImportedTopic{x != 0}
		return true, err
	case 193: // if_can_flow_in_topic_present.if_can_flow_in_topic
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IfCanFlowInTopicPresent = &Status_IfCanFlowInTopic{x != 0}
		return true, err
	case 194: // approval_mark_time_present.approval_mark_time
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ApprovalMarkTimePresent = &Status_ApprovalMarkTime{x}
		return true, err
	case 195: // withComment_present.withComment
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.WithCommentPresent = &Status_WithComment{int32(x)}
		return true, err
	case 198: // mblogVipType_present.mblogVipType
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MblogVipTypePresent = &Status_MblogVipType{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Status_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Status)
	// id_present
	switch x := m.IdPresent.(type) {
	case *Status_Id:
		n += proto.SizeVarint(101<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Id))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// text_present
	switch x := m.TextPresent.(type) {
	case *Status_Text:
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Text)))
		n += len(x.Text)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// created_at_present
	switch x := m.CreatedAtPresent.(type) {
	case *Status_CreatedAt:
		n += proto.SizeVarint(103<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.CreatedAt))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// favorited_present
	switch x := m.FavoritedPresent.(type) {
	case *Status_Favorited:
		n += proto.SizeVarint(108<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mid_present
	switch x := m.MidPresent.(type) {
	case *Status_Mid:
		n += proto.SizeVarint(109<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Mid))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// post_source_present
	switch x := m.PostSourcePresent.(type) {
	case *Status_PostSource:
		s := proto.Size(x.PostSource)
		n += proto.SizeVarint(110<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// author_present
	switch x := m.AuthorPresent.(type) {
	case *Status_Author:
		s := proto.Size(x.Author)
		n += proto.SizeVarint(111<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// edit_at_present
	switch x := m.EditAtPresent.(type) {
	case *Status_EditAt:
		n += proto.SizeVarint(112<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.EditAt))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// edit_count_present
	switch x := m.EditCountPresent.(type) {
	case *Status_EditCount:
		n += proto.SizeVarint(113<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.EditCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// is_history_present
	switch x := m.IsHistoryPresent.(type) {
	case *Status_IsHistory:
		n += proto.SizeVarint(114<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ad_state_present
	switch x := m.AdStatePresent.(type) {
	case *Status_AdState:
		n += proto.SizeVarint(115<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.AdState))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// content_auth_present
	switch x := m.ContentAuthPresent.(type) {
	case *Status_ContentAuth:
		n += proto.SizeVarint(116<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ContentAuth))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// rt_present
	switch x := m.RtPresent.(type) {
	case *Status_Rt:
		s := proto.Size(x.Rt)
		n += proto.SizeVarint(120<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// rt_id_db_present
	switch x := m.RtIdDbPresent.(type) {
	case *Status_RtIdDb:
		n += proto.SizeVarint(121<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.RtIdDb))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// rt_mid_db_present
	switch x := m.RtMidDbPresent.(type) {
	case *Status_RtMidDb:
		n += proto.SizeVarint(122<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.RtMidDb))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// parent_rt_id_db_present
	switch x := m.ParentRtIdDbPresent.(type) {
	case *Status_ParentRtIdDb:
		n += proto.SizeVarint(123<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ParentRtIdDb))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pic_id_present
	switch x := m.PicIdPresent.(type) {
	case *Status_PicId:
		n += proto.SizeVarint(131<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.PicId)))
		n += len(x.PicId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// latitude_present
	switch x := m.LatitudePresent.(type) {
	case *Status_Latitude:
		n += proto.SizeVarint(141<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Latitude)))
		n += len(x.Latitude)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// longitude_present
	switch x := m.LongitudePresent.(type) {
	case *Status_Longitude:
		n += proto.SizeVarint(142<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Longitude)))
		n += len(x.Longitude)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// annotation_present
	switch x := m.AnnotationPresent.(type) {
	case *Status_Annotation:
		n += proto.SizeVarint(146<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Annotation)))
		n += len(x.Annotation)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ip_present
	switch x := m.IpPresent.(type) {
	case *Status_Ip:
		n += proto.SizeVarint(151<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Ip))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// uid_db_present
	switch x := m.UidDbPresent.(type) {
	case *Status_UidDb:
		n += proto.SizeVarint(152<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.UidDb))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// feature_present
	switch x := m.FeaturePresent.(type) {
	case *Status_Feature:
		n += proto.SizeVarint(153<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Feature))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// state_present
	switch x := m.StatePresent.(type) {
	case *Status_State:
		n += proto.SizeVarint(155<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.State))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// api_state_present
	switch x := m.ApiStatePresent.(type) {
	case *Status_ApiState:
		n += proto.SizeVarint(156<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ApiState))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// WeiboState_present
	switch x := m.WeiboStatePresent.(type) {
	case *Status_WeiboState:
		n += proto.SizeVarint(157<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.WeiboState))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mflag_present
	switch x := m.MflagPresent.(type) {
	case *Status_Mflag:
		n += proto.SizeVarint(158<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Mflag))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// vflag_present
	switch x := m.VflagPresent.(type) {
	case *Status_Vflag:
		n += proto.SizeVarint(159<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Vflag))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fflag_present
	switch x := m.FflagPresent.(type) {
	case *Status_Fflag:
		n += proto.SizeVarint(160<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Fflag))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// group_id_present
	switch x := m.GroupIdPresent.(type) {
	case *Status_GroupId:
		n += proto.SizeVarint(161<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.GroupId))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// expire_time_present
	switch x := m.ExpireTimePresent.(type) {
	case *Status_ExpireTime:
		n += proto.SizeVarint(162<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ExpireTime))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sgid_present
	switch x := m.SgidPresent.(type) {
	case *Status_Sgid:
		n += proto.SizeVarint(163<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Sgid))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fid_present
	switch x := m.FidPresent.(type) {
	case *Status_Fid:
		n += proto.SizeVarint(166<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Fid))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// custom_source_present
	switch x := m.CustomSourcePresent.(type) {
	case *Status_CustomSource:
		n += proto.SizeVarint(167<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CustomSource)))
		n += len(x.CustomSource)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// object_type_present
	switch x := m.ObjectTypePresent.(type) {
	case *Status_ObjectType:
		n += proto.SizeVarint(170<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ObjectType)))
		n += len(x.ObjectType)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// page_mark_level_present
	switch x := m.PageMarkLevelPresent.(type) {
	case *Status_PageMarkLevel:
		n += proto.SizeVarint(171<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.PageMarkLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// photoTag_present
	switch x := m.PhotoTagPresent.(type) {
	case *Status_PhotoTag:
		n += proto.SizeVarint(173<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.PhotoTag)))
		n += len(x.PhotoTag)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ext_info_present
	switch x := m.ExtInfoPresent.(type) {
	case *Status_ExtInfo:
		n += proto.SizeVarint(174<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ExtInfo)))
		n += len(x.ExtInfo)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// status_type_present
	switch x := m.StatusTypePresent.(type) {
	case *Status_StatusType:
		n += proto.SizeVarint(175<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StatusType)))
		n += len(x.StatusType)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// biz_feature_present
	switch x := m.BizFeaturePresent.(type) {
	case *Status_BizFeature:
		n += proto.SizeVarint(176<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BizFeature))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// page_type_present
	switch x := m.PageTypePresent.(type) {
	case *Status_PageType:
		n += proto.SizeVarint(178<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.PageType))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// isLongText_present
	switch x := m.IsLongTextPresent.(type) {
	case *Status_IsLongText:
		n += proto.SizeVarint(179<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// longTextFid_present
	switch x := m.LongTextFidPresent.(type) {
	case *Status_LongTextFid:
		n += proto.SizeVarint(180<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.LongTextFid)))
		n += len(x.LongTextFid)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// textLength_present
	switch x := m.TextLengthPresent.(type) {
	case *Status_TextLength:
		n += proto.SizeVarint(181<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.TextLength))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// similarity_present
	switch x := m.SimilarityPresent.(type) {
	case *Status_Similarity:
		n += proto.SizeVarint(182<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Similarity)))
		n += len(x.Similarity)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// topic_uuid_present
	switch x := m.TopicUuidPresent.(type) {
	case *Status_TopicUuid:
		n += proto.SizeVarint(183<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.TopicUuid))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// topic_id_present
	switch x := m.TopicIdPresent.(type) {
	case *Status_TopicId:
		n += proto.SizeVarint(184<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.TopicId)))
		n += len(x.TopicId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sync_mblog_present
	switch x := m.SyncMblogPresent.(type) {
	case *Status_SyncMblog:
		n += proto.SizeVarint(185<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// gif_ids_present
	switch x := m.GifIdsPresent.(type) {
	case *Status_GifIds:
		n += proto.SizeVarint(186<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.GifIds)))
		n += len(x.GifIds)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// content_only_type_present
	switch x := m.ContentOnlyTypePresent.(type) {
	case *Status_ContentOnlyType:
		n += proto.SizeVarint(187<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ContentOnlyType))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// original_source_present
	switch x := m.OriginalSourcePresent.(type) {
	case *Status_OriginalSource:
		n += proto.SizeVarint(188<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.OriginalSource)))
		n += len(x.OriginalSource)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// processed_by_v4_present
	switch x := m.ProcessedByV4Present.(type) {
	case *Status_ProcessedByV4:
		n += proto.SizeVarint(189<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// reposts_count_present
	switch x := m.RepostsCountPresent.(type) {
	case *Status_RepostsCount:
		n += proto.SizeVarint(190<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.RepostsCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// comments_count_present
	switch x := m.CommentsCountPresent.(type) {
	case *Status_CommentsCount:
		n += proto.SizeVarint(191<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.CommentsCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// is_imported_topic_present
	switch x := m.IsImportedTopicPresent.(type) {
	case *Status_IsImportedTopic:
		n += proto.SizeVarint(192<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// if_can_flow_in_topic_present
	switch x := m.IfCanFlowInTopicPresent.(type) {
	case *Status_IfCanFlowInTopic:
		n += proto.SizeVarint(193<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// approval_mark_time_present
	switch x := m.ApprovalMarkTimePresent.(type) {
	case *Status_ApprovalMarkTime:
		n += proto.SizeVarint(194<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ApprovalMarkTime))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// withComment_present
	switch x := m.WithCommentPresent.(type) {
	case *Status_WithComment:
		n += proto.SizeVarint(195<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.WithComment))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mblogVipType_present
	switch x := m.MblogVipTypePresent.(type) {
	case *Status_MblogVipType:
		n += proto.SizeVarint(198<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.MblogVipType))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Status)(nil), "weibo.Status")
}
func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.IdPresent != nil {
		nn1, err := m.IdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.TextPresent != nil {
		nn2, err := m.TextPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.CreatedAtPresent != nil {
		nn3, err := m.CreatedAtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if m.FavoritedPresent != nil {
		nn4, err := m.FavoritedPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	if m.MidPresent != nil {
		nn5, err := m.MidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn5
	}
	if m.PostSourcePresent != nil {
		nn6, err := m.PostSourcePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.AuthorPresent != nil {
		nn7, err := m.AuthorPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn7
	}
	if m.EditAtPresent != nil {
		nn8, err := m.EditAtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn8
	}
	if m.EditCountPresent != nil {
		nn9, err := m.EditCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn9
	}
	if m.IsHistoryPresent != nil {
		nn10, err := m.IsHistoryPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn10
	}
	if m.AdStatePresent != nil {
		nn11, err := m.AdStatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn11
	}
	if m.ContentAuthPresent != nil {
		nn12, err := m.ContentAuthPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn12
	}
	if m.RtPresent != nil {
		nn13, err := m.RtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn13
	}
	if m.RtIdDbPresent != nil {
		nn14, err := m.RtIdDbPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn14
	}
	if m.RtMidDbPresent != nil {
		nn15, err := m.RtMidDbPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn15
	}
	if m.ParentRtIdDbPresent != nil {
		nn16, err := m.ParentRtIdDbPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn16
	}
	if len(m.RtChainDb) > 0 {
		dAtA18 := make([]byte, len(m.RtChainDb)*10)
		var j17 int
		for _, num := range m.RtChainDb {
			for num >= 1<<7 {
				dAtA18[j17] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j17++
			}
			dAtA18[j17] = uint8(num)
			j17++
		}
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j17))
		i += copy(dAtA[i:], dAtA18[:j17])
	}
	if len(m.MentionUid) > 0 {
		dAtA20 := make([]byte, len(m.MentionUid)*10)
		var j19 int
		for _, num := range m.MentionUid {
			for num >= 1<<7 {
				dAtA20[j19] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j19++
			}
			dAtA20[j19] = uint8(num)
			j19++
		}
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j19))
		i += copy(dAtA[i:], dAtA20[:j19])
	}
	if m.PicIdPresent != nil {
		nn21, err := m.PicIdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn21
	}
	if m.LatitudePresent != nil {
		nn22, err := m.LatitudePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn22
	}
	if m.LongitudePresent != nil {
		nn23, err := m.LongitudePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn23
	}
	if len(m.TagIds) > 0 {
		dAtA25 := make([]byte, len(m.TagIds)*10)
		var j24 int
		for _, num := range m.TagIds {
			for num >= 1<<7 {
				dAtA25[j24] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j24++
			}
			dAtA25[j24] = uint8(num)
			j24++
		}
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x9
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j24))
		i += copy(dAtA[i:], dAtA25[:j24])
	}
	if m.AnnotationPresent != nil {
		nn26, err := m.AnnotationPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn26
	}
	if m.IpPresent != nil {
		nn27, err := m.IpPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn27
	}
	if m.UidDbPresent != nil {
		nn28, err := m.UidDbPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn28
	}
	if m.FeaturePresent != nil {
		nn29, err := m.FeaturePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn29
	}
	if m.StatePresent != nil {
		nn30, err := m.StatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn30
	}
	if m.ApiStatePresent != nil {
		nn31, err := m.ApiStatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn31
	}
	if m.WeiboStatePresent != nil {
		nn32, err := m.WeiboStatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn32
	}
	if m.MflagPresent != nil {
		nn33, err := m.MflagPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn33
	}
	if m.VflagPresent != nil {
		nn34, err := m.VflagPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn34
	}
	if m.FflagPresent != nil {
		nn35, err := m.FflagPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn35
	}
	if m.GroupIdPresent != nil {
		nn36, err := m.GroupIdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn36
	}
	if m.ExpireTimePresent != nil {
		nn37, err := m.ExpireTimePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn37
	}
	if m.SgidPresent != nil {
		nn38, err := m.SgidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn38
	}
	if len(m.ShareSource) > 0 {
		dAtA40 := make([]byte, len(m.ShareSource)*10)
		var j39 int
		for _, num := range m.ShareSource {
			for num >= 1<<7 {
				dAtA40[j39] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j39++
			}
			dAtA40[j39] = uint8(num)
			j39++
		}
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0xa
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j39))
		i += copy(dAtA[i:], dAtA40[:j39])
	}
	if len(m.ShareId) > 0 {
		dAtA42 := make([]byte, len(m.ShareId)*10)
		var j41 int
		for _, num := range m.ShareId {
			for num >= 1<<7 {
				dAtA42[j41] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j41++
			}
			dAtA42[j41] = uint8(num)
			j41++
		}
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0xa
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j41))
		i += copy(dAtA[i:], dAtA42[:j41])
	}
	if m.FidPresent != nil {
		nn43, err := m.FidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn43
	}
	if m.CustomSourcePresent != nil {
		nn44, err := m.CustomSourcePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn44
	}
	if len(m.Adtags) > 0 {
		for _, s := range m.Adtags {
			dAtA[i] = 0xc2
			i++
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.BizIds) > 0 {
		dAtA46 := make([]byte, len(m.BizIds)*10)
		var j45 int
		for _, num := range m.BizIds {
			for num >= 1<<7 {
				dAtA46[j45] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j45++
			}
			dAtA46[j45] = uint8(num)
			j45++
		}
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0xa
		i++
		i = encodeVarintStatus(dAtA, i, uint64(j45))
		i += copy(dAtA[i:], dAtA46[:j45])
	}
	if m.ObjectTypePresent != nil {
		nn47, err := m.ObjectTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn47
	}
	if m.PageMarkLevelPresent != nil {
		nn48, err := m.PageMarkLevelPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn48
	}
	if len(m.ObjectIds) > 0 {
		for _, s := range m.ObjectIds {
			dAtA[i] = 0xe2
			i++
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.PhotoTagPresent != nil {
		nn49, err := m.PhotoTagPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn49
	}
	if m.ExtInfoPresent != nil {
		nn50, err := m.ExtInfoPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn50
	}
	if m.StatusTypePresent != nil {
		nn51, err := m.StatusTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn51
	}
	if m.BizFeaturePresent != nil {
		nn52, err := m.BizFeaturePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn52
	}
	if len(m.DarwinIdsStatus) > 0 {
		for _, s := range m.DarwinIdsStatus {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0xb
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.PageTypePresent != nil {
		nn53, err := m.PageTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn53
	}
	if m.IsLongTextPresent != nil {
		nn54, err := m.IsLongTextPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn54
	}
	if m.LongTextFidPresent != nil {
		nn55, err := m.LongTextFidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn55
	}
	if m.TextLengthPresent != nil {
		nn56, err := m.TextLengthPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn56
	}
	if m.SimilarityPresent != nil {
		nn57, err := m.SimilarityPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn57
	}
	if m.TopicUuidPresent != nil {
		nn58, err := m.TopicUuidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn58
	}
	if m.TopicIdPresent != nil {
		nn59, err := m.TopicIdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn59
	}
	if m.SyncMblogPresent != nil {
		nn60, err := m.SyncMblogPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn60
	}
	if m.GifIdsPresent != nil {
		nn61, err := m.GifIdsPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn61
	}
	if m.ContentOnlyTypePresent != nil {
		nn62, err := m.ContentOnlyTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn62
	}
	if m.OriginalSourcePresent != nil {
		nn63, err := m.OriginalSourcePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn63
	}
	if m.ProcessedByV4Present != nil {
		nn64, err := m.ProcessedByV4Present.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn64
	}
	if m.RepostsCountPresent != nil {
		nn65, err := m.RepostsCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn65
	}
	if m.CommentsCountPresent != nil {
		nn66, err := m.CommentsCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn66
	}
	if m.IsImportedTopicPresent != nil {
		nn67, err := m.IsImportedTopicPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn67
	}
	if m.IfCanFlowInTopicPresent != nil {
		nn68, err := m.IfCanFlowInTopicPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn68
	}
	if m.ApprovalMarkTimePresent != nil {
		nn69, err := m.ApprovalMarkTimePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn69
	}
	if m.WithCommentPresent != nil {
		nn70, err := m.WithCommentPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn70
	}
	if m.ManageFlag != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintStatus(dAtA, i, uint64(m.ManageFlag))
	}
	if m.MblogVipTypePresent != nil {
		nn71, err := m.MblogVipTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn71
	}
	return i, nil
}

func (m *Status_Id) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0x6
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Id))
	return i, nil
}
func (m *Status_Text) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0x6
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.Text)))
	i += copy(dAtA[i:], m.Text)
	return i, nil
}
func (m *Status_CreatedAt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x6
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.CreatedAt))
	return i, nil
}
func (m *Status_Favorited) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x6
	i++
	if m.Favorited {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_Mid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x6
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Mid))
	return i, nil
}
func (m *Status_PostSource) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PostSource != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintStatus(dAtA, i, uint64(m.PostSource.Size()))
		n72, err := m.PostSource.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n72
	}
	return i, nil
}
func (m *Status_Author) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Author != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintStatus(dAtA, i, uint64(m.Author.Size()))
		n73, err := m.Author.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n73
	}
	return i, nil
}
func (m *Status_EditAt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.EditAt))
	return i, nil
}
func (m *Status_EditCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.EditCount))
	return i, nil
}
func (m *Status_IsHistory) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x7
	i++
	if m.IsHistory {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_AdState) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.AdState))
	return i, nil
}
func (m *Status_ContentAuth) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ContentAuth))
	return i, nil
}
func (m *Status_Rt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Rt != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintStatus(dAtA, i, uint64(m.Rt.Size()))
		n74, err := m.Rt.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n74
	}
	return i, nil
}
func (m *Status_RtIdDb) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.RtIdDb))
	return i, nil
}
func (m *Status_RtMidDb) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.RtMidDb))
	return i, nil
}
func (m *Status_ParentRtIdDb) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x7
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ParentRtIdDb))
	return i, nil
}
func (m *Status_PicId) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x9a
	i++
	dAtA[i] = 0x8
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.PicId)))
	i += copy(dAtA[i:], m.PicId)
	return i, nil
}
func (m *Status_Latitude) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0x8
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.Latitude)))
	i += copy(dAtA[i:], m.Latitude)
	return i, nil
}
func (m *Status_Longitude) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0x8
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.Longitude)))
	i += copy(dAtA[i:], m.Longitude)
	return i, nil
}
func (m *Status_Annotation) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.Annotation)))
	i += copy(dAtA[i:], m.Annotation)
	return i, nil
}
func (m *Status_Ip) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Ip))
	return i, nil
}
func (m *Status_UidDb) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.UidDb))
	return i, nil
}
func (m *Status_Feature) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Feature))
	return i, nil
}
func (m *Status_State) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.State))
	return i, nil
}
func (m *Status_ApiState) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ApiState))
	return i, nil
}
func (m *Status_WeiboState) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.WeiboState))
	return i, nil
}
func (m *Status_Mflag) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf0
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Mflag))
	return i, nil
}
func (m *Status_Vflag) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf8
	i++
	dAtA[i] = 0x9
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Vflag))
	return i, nil
}
func (m *Status_Fflag) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Fflag))
	return i, nil
}
func (m *Status_GroupId) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.GroupId))
	return i, nil
}
func (m *Status_ExpireTime) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ExpireTime))
	return i, nil
}
func (m *Status_Sgid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Sgid))
	return i, nil
}
func (m *Status_Fid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb0
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.Fid))
	return i, nil
}
func (m *Status_CustomSource) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xba
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.CustomSource)))
	i += copy(dAtA[i:], m.CustomSource)
	return i, nil
}
func (m *Status_ObjectType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.ObjectType)))
	i += copy(dAtA[i:], m.ObjectType)
	return i, nil
}
func (m *Status_PageMarkLevel) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.PageMarkLevel))
	return i, nil
}
func (m *Status_PhotoTag) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.PhotoTag)))
	i += copy(dAtA[i:], m.PhotoTag)
	return i, nil
}
func (m *Status_ExtInfo) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.ExtInfo)))
	i += copy(dAtA[i:], m.ExtInfo)
	return i, nil
}
func (m *Status_StatusType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xfa
	i++
	dAtA[i] = 0xa
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.StatusType)))
	i += copy(dAtA[i:], m.StatusType)
	return i, nil
}
func (m *Status_BizFeature) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.BizFeature))
	return i, nil
}
func (m *Status_PageType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.PageType))
	return i, nil
}
func (m *Status_IsLongText) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0xb
	i++
	if m.IsLongText {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_LongTextFid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa2
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.LongTextFid)))
	i += copy(dAtA[i:], m.LongTextFid)
	return i, nil
}
func (m *Status_TextLength) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.TextLength))
	return i, nil
}
func (m *Status_Similarity) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.Similarity)))
	i += copy(dAtA[i:], m.Similarity)
	return i, nil
}
func (m *Status_TopicUuid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.TopicUuid))
	return i, nil
}
func (m *Status_TopicId) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc2
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.TopicId)))
	i += copy(dAtA[i:], m.TopicId)
	return i, nil
}
func (m *Status_SyncMblog) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0xb
	i++
	if m.SyncMblog {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_GifIds) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.GifIds)))
	i += copy(dAtA[i:], m.GifIds)
	return i, nil
}
func (m *Status_ContentOnlyType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ContentOnlyType))
	return i, nil
}
func (m *Status_OriginalSource) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe2
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(len(m.OriginalSource)))
	i += copy(dAtA[i:], m.OriginalSource)
	return i, nil
}
func (m *Status_ProcessedByV4) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0xb
	i++
	if m.ProcessedByV4 {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_RepostsCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf0
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.RepostsCount))
	return i, nil
}
func (m *Status_CommentsCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf8
	i++
	dAtA[i] = 0xb
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.CommentsCount))
	return i, nil
}
func (m *Status_IsImportedTopic) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0xc
	i++
	if m.IsImportedTopic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_IfCanFlowInTopic) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0xc
	i++
	if m.IfCanFlowInTopic {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}
func (m *Status_ApprovalMarkTime) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0xc
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.ApprovalMarkTime))
	return i, nil
}
func (m *Status_WithComment) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0xc
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.WithComment))
	return i, nil
}
func (m *Status_MblogVipType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb0
	i++
	dAtA[i] = 0xc
	i++
	i = encodeVarintStatus(dAtA, i, uint64(m.MblogVipType))
	return i, nil
}
func encodeFixed64Status(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Status(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintStatus(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Status) Size() (n int) {
	var l int
	_ = l
	if m.IdPresent != nil {
		n += m.IdPresent.Size()
	}
	if m.TextPresent != nil {
		n += m.TextPresent.Size()
	}
	if m.CreatedAtPresent != nil {
		n += m.CreatedAtPresent.Size()
	}
	if m.FavoritedPresent != nil {
		n += m.FavoritedPresent.Size()
	}
	if m.MidPresent != nil {
		n += m.MidPresent.Size()
	}
	if m.PostSourcePresent != nil {
		n += m.PostSourcePresent.Size()
	}
	if m.AuthorPresent != nil {
		n += m.AuthorPresent.Size()
	}
	if m.EditAtPresent != nil {
		n += m.EditAtPresent.Size()
	}
	if m.EditCountPresent != nil {
		n += m.EditCountPresent.Size()
	}
	if m.IsHistoryPresent != nil {
		n += m.IsHistoryPresent.Size()
	}
	if m.AdStatePresent != nil {
		n += m.AdStatePresent.Size()
	}
	if m.ContentAuthPresent != nil {
		n += m.ContentAuthPresent.Size()
	}
	if m.RtPresent != nil {
		n += m.RtPresent.Size()
	}
	if m.RtIdDbPresent != nil {
		n += m.RtIdDbPresent.Size()
	}
	if m.RtMidDbPresent != nil {
		n += m.RtMidDbPresent.Size()
	}
	if m.ParentRtIdDbPresent != nil {
		n += m.ParentRtIdDbPresent.Size()
	}
	if len(m.RtChainDb) > 0 {
		l = 0
		for _, e := range m.RtChainDb {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if len(m.MentionUid) > 0 {
		l = 0
		for _, e := range m.MentionUid {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if m.PicIdPresent != nil {
		n += m.PicIdPresent.Size()
	}
	if m.LatitudePresent != nil {
		n += m.LatitudePresent.Size()
	}
	if m.LongitudePresent != nil {
		n += m.LongitudePresent.Size()
	}
	if len(m.TagIds) > 0 {
		l = 0
		for _, e := range m.TagIds {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if m.AnnotationPresent != nil {
		n += m.AnnotationPresent.Size()
	}
	if m.IpPresent != nil {
		n += m.IpPresent.Size()
	}
	if m.UidDbPresent != nil {
		n += m.UidDbPresent.Size()
	}
	if m.FeaturePresent != nil {
		n += m.FeaturePresent.Size()
	}
	if m.StatePresent != nil {
		n += m.StatePresent.Size()
	}
	if m.ApiStatePresent != nil {
		n += m.ApiStatePresent.Size()
	}
	if m.WeiboStatePresent != nil {
		n += m.WeiboStatePresent.Size()
	}
	if m.MflagPresent != nil {
		n += m.MflagPresent.Size()
	}
	if m.VflagPresent != nil {
		n += m.VflagPresent.Size()
	}
	if m.FflagPresent != nil {
		n += m.FflagPresent.Size()
	}
	if m.GroupIdPresent != nil {
		n += m.GroupIdPresent.Size()
	}
	if m.ExpireTimePresent != nil {
		n += m.ExpireTimePresent.Size()
	}
	if m.SgidPresent != nil {
		n += m.SgidPresent.Size()
	}
	if len(m.ShareSource) > 0 {
		l = 0
		for _, e := range m.ShareSource {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if len(m.ShareId) > 0 {
		l = 0
		for _, e := range m.ShareId {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if m.FidPresent != nil {
		n += m.FidPresent.Size()
	}
	if m.CustomSourcePresent != nil {
		n += m.CustomSourcePresent.Size()
	}
	if len(m.Adtags) > 0 {
		for _, s := range m.Adtags {
			l = len(s)
			n += 2 + l + sovStatus(uint64(l))
		}
	}
	if len(m.BizIds) > 0 {
		l = 0
		for _, e := range m.BizIds {
			l += sovStatus(uint64(e))
		}
		n += 2 + sovStatus(uint64(l)) + l
	}
	if m.ObjectTypePresent != nil {
		n += m.ObjectTypePresent.Size()
	}
	if m.PageMarkLevelPresent != nil {
		n += m.PageMarkLevelPresent.Size()
	}
	if len(m.ObjectIds) > 0 {
		for _, s := range m.ObjectIds {
			l = len(s)
			n += 2 + l + sovStatus(uint64(l))
		}
	}
	if m.PhotoTagPresent != nil {
		n += m.PhotoTagPresent.Size()
	}
	if m.ExtInfoPresent != nil {
		n += m.ExtInfoPresent.Size()
	}
	if m.StatusTypePresent != nil {
		n += m.StatusTypePresent.Size()
	}
	if m.BizFeaturePresent != nil {
		n += m.BizFeaturePresent.Size()
	}
	if len(m.DarwinIdsStatus) > 0 {
		for _, s := range m.DarwinIdsStatus {
			l = len(s)
			n += 2 + l + sovStatus(uint64(l))
		}
	}
	if m.PageTypePresent != nil {
		n += m.PageTypePresent.Size()
	}
	if m.IsLongTextPresent != nil {
		n += m.IsLongTextPresent.Size()
	}
	if m.LongTextFidPresent != nil {
		n += m.LongTextFidPresent.Size()
	}
	if m.TextLengthPresent != nil {
		n += m.TextLengthPresent.Size()
	}
	if m.SimilarityPresent != nil {
		n += m.SimilarityPresent.Size()
	}
	if m.TopicUuidPresent != nil {
		n += m.TopicUuidPresent.Size()
	}
	if m.TopicIdPresent != nil {
		n += m.TopicIdPresent.Size()
	}
	if m.SyncMblogPresent != nil {
		n += m.SyncMblogPresent.Size()
	}
	if m.GifIdsPresent != nil {
		n += m.GifIdsPresent.Size()
	}
	if m.ContentOnlyTypePresent != nil {
		n += m.ContentOnlyTypePresent.Size()
	}
	if m.OriginalSourcePresent != nil {
		n += m.OriginalSourcePresent.Size()
	}
	if m.ProcessedByV4Present != nil {
		n += m.ProcessedByV4Present.Size()
	}
	if m.RepostsCountPresent != nil {
		n += m.RepostsCountPresent.Size()
	}
	if m.CommentsCountPresent != nil {
		n += m.CommentsCountPresent.Size()
	}
	if m.IsImportedTopicPresent != nil {
		n += m.IsImportedTopicPresent.Size()
	}
	if m.IfCanFlowInTopicPresent != nil {
		n += m.IfCanFlowInTopicPresent.Size()
	}
	if m.ApprovalMarkTimePresent != nil {
		n += m.ApprovalMarkTimePresent.Size()
	}
	if m.WithCommentPresent != nil {
		n += m.WithCommentPresent.Size()
	}
	if m.ManageFlag != 0 {
		n += 2 + sovStatus(uint64(m.ManageFlag))
	}
	if m.MblogVipTypePresent != nil {
		n += m.MblogVipTypePresent.Size()
	}
	return n
}

func (m *Status_Id) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Id))
	return n
}
func (m *Status_Text) Size() (n int) {
	var l int
	_ = l
	l = len(m.Text)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_CreatedAt) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.CreatedAt))
	return n
}
func (m *Status_Favorited) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_Mid) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Mid))
	return n
}
func (m *Status_PostSource) Size() (n int) {
	var l int
	_ = l
	if m.PostSource != nil {
		l = m.PostSource.Size()
		n += 2 + l + sovStatus(uint64(l))
	}
	return n
}
func (m *Status_Author) Size() (n int) {
	var l int
	_ = l
	if m.Author != nil {
		l = m.Author.Size()
		n += 2 + l + sovStatus(uint64(l))
	}
	return n
}
func (m *Status_EditAt) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.EditAt))
	return n
}
func (m *Status_EditCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.EditCount))
	return n
}
func (m *Status_IsHistory) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_AdState) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.AdState))
	return n
}
func (m *Status_ContentAuth) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ContentAuth))
	return n
}
func (m *Status_Rt) Size() (n int) {
	var l int
	_ = l
	if m.Rt != nil {
		l = m.Rt.Size()
		n += 2 + l + sovStatus(uint64(l))
	}
	return n
}
func (m *Status_RtIdDb) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.RtIdDb))
	return n
}
func (m *Status_RtMidDb) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.RtMidDb))
	return n
}
func (m *Status_ParentRtIdDb) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ParentRtIdDb))
	return n
}
func (m *Status_PicId) Size() (n int) {
	var l int
	_ = l
	l = len(m.PicId)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_Latitude) Size() (n int) {
	var l int
	_ = l
	l = len(m.Latitude)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_Longitude) Size() (n int) {
	var l int
	_ = l
	l = len(m.Longitude)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_Annotation) Size() (n int) {
	var l int
	_ = l
	l = len(m.Annotation)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_Ip) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Ip))
	return n
}
func (m *Status_UidDb) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.UidDb))
	return n
}
func (m *Status_Feature) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Feature))
	return n
}
func (m *Status_State) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.State))
	return n
}
func (m *Status_ApiState) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ApiState))
	return n
}
func (m *Status_WeiboState) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.WeiboState))
	return n
}
func (m *Status_Mflag) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Mflag))
	return n
}
func (m *Status_Vflag) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Vflag))
	return n
}
func (m *Status_Fflag) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Fflag))
	return n
}
func (m *Status_GroupId) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.GroupId))
	return n
}
func (m *Status_ExpireTime) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ExpireTime))
	return n
}
func (m *Status_Sgid) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Sgid))
	return n
}
func (m *Status_Fid) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.Fid))
	return n
}
func (m *Status_CustomSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.CustomSource)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_ObjectType) Size() (n int) {
	var l int
	_ = l
	l = len(m.ObjectType)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_PageMarkLevel) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.PageMarkLevel))
	return n
}
func (m *Status_PhotoTag) Size() (n int) {
	var l int
	_ = l
	l = len(m.PhotoTag)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_ExtInfo) Size() (n int) {
	var l int
	_ = l
	l = len(m.ExtInfo)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_StatusType) Size() (n int) {
	var l int
	_ = l
	l = len(m.StatusType)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_BizFeature) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.BizFeature))
	return n
}
func (m *Status_PageType) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.PageType))
	return n
}
func (m *Status_IsLongText) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_LongTextFid) Size() (n int) {
	var l int
	_ = l
	l = len(m.LongTextFid)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_TextLength) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.TextLength))
	return n
}
func (m *Status_Similarity) Size() (n int) {
	var l int
	_ = l
	l = len(m.Similarity)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_TopicUuid) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.TopicUuid))
	return n
}
func (m *Status_TopicId) Size() (n int) {
	var l int
	_ = l
	l = len(m.TopicId)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_SyncMblog) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_GifIds) Size() (n int) {
	var l int
	_ = l
	l = len(m.GifIds)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_ContentOnlyType) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ContentOnlyType))
	return n
}
func (m *Status_OriginalSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.OriginalSource)
	n += 2 + l + sovStatus(uint64(l))
	return n
}
func (m *Status_ProcessedByV4) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_RepostsCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.RepostsCount))
	return n
}
func (m *Status_CommentsCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.CommentsCount))
	return n
}
func (m *Status_IsImportedTopic) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_IfCanFlowInTopic) Size() (n int) {
	var l int
	_ = l
	n += 3
	return n
}
func (m *Status_ApprovalMarkTime) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.ApprovalMarkTime))
	return n
}
func (m *Status_WithComment) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.WithComment))
	return n
}
func (m *Status_MblogVipType) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovStatus(uint64(m.MblogVipType))
	return n
}

func sovStatus(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozStatus(x uint64) (n int) {
	return sovStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdPresent = &Status_Id{v}
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TextPresent = &Status_Text{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 103:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreatedAtPresent = &Status_CreatedAt{v}
		case 108:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Favorited", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FavoritedPresent = &Status_Favorited{b}
		case 109:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MidPresent = &Status_Mid{v}
		case 110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostSource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PostSource{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.PostSourcePresent = &Status_PostSource{v}
			iNdEx = postIndex
		case 111:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &SinaUser{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AuthorPresent = &Status_Author{v}
			iNdEx = postIndex
		case 112:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditAtPresent = &Status_EditAt{v}
		case 113:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditCountPresent = &Status_EditCount{v}
		case 114:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsHistoryPresent = &Status_IsHistory{b}
		case 115:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdState", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdStatePresent = &Status_AdState{v}
		case 116:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentAuth", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContentAuthPresent = &Status_ContentAuth{v}
		case 120:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Status{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.RtPresent = &Status_Rt{v}
			iNdEx = postIndex
		case 121:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RtIdDb", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RtIdDbPresent = &Status_RtIdDb{v}
		case 122:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RtMidDb", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RtMidDbPresent = &Status_RtMidDb{v}
		case 123:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentRtIdDb", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ParentRtIdDbPresent = &Status_ParentRtIdDb{v}
		case 124:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RtChainDb = append(m.RtChainDb, v)
				}
			} else if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RtChainDb = append(m.RtChainDb, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RtChainDb", wireType)
			}
		case 126:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MentionUid = append(m.MentionUid, v)
				}
			} else if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MentionUid = append(m.MentionUid, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MentionUid", wireType)
			}
		case 131:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PicIdPresent = &Status_PicId{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 141:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LatitudePresent = &Status_Latitude{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 142:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LongitudePresent = &Status_Longitude{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 145:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TagIds = append(m.TagIds, v)
				}
			} else if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TagIds = append(m.TagIds, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TagIds", wireType)
			}
		case 146:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Annotation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnnotationPresent = &Status_Annotation{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 151:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IpPresent = &Status_Ip{v}
		case 152:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UidDb", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UidDbPresent = &Status_UidDb{v}
		case 153:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feature", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FeaturePresent = &Status_Feature{v}
		case 155:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StatePresent = &Status_State{v}
		case 156:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiState", wireType)
			}
			var v ApiState
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (ApiState(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ApiStatePresent = &Status_ApiState{v}
		case 157:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WeiboState", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WeiboStatePresent = &Status_WeiboState{v}
		case 158:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mflag", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MflagPresent = &Status_Mflag{v}
		case 159:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vflag", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VflagPresent = &Status_Vflag{v}
		case 160:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fflag", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FflagPresent = &Status_Fflag{v}
		case 161:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupIdPresent = &Status_GroupId{v}
		case 162:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExpireTimePresent = &Status_ExpireTime{v}
		case 163:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sgid", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SgidPresent = &Status_Sgid{v}
		case 164:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ShareSource = append(m.ShareSource, v)
				}
			} else if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ShareSource = append(m.ShareSource, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareSource", wireType)
			}
		case 165:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ShareId = append(m.ShareId, v)
				}
			} else if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ShareId = append(m.ShareId, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareId", wireType)
			}
		case 166:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FidPresent = &Status_Fid{v}
		case 167:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomSourcePresent = &Status_CustomSource{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 168:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adtags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Adtags = append(m.Adtags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 169:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint32(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.BizIds = append(m.BizIds, v)
				}
			} else if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint32(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.BizIds = append(m.BizIds, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field BizIds", wireType)
			}
		case 170:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectTypePresent = &Status_ObjectType{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 171:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageMarkLevel", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageMarkLevelPresent = &Status_PageMarkLevel{v}
		case 172:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectIds = append(m.ObjectIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 173:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoTag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhotoTagPresent = &Status_PhotoTag{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 174:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExtInfoPresent = &Status_ExtInfo{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 175:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusTypePresent = &Status_StatusType{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 176:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizFeature", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BizFeaturePresent = &Status_BizFeature{v}
		case 177:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DarwinIdsStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DarwinIdsStatus = append(m.DarwinIdsStatus, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 178:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageType", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageTypePresent = &Status_PageType{v}
		case 179:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLongText", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsLongTextPresent = &Status_IsLongText{b}
		case 180:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LongTextFid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LongTextFidPresent = &Status_LongTextFid{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 181:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextLength", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TextLengthPresent = &Status_TextLength{v}
		case 182:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Similarity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SimilarityPresent = &Status_Similarity{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 183:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicUuid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TopicUuidPresent = &Status_TopicUuid{v}
		case 184:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicIdPresent = &Status_TopicId{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 185:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncMblog", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SyncMblogPresent = &Status_SyncMblog{b}
		case 186:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GifIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GifIdsPresent = &Status_GifIds{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 187:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentOnlyType", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContentOnlyTypePresent = &Status_ContentOnlyType{v}
		case 188:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalSourcePresent = &Status_OriginalSource{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 189:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessedByV4", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ProcessedByV4Present = &Status_ProcessedByV4{b}
		case 190:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepostsCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RepostsCountPresent = &Status_RepostsCount{v}
		case 191:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentsCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CommentsCountPresent = &Status_CommentsCount{v}
		case 192:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsImportedTopic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsImportedTopicPresent = &Status_IsImportedTopic{b}
		case 193:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfCanFlowInTopic", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IfCanFlowInTopicPresent = &Status_IfCanFlowInTopic{b}
		case 194:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApprovalMarkTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ApprovalMarkTimePresent = &Status_ApprovalMarkTime{v}
		case 195:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithComment", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithCommentPresent = &Status_WithComment{v}
		case 197:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManageFlag", wireType)
			}
			m.ManageFlag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ManageFlag |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 198:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MblogVipType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MblogVipTypePresent = &Status_MblogVipType{v}
		default:
			iNdEx = preIndex
			skippy, err := skipStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthStatus
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowStatus
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipStatus(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthStatus = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStatus   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("status.proto", fileDescriptorStatus) }

var fileDescriptorStatus = []byte{
	// 1729 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x57, 0x59, 0x93, 0x1b, 0x49,
	0x11, 0xb6, 0xe6, 0xd0, 0x91, 0x92, 0x46, 0x52, 0xcd, 0xd8, 0xae, 0x39, 0x2c, 0xcb, 0x63, 0xd6,
	0x3b, 0xbb, 0xe0, 0x31, 0xbb, 0x6b, 0x58, 0xe0, 0xcd, 0xe3, 0x0d, 0x87, 0x14, 0x61, 0x07, 0x44,
	0x79, 0xbc, 0xfb, 0xd8, 0x51, 0x52, 0x97, 0x34, 0xc5, 0x4a, 0x5d, 0x4d, 0x75, 0xf5, 0xcc, 0xc8,
	0x10, 0xbc, 0xf0, 0x0c, 0x11, 0xf0, 0xc2, 0x12, 0x9c, 0xcb, 0x7d, 0xdf, 0xf7, 0x7d, 0x04, 0x04,
	0x8f, 0xfc, 0x04, 0xc2, 0xfc, 0x11, 0xa2, 0x2a, 0xbb, 0x5b, 0x25, 0x7b, 0xdf, 0x54, 0xdf, 0x57,
	0x99, 0x95, 0x55, 0x99, 0xfd, 0x65, 0x0a, 0x1a, 0x89, 0xe1, 0x26, 0x4d, 0x0e, 0x63, 0xad, 0x8c,
	0x22, 0xeb, 0x67, 0x42, 0x0e, 0xd5, 0x0e, 0xa4, 0x89, 0xd0, 0x08, 0xed, 0xb4, 0x63, 0x95, 0x98,
	0x44, 0xa5, 0x7a, 0x24, 0x32, 0x64, 0x83, 0xc7, 0xd2, 0x5a, 0x65, 0xeb, 0xfd, 0xb7, 0xf7, 0xa0,
	0xfc, 0xd0, 0x79, 0x21, 0x6d, 0x58, 0x91, 0x21, 0x15, 0xbd, 0xd2, 0xc1, 0x5a, 0xff, 0x02, 0x5b,
	0x91, 0x21, 0xd9, 0x82, 0x35, 0x23, 0xce, 0x0d, 0x1d, 0xf7, 0x4a, 0x07, 0xb5, 0x7e, 0x89, 0xb9,
	0x15, 0xb9, 0x0a, 0x30, 0xd2, 0x82, 0x1b, 0x11, 0x06, 0xdc, 0xd0, 0x89, 0xdb, 0xbf, 0xc2, 0x6a,
	0x19, 0x76, 0xc7, 0x90, 0x2e, 0xd4, 0xc6, 0xfc, 0x54, 0x69, 0x69, 0x44, 0x48, 0xa7, 0xbd, 0xd2,
	0x41, 0xb5, 0xbf, 0xca, 0x16, 0x10, 0x21, 0xb0, 0x3a, 0x93, 0x21, 0x9d, 0x39, 0xcb, 0x35, 0x66,
	0x17, 0xe4, 0x36, 0xd4, 0x6d, 0xac, 0x01, 0x06, 0x4b, 0xa3, 0x5e, 0xe9, 0xa0, 0xfe, 0x72, 0xe7,
	0xd0, 0x5d, 0xe9, 0xf0, 0x23, 0x2a, 0x31, 0x0f, 0x1d, 0xd1, 0x5f, 0x67, 0x10, 0x17, 0x2b, 0xf2,
	0x02, 0x94, 0x79, 0x6a, 0x4e, 0x94, 0xa6, 0xca, 0x19, 0xb4, 0x32, 0x83, 0x87, 0x32, 0xe2, 0x8f,
	0x12, 0xa1, 0xfb, 0x65, 0x96, 0x6d, 0x20, 0xdb, 0x50, 0x11, 0xa1, 0x34, 0x36, 0xe4, 0xd8, 0x1d,
	0x5c, 0x61, 0x65, 0x0b, 0xdc, 0x71, 0x17, 0x72, 0xd4, 0x48, 0xa5, 0x91, 0xa1, 0x1f, 0xeb, 0x95,
	0x0e, 0x9a, 0xfd, 0x2a, 0xab, 0x59, 0xec, 0xae, 0x85, 0xec, 0x06, 0x99, 0x04, 0x27, 0x32, 0x31,
	0x4a, 0xcf, 0xa9, 0x76, 0x37, 0xaa, 0xb1, 0x9a, 0x4c, 0xfa, 0x08, 0x91, 0x5d, 0xa8, 0xf2, 0x30,
	0x70, 0xef, 0x4a, 0x13, 0x67, 0x0f, 0xac, 0xc2, 0x43, 0xfb, 0xb0, 0x82, 0x5c, 0x87, 0xc6, 0x48,
	0x45, 0x46, 0x44, 0x26, 0xb0, 0xb1, 0x50, 0xe3, 0x36, 0xd4, 0x59, 0x3d, 0x43, 0xef, 0xa4, 0xe6,
	0x84, 0x5c, 0x85, 0x15, 0x6d, 0xe8, 0xb9, 0xbb, 0x45, 0x33, 0xbf, 0x85, 0xcb, 0x4b, 0xbf, 0xc1,
	0x56, 0xb4, 0x21, 0x3b, 0x50, 0xd5, 0x26, 0x90, 0x61, 0x10, 0x0e, 0xe9, 0xdc, 0x5d, 0xa0, 0xc9,
	0xca, 0xda, 0x0c, 0xc2, 0xd7, 0x86, 0x64, 0x0f, 0x6a, 0xda, 0x04, 0x33, 0x24, 0x1f, 0x3b, 0x72,
	0x83, 0x55, 0xb4, 0x79, 0x20, 0x2d, 0xfb, 0x3c, 0xb4, 0x62, 0xae, 0xed, 0xf1, 0x85, 0x83, 0x8f,
	0xbb, 0x3d, 0x2d, 0xd6, 0x40, 0x82, 0xa1, 0x9b, 0x7d, 0xa8, 0x6b, 0x13, 0x8c, 0x4e, 0xb8, 0x8c,
	0xec, 0xa6, 0x4f, 0xf4, 0x56, 0x0f, 0xd6, 0x8e, 0x56, 0xda, 0x17, 0x58, 0x4d, 0x9b, 0xbb, 0x16,
	0x7d, 0x6d, 0x48, 0xae, 0x43, 0x7d, 0x26, 0x22, 0x23, 0x55, 0x14, 0xa4, 0x32, 0xa4, 0x9f, 0x2c,
	0xf6, 0x40, 0x06, 0x3f, 0x92, 0x21, 0xa1, 0x50, 0x8e, 0xe5, 0x28, 0x90, 0x21, 0xfd, 0x54, 0xc9,
	0x95, 0x4e, 0x9b, 0xad, 0xc7, 0x72, 0x34, 0x08, 0xc9, 0x15, 0xa8, 0x4e, 0xb9, 0x91, 0x26, 0x0d,
	0x05, 0xfd, 0x34, 0x72, 0x1d, 0x56, 0x40, 0xe4, 0x2a, 0xd4, 0xa6, 0x2a, 0x9a, 0x20, 0xff, 0x19,
	0xe4, 0x09, 0x5b, 0x60, 0x64, 0x17, 0xca, 0x86, 0x4f, 0x06, 0x61, 0x42, 0x3f, 0x5b, 0x2a, 0x8e,
	0xce, 0x20, 0x72, 0x0d, 0x80, 0x47, 0x91, 0x32, 0xdc, 0xc6, 0x41, 0x3f, 0x87, 0xe6, 0x9b, 0xcc,
	0x03, 0x49, 0x07, 0x56, 0x64, 0x4c, 0x3f, 0x5f, 0x72, 0x29, 0xd8, 0x62, 0x2b, 0x32, 0xb6, 0xc1,
	0xa6, 0xf8, 0x2a, 0x6f, 0x95, 0xdc, 0xb3, 0x5c, 0x64, 0xeb, 0xa9, 0x7b, 0xb8, 0x5d, 0xa8, 0x8c,
	0x05, 0x37, 0xa9, 0x16, 0xf4, 0x0b, 0x48, 0x5d, 0x62, 0x39, 0x42, 0x2e, 0xc3, 0x3a, 0xe6, 0xfb,
	0x8b, 0xe8, 0xec, 0x32, 0xc3, 0x35, 0xb9, 0x05, 0x35, 0x1e, 0xcb, 0xac, 0x18, 0xbe, 0x64, 0xc9,
	0x8d, 0xa2, 0x2e, 0xef, 0xc4, 0xd2, 0xd5, 0x44, 0x9f, 0xb2, 0x2a, 0xcf, 0x7e, 0xdb, 0xb0, 0xdf,
	0xb0, 0xac, 0x5b, 0xd1, 0x2f, 0xe3, 0x49, 0xdb, 0xcc, 0x03, 0xed, 0x61, 0xb3, 0xf1, 0x94, 0x4f,
	0xe8, 0x57, 0x2c, 0xbb, 0xde, 0xdf, 0x61, 0xb8, 0xb6, 0xc4, 0xa9, 0x23, 0xbe, 0x8a, 0x51, 0xec,
	0x32, 0x5c, 0x5b, 0x62, 0xec, 0x88, 0xaf, 0x21, 0xb1, 0xc7, 0x70, 0x4d, 0xf6, 0xa0, 0x3a, 0xd1,
	0x2a, 0x8d, 0x6d, 0x76, 0xde, 0xb6, 0xdc, 0x6a, 0xff, 0x0a, 0xab, 0x38, 0x68, 0x10, 0xda, 0x12,
	0x10, 0xe7, 0xb1, 0xd4, 0x22, 0x30, 0x72, 0x26, 0xe8, 0xd7, 0x31, 0x98, 0x2e, 0x03, 0x44, 0x8f,
	0xe5, 0x4c, 0x90, 0x8b, 0xb0, 0x96, 0x4c, 0x64, 0x48, 0xbf, 0x81, 0xd6, 0x57, 0x99, 0x5b, 0x92,
	0x1b, 0xd0, 0x48, 0x4e, 0xb8, 0x16, 0xf9, 0x27, 0xfc, 0x4d, 0x9b, 0xa0, 0xa6, 0x4b, 0x50, 0xdd,
	0x11, 0xd9, 0x37, 0xdb, 0x85, 0x2a, 0xee, 0x93, 0x21, 0xfd, 0xd6, 0x22, 0x89, 0x15, 0x07, 0x0e,
	0x42, 0xb2, 0x09, 0xab, 0x63, 0x19, 0xd2, 0x6f, 0xe3, 0xd1, 0x3d, 0x66, 0x57, 0xe4, 0x06, 0x34,
	0x47, 0x69, 0x62, 0xd4, 0x2c, 0xf7, 0xfe, 0x1d, 0xcc, 0xee, 0x35, 0xd6, 0x40, 0x3c, 0x73, 0xbe,
	0x0b, 0x65, 0x1e, 0x1a, 0x3e, 0x49, 0xe8, 0x77, 0xad, 0xeb, 0x1a, 0xd6, 0x07, 0x42, 0x64, 0x0f,
	0x2a, 0x43, 0xf9, 0x38, 0x90, 0x61, 0x42, 0xbf, 0xb7, 0x08, 0xae, 0x3c, 0x94, 0x8f, 0x6d, 0xf5,
	0xec, 0x43, 0x5d, 0x0d, 0x3f, 0x2a, 0x46, 0x26, 0x30, 0xf3, 0x58, 0xd0, 0xef, 0xe3, 0x01, 0xfb,
	0x0c, 0x10, 0x3d, 0x9e, 0xc7, 0x56, 0x6f, 0x5a, 0x31, 0x9f, 0x88, 0x60, 0xc6, 0xf5, 0x9b, 0xc1,
	0x54, 0x9c, 0x8a, 0x29, 0xfd, 0x01, 0xc6, 0x79, 0x9d, 0x35, 0x2d, 0xf3, 0x80, 0xeb, 0x37, 0xef,
	0x5b, 0x9c, 0xec, 0x43, 0x66, 0xe8, 0xce, 0xfb, 0xe1, 0x22, 0x9a, 0x1a, 0xc2, 0xf6, 0xc8, 0x2b,
	0x50, 0x8d, 0x4f, 0x94, 0x51, 0xc7, 0x7c, 0x42, 0x7f, 0x84, 0xe7, 0xbd, 0x8b, 0x15, 0x90, 0x4d,
	0x95, 0x38, 0x37, 0x81, 0x8c, 0xc6, 0x8a, 0xfe, 0x18, 0xe9, 0xe7, 0x58, 0x45, 0x9c, 0x9b, 0x41,
	0x34, 0x56, 0x36, 0x5e, 0x94, 0x7f, 0x8c, 0xf7, 0x27, 0xb8, 0xe1, 0x06, 0x03, 0x44, 0x5d, 0xbc,
	0xfb, 0x50, 0xb7, 0x37, 0xce, 0xab, 0xf8, 0xa7, 0x18, 0xeb, 0xf3, 0x0c, 0x86, 0xf2, 0xf1, 0xbd,
	0xac, 0x90, 0x0f, 0xa1, 0x1d, 0x72, 0x7d, 0x26, 0xa3, 0x41, 0x98, 0x04, 0x68, 0x4b, 0x7f, 0xb6,
	0x08, 0xb7, 0x55, 0x90, 0x59, 0x9b, 0xe8, 0x42, 0xcd, 0xbd, 0x81, 0x3b, 0xf5, 0xe7, 0xe8, 0xf1,
	0x80, 0x55, 0x2d, 0xe6, 0xce, 0xbc, 0x66, 0xc5, 0xf2, 0xbe, 0x8a, 0x26, 0xc7, 0xb6, 0x75, 0xfc,
	0xa2, 0xe4, 0xd4, 0xf2, 0x05, 0xe6, 0x81, 0x56, 0x44, 0xa6, 0xd9, 0xef, 0x7b, 0x32, 0xa4, 0xbf,
	0xc4, 0xd0, 0x5f, 0x64, 0x3e, 0x6a, 0xfd, 0xd8, 0x76, 0x73, 0x5f, 0x44, 0x13, 0x73, 0x42, 0x7f,
	0x85, 0x85, 0xff, 0x6e, 0xe6, 0x81, 0x76, 0x4b, 0x22, 0x67, 0x72, 0xca, 0xb5, 0x34, 0x73, 0xfa,
	0x6b, 0x74, 0xf3, 0x1e, 0xe6, 0x81, 0xa4, 0x07, 0x60, 0x94, 0x15, 0xa3, 0xd4, 0xca, 0xd5, 0x6f,
	0x30, 0xdc, 0x9b, 0xac, 0xe6, 0xc0, 0x47, 0xa9, 0x0c, 0xed, 0x2b, 0xe3, 0x0e, 0x19, 0xd2, 0xdf,
	0xa2, 0x8b, 0x43, 0x56, 0x71, 0xd0, 0x20, 0xb4, 0xf6, 0xc9, 0x3c, 0x1a, 0x05, 0xb3, 0xe1, 0x54,
	0x4d, 0xe8, 0xef, 0xf0, 0x36, 0xb7, 0x58, 0xcd, 0x82, 0x0f, 0x2c, 0x46, 0x76, 0xa0, 0x32, 0x91,
	0x63, 0x97, 0xe5, 0xdf, 0xa3, 0xf9, 0x7b, 0x59, 0x79, 0x22, 0xc7, 0x36, 0xc1, 0x37, 0xa1, 0x93,
	0x4b, 0xbf, 0x8a, 0xa6, 0x73, 0x7c, 0xb3, 0x3f, 0xe0, 0x55, 0x5e, 0x62, 0xad, 0x8c, 0xfb, 0x70,
	0x34, 0x9d, 0xbb, 0xa7, 0x7b, 0x11, 0x5a, 0x4a, 0xcb, 0x89, 0x8c, 0xf8, 0x34, 0xaf, 0xf3, 0x3f,
	0xa2, 0xcb, 0x97, 0xd9, 0x46, 0xce, 0x14, 0xad, 0xaf, 0x15, 0x6b, 0x35, 0x12, 0x49, 0x22, 0xc2,
	0x60, 0x38, 0x0f, 0x4e, 0x6f, 0xd3, 0x3f, 0x61, 0x74, 0xaf, 0xb0, 0x66, 0xc1, 0x1c, 0xcd, 0x5f,
	0xbf, 0x6d, 0x3f, 0x1e, 0x2d, 0xdc, 0x24, 0x90, 0xb5, 0xb8, 0x3f, 0xa3, 0x26, 0xdc, 0x66, 0x8d,
	0x0c, 0xc7, 0x36, 0x77, 0x00, 0x1b, 0x23, 0x35, 0xb3, 0x3a, 0x9e, 0x6f, 0xfc, 0x0b, 0x6e, 0x7c,
	0x1f, 0x6b, 0xe6, 0x04, 0xee, 0xbc, 0x09, 0x1d, 0x99, 0x04, 0x72, 0x16, 0x2b, 0x6d, 0xc7, 0x00,
	0xf7, 0x58, 0xf4, 0xaf, 0x78, 0xfc, 0xfb, 0x59, 0x4b, 0x26, 0x83, 0x8c, 0x3a, 0xb6, 0x0c, 0x79,
	0x09, 0xb6, 0xe4, 0x38, 0x18, 0xf1, 0x28, 0x18, 0x4f, 0xd5, 0x59, 0x20, 0xa3, 0xcc, 0xe2, 0x6f,
	0x68, 0xf1, 0x2a, 0x6b, 0xcb, 0xf1, 0x5d, 0x1e, 0xdd, 0x9b, 0xaa, 0xb3, 0x41, 0x84, 0x26, 0xb7,
	0x80, 0xf0, 0x38, 0xd6, 0xea, 0x94, 0x4f, 0xf1, 0x6b, 0x73, 0x7a, 0xf4, 0x77, 0xcc, 0xdf, 0x07,
	0x58, 0x3b, 0x27, 0xed, 0x07, 0xe7, 0x54, 0xe9, 0x3a, 0xd4, 0xcf, 0xa4, 0x39, 0xb9, 0x8b, 0x71,
	0xd2, 0x7f, 0xe0, 0x23, 0x7f, 0x90, 0xf9, 0x28, 0xe9, 0x41, 0x7d, 0xc6, 0x23, 0x5b, 0xbd, 0x4e,
	0x1b, 0xff, 0xe9, 0xdc, 0x31, 0x40, 0xec, 0x9e, 0x95, 0xc7, 0xe7, 0xa0, 0xe1, 0x52, 0xfd, 0xba,
	0x8c, 0x6d, 0x4a, 0xe8, 0xbf, 0xf0, 0x05, 0x3e, 0xc4, 0x96, 0xe0, 0xa3, 0x06, 0x80, 0x0c, 0x83,
	0x58, 0x8b, 0x44, 0x44, 0xe6, 0x68, 0x03, 0x1a, 0xb6, 0x2a, 0x8b, 0xf5, 0x16, 0x90, 0xc5, 0x84,
	0x54, 0xa0, 0x9b, 0xd0, 0x29, 0x66, 0xa0, 0x02, 0x6c, 0x42, 0x7d, 0xe6, 0x79, 0xba, 0x08, 0x9b,
	0xde, 0x18, 0x54, 0xc0, 0x6d, 0xd8, 0xc0, 0x31, 0xa6, 0x40, 0x3a, 0xd0, 0xca, 0xc6, 0x19, 0xff,
	0xd4, 0xc5, 0x18, 0xe3, 0xa3, 0x8b, 0xd9, 0xa5, 0x40, 0x09, 0xb4, 0xf3, 0x81, 0xa5, 0xc0, 0x2e,
	0xc1, 0x96, 0x3f, 0xa7, 0x14, 0x78, 0x03, 0x40, 0x1b, 0xdf, 0x32, 0x1f, 0x23, 0xfc, 0x9b, 0x15,
	0xf3, 0x47, 0x01, 0x6e, 0xc3, 0xe5, 0xa7, 0xc6, 0x0e, 0xff, 0x3a, 0xf8, 0xc1, 0xf9, 0x5e, 0xf3,
	0x21, 0xc0, 0xf7, 0x5a, 0x34, 0x7e, 0xff, 0x3a, 0x8b, 0x76, 0xee, 0x87, 0x28, 0x63, 0xdf, 0x7d,
	0xba, 0x7c, 0x60, 0x07, 0x5a, 0x99, 0x06, 0x16, 0x50, 0x0b, 0x9a, 0xcb, 0xd7, 0xdf, 0x84, 0x4e,
	0xd1, 0xb7, 0xfd, 0xe3, 0x16, 0x6d, 0xd8, 0xb7, 0x75, 0xed, 0xd7, 0x07, 0x4e, 0x9f, 0x06, 0xc6,
	0x4b, 0x00, 0x81, 0x76, 0xde, 0x76, 0xfd, 0x64, 0x7b, 0xcd, 0xd6, 0xaf, 0x26, 0xdb, 0x50, 0xfd,
	0x12, 0x19, 0x7b, 0xcb, 0xcb, 0x70, 0x71, 0xa9, 0x15, 0xfa, 0xee, 0xbc, 0x06, 0xb6, 0x9c, 0x87,
	0xa5, 0x9e, 0xe5, 0x07, 0x95, 0x37, 0x1b, 0x1f, 0xcb, 0x9b, 0x8e, 0xef, 0xd9, 0x6b, 0x35, 0x3e,
	0xec, 0x75, 0x17, 0xff, 0x21, 0x8b, 0x06, 0xb1, 0x5c, 0x86, 0x79, 0x03, 0xf0, 0x3d, 0x78, 0x92,
	0xef, 0x6f, 0x5e, 0xa8, 0xbc, 0x8f, 0x2e, 0x84, 0x7d, 0x69, 0x6f, 0x21, 0xf0, 0xfe, 0x2d, 0x72,
	0x51, 0x5f, 0xb2, 0x2f, 0xa4, 0xdc, 0x2f, 0x8d, 0x4c, 0xbe, 0x0b, 0x68, 0x17, 0xb6, 0x9f, 0x51,
	0x6d, 0xff, 0x39, 0x9f, 0xd2, 0xe8, 0xa5, 0x97, 0x5e, 0x96, 0x64, 0x3f, 0x69, 0x4b, 0x12, 0x5c,
	0x10, 0x14, 0x2e, 0x2d, 0x6b, 0xae, 0x1f, 0xc5, 0x33, 0x1a, 0x5b, 0x90, 0x5d, 0xd8, 0x7b, 0x27,
	0x45, 0x2d, 0xf8, 0x3d, 0xd8, 0x79, 0x56, 0x3e, 0xfd, 0x67, 0xf7, 0x54, 0xd1, 0x17, 0x00, 0x5f,
	0xe4, 0x0a, 0xfc, 0xd5, 0x7f, 0x3f, 0xe9, 0x96, 0xfe, 0xf3, 0xa4, 0x5b, 0xfa, 0xef, 0x93, 0x6e,
	0xe9, 0xad, 0xff, 0x75, 0x2f, 0xc0, 0xf6, 0x28, 0x3a, 0x4c, 0x64, 0xc4, 0x0f, 0x79, 0x2c, 0x0f,
	0x43, 0x6e, 0x38, 0xfe, 0x9b, 0x1c, 0xa6, 0xe3, 0x23, 0xc0, 0x31, 0xe1, 0x0d, 0xcd, 0xe3, 0x61,
	0xd9, 0xa1, 0xaf, 0xfc, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x10, 0xcb, 0x21, 0x0e, 0xa8, 0x0e, 0x00,
	0x00,
}
