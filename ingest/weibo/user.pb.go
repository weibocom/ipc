// Code generated by protoc-gen-gogo.
// source: user.proto
// DO NOT EDIT!

package weibo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SinaUser_Gender int32

const (
	SinaUser_FEMALE SinaUser_Gender = 0
	SinaUser_MALE   SinaUser_Gender = 1
)

var SinaUser_Gender_name = map[int32]string{
	0: "FEMALE",
	1: "MALE",
}
var SinaUser_Gender_value = map[string]int32{
	"FEMALE": 0,
	"MALE":   1,
}

func (x SinaUser_Gender) String() string {
	return proto.EnumName(SinaUser_Gender_name, int32(x))
}
func (SinaUser_Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptorUser, []int{0, 0} }

type SinaUser struct {
	// basic info
	//
	// Types that are valid to be assigned to IdPresent:
	//	*SinaUser_Id
	IdPresent isSinaUser_IdPresent `protobuf_oneof:"id_present"`
	// Types that are valid to be assigned to ScreenNamePresent:
	//	*SinaUser_ScreenName
	ScreenNamePresent isSinaUser_ScreenNamePresent `protobuf_oneof:"screen_name_present"`
	// Types that are valid to be assigned to DomainPresent:
	//	*SinaUser_Domain
	DomainPresent isSinaUser_DomainPresent `protobuf_oneof:"domain_present"`
	// Types that are valid to be assigned to CreatedAtPresent:
	//	*SinaUser_CreatedAt
	CreatedAtPresent isSinaUser_CreatedAtPresent `protobuf_oneof:"created_at_present"`
	// Types that are valid to be assigned to GenderPresent:
	//	*SinaUser_Gender_
	GenderPresent isSinaUser_GenderPresent `protobuf_oneof:"gender_present"`
	// Types that are valid to be assigned to ProvincePresent:
	//	*SinaUser_Province
	ProvincePresent isSinaUser_ProvincePresent `protobuf_oneof:"province_present"`
	// Types that are valid to be assigned to CityPresent:
	//	*SinaUser_City
	CityPresent isSinaUser_CityPresent `protobuf_oneof:"city_present"`
	// Types that are valid to be assigned to DescriptionPresent:
	//	*SinaUser_Description
	DescriptionPresent isSinaUser_DescriptionPresent `protobuf_oneof:"description_present"`
	// Types that are valid to be assigned to UrlPresent:
	//	*SinaUser_Url
	UrlPresent isSinaUser_UrlPresent `protobuf_oneof:"url_present"`
	// use avatar version instead of image_url to save space
	// string profile_image_url = 414;
	//
	// Types that are valid to be assigned to AvatarVerPresent:
	//	*SinaUser_AvatarVer
	AvatarVerPresent isSinaUser_AvatarVerPresent `protobuf_oneof:"avatar_ver_present"`
	// Types that are valid to be assigned to WeihaoPresent:
	//	*SinaUser_Weihao
	WeihaoPresent isSinaUser_WeihaoPresent `protobuf_oneof:"weihao_present"`
	//    oneof verified_present {
	// bool verified = 421;
	//    }
	//
	// Types that are valid to be assigned to VerifiedReasonPresent:
	//	*SinaUser_VerifiedReason
	VerifiedReasonPresent isSinaUser_VerifiedReasonPresent `protobuf_oneof:"verified_reason_present"`
	// Types that are valid to be assigned to FollowersCountPresent:
	//	*SinaUser_FollowersCount
	FollowersCountPresent isSinaUser_FollowersCountPresent `protobuf_oneof:"followers_count_present"`
	// Types that are valid to be assigned to FriendsCountPresent:
	//	*SinaUser_FriendsCount
	FriendsCountPresent isSinaUser_FriendsCountPresent `protobuf_oneof:"friends_count_present"`
	// Types that are valid to be assigned to StatusesCountPresent:
	//	*SinaUser_StatusesCount
	StatusesCountPresent isSinaUser_StatusesCountPresent `protobuf_oneof:"statuses_count_present"`
	// Types that are valid to be assigned to FavouritesCountPresent:
	//	*SinaUser_FavouritesCount
	FavouritesCountPresent isSinaUser_FavouritesCountPresent `protobuf_oneof:"favourites_count_present"`
	// Types that are valid to be assigned to BiFollowersCountPresent:
	//	*SinaUser_BiFollowersCount
	BiFollowersCountPresent isSinaUser_BiFollowersCountPresent `protobuf_oneof:"bi_followers_count_present"`
	// /////////// private info, not show any more
	//
	// Types that are valid to be assigned to EmailPresent:
	//	*SinaUser_Email
	EmailPresent isSinaUser_EmailPresent `protobuf_oneof:"email_present"`
	// Types that are valid to be assigned to QqPresent:
	//	*SinaUser_Qq
	QqPresent isSinaUser_QqPresent `protobuf_oneof:"qq_present"`
	//    oneof geo_enabled_present {
	// bool geo_enabled = 456;
	//    }
	// clear geography (map) time,  befor the clear time,
	// all status not show geography info when load from db
	//
	// Types that are valid to be assigned to ClearGeoTimePresent:
	//	*SinaUser_ClearGeoTime
	ClearGeoTimePresent isSinaUser_ClearGeoTimePresent `protobuf_oneof:"clear_geo_time_present"`
	// Types that are valid to be assigned to LevelPresent:
	//	*SinaUser_Level
	LevelPresent isSinaUser_LevelPresent `protobuf_oneof:"level_present"`
	// Types that are valid to be assigned to UserTypePresent:
	//	*SinaUser_UserType
	UserTypePresent isSinaUser_UserTypePresent `protobuf_oneof:"user_type_present"`
	// Types that are valid to be assigned to PrivacyPresent:
	//	*SinaUser_Privacy
	PrivacyPresent isSinaUser_PrivacyPresent `protobuf_oneof:"privacy_present"`
	// Types that are valid to be assigned to LangPresent:
	//	*SinaUser_Lang
	LangPresent isSinaUser_LangPresent `protobuf_oneof:"lang_present"`
	// Types that are valid to be assigned to CoverImgPidPresent:
	//	*SinaUser_CoverImgPid
	CoverImgPidPresent isSinaUser_CoverImgPidPresent `protobuf_oneof:"coverImg_pid_present"`
	// Types that are valid to be assigned to CoverImgCoordinatesPresent:
	//	*SinaUser_CoverImgCoordinates
	CoverImgCoordinatesPresent isSinaUser_CoverImgCoordinatesPresent `protobuf_oneof:"coverImg_coordinates_present"`
	//    oneof ulevel_present {
	// uint32 ulevel = 464;
	//    }
	//
	// Types that are valid to be assigned to UlevelPresent:
	//	*SinaUser_Ulevel
	UlevelPresent isSinaUser_UlevelPresent `protobuf_oneof:"ulevel_present"`
	// Types that are valid to be assigned to RegipPresent:
	//	*SinaUser_Regip
	RegipPresent isSinaUser_RegipPresent `protobuf_oneof:"regip_present"`
	// Types that are valid to be assigned to RegsourcePresent:
	//	*SinaUser_Regsource
	RegsourcePresent isSinaUser_RegsourcePresent `protobuf_oneof:"regsource_present"`
	// Types that are valid to be assigned to UpdateTimePresent:
	//	*SinaUser_UpdateTime
	UpdateTimePresent isSinaUser_UpdateTimePresent `protobuf_oneof:"update_time_present"`
	// star param
	//
	// Types that are valid to be assigned to StarPresent:
	//	*SinaUser_Star
	StarPresent isSinaUser_StarPresent `protobuf_oneof:"star_present"`
	// Types that are valid to be assigned to SignPresent:
	//	*SinaUser_Sign
	SignPresent isSinaUser_SignPresent `protobuf_oneof:"sign_present"`
	// Types that are valid to be assigned to RegionPresent:
	//	*SinaUser_Region
	RegionPresent isSinaUser_RegionPresent `protobuf_oneof:"region_present"`
	// member type
	//
	// Types that are valid to be assigned to MbtypePresent:
	//	*SinaUser_Mbtype
	MbtypePresent isSinaUser_MbtypePresent `protobuf_oneof:"mbtype_present"`
	// member level
	//
	// Types that are valid to be assigned to MbrankPresent:
	//	*SinaUser_Mbrank
	MbrankPresent isSinaUser_MbrankPresent `protobuf_oneof:"mbrank_present"`
	// dose it contain member shielding
	//
	// Types that are valid to be assigned to HasMblockWordPresent:
	//	*SinaUser_HasMblockWord
	HasMblockWordPresent isSinaUser_HasMblockWordPresent `protobuf_oneof:"has_mblock_word_present"`
	// member vip privilege
	MbPrivileges []uint64 `protobuf:"varint,483,rep,name=mb_privileges,json=mbPrivileges" json:"mb_privileges,omitempty"`
	// hd picture
	//
	// Types that are valid to be assigned to AvatarHdPidPresent:
	//	*SinaUser_AvatarHdPid
	AvatarHdPidPresent isSinaUser_AvatarHdPidPresent `protobuf_oneof:"avatar_hd_pid_present"`
	// Types that are valid to be assigned to AvatarHdCoordinatesPresent:
	//	*SinaUser_AvatarHdCoordinates
	AvatarHdCoordinatesPresent isSinaUser_AvatarHdCoordinatesPresent `protobuf_oneof:"avatar_hd_coordinates_present"`
	// mobile end like
	//
	// Types that are valid to be assigned to CoverImgPidMobilePresent:
	//	*SinaUser_CoverImgPidMobile
	CoverImgPidMobilePresent isSinaUser_CoverImgPidMobilePresent `protobuf_oneof:"coverImg_pid_mobile_present"`
	// Types that are valid to be assigned to CoverImgCoordinatesIphonePresent:
	//	*SinaUser_CoverImgCoordinatesIphone
	CoverImgCoordinatesIphonePresent isSinaUser_CoverImgCoordinatesIphonePresent `protobuf_oneof:"coverImg_coordinates_iphone_present"`
	// User's personal page type identifier value
	//
	// Types that are valid to be assigned to PtypePresent:
	//	*SinaUser_Ptype
	PtypePresent isSinaUser_PtypePresent `protobuf_oneof:"ptype_present"`
	// Types that are valid to be assigned to MobilePresent:
	//	*SinaUser_Mobile
	MobilePresent isSinaUser_MobilePresent `protobuf_oneof:"mobile_present"`
	// Ability to tag
	//
	// Types that are valid to be assigned to AbilityTagsPresent:
	//	*SinaUser_AbilityTags
	AbilityTagsPresent isSinaUser_AbilityTagsPresent `protobuf_oneof:"ability_tags_present"`
	// Shielding keywords expiration time
	//
	// Types that are valid to be assigned to BlockWordExpirePresent:
	//	*SinaUser_BlockWordExpire
	BlockWordExpirePresent isSinaUser_BlockWordExpirePresent `protobuf_oneof:"block_word_expire_present"`
	// Shielding application expiration time
	//
	// Types that are valid to be assigned to BlockAppExpirePresent:
	//	*SinaUser_BlockAppExpire
	BlockAppExpirePresent isSinaUser_BlockAppExpirePresent `protobuf_oneof:"block_app_expire_present"`
	// Certification industry
	//
	// Types that are valid to be assigned to VerifiedTradePresent:
	//	*SinaUser_VerifiedTrade
	VerifiedTradePresent isSinaUser_VerifiedTradePresent `protobuf_oneof:"verified_trade_present"`
	// Certification that link
	//
	// Types that are valid to be assigned to VerifiedReasonUrlPresent:
	//	*SinaUser_VerifiedReasonUrl
	VerifiedReasonUrlPresent isSinaUser_VerifiedReasonUrlPresent `protobuf_oneof:"verified_reason_url_present"`
	// Authentication source document
	//
	// Types that are valid to be assigned to VerifiedSourcePresent:
	//	*SinaUser_VerifiedSource
	VerifiedSourcePresent isSinaUser_VerifiedSourcePresent `protobuf_oneof:"verified_source_present"`
	// Authentication source link
	//
	// Types that are valid to be assigned to VerifiedSourceUrlPresent:
	//	*SinaUser_VerifiedSourceUrl
	VerifiedSourceUrlPresent isSinaUser_VerifiedSourceUrlPresent `protobuf_oneof:"verified_source_url_present"`
	// Unicom member pseudo-code information free flow
	//
	// Types that are valid to be assigned to UnicomFreePcPresent:
	//	*SinaUser_UnicomFreePc
	UnicomFreePcPresent isSinaUser_UnicomFreePcPresent `protobuf_oneof:"unicom_free_pc_present"`
	// Whether opening report "location" function
	//
	// Types that are valid to be assigned to LocationRightsPresent:
	//	*SinaUser_LocationRights
	LocationRightsPresent isSinaUser_LocationRightsPresent `protobuf_oneof:"location_rights_present"`
	// Whether opening "custom menu" function
	//
	// Types that are valid to be assigned to MenuPresent:
	//	*SinaUser_Menu
	MenuPresent isSinaUser_MenuPresent `protobuf_oneof:"menu_present"`
	// The World Cup contest
	//
	// Types that are valid to be assigned to WorldcupGuessPresent:
	//	*SinaUser_WorldcupGuess
	WorldcupGuessPresent isSinaUser_WorldcupGuessPresent `protobuf_oneof:"worldcup_guess_present"`
	// User comments on group type
	//
	// Types that are valid to be assigned to DianpingsPresent:
	//	*SinaUser_Dianpings
	DianpingsPresent isSinaUser_DianpingsPresent `protobuf_oneof:"dianpings_present"`
	// User Icon to expand, the original sign field is full
	//
	// Types that are valid to be assigned to SignExtPresent:
	//	*SinaUser_SignExt
	SignExtPresent isSinaUser_SignExtPresent `protobuf_oneof:"sign_ext_present"`
	// User light badge logo
	//
	// Types that are valid to be assigned to BadgeTopPresent:
	//	*SinaUser_BadgeTop
	BadgeTopPresent isSinaUser_BadgeTopPresent `protobuf_oneof:"badge_top_present"`
	// Blue v certification audit status
	//
	// Types that are valid to be assigned to VerifiedStatePresent:
	//	*SinaUser_VerifiedState
	VerifiedStatePresent isSinaUser_VerifiedStatePresent `protobuf_oneof:"verified_state_present"`
	// The user's credit value
	//
	// Types that are valid to be assigned to CreditScorePresent:
	//	*SinaUser_CreditScore
	CreditScorePresent isSinaUser_CreditScorePresent `protobuf_oneof:"credit_score_present"`
	// Users concerned about the page count (if it is written in the above will amend the many attributes of SinaUserWrap off)
	//
	// Types that are valid to be assigned to PagefriendsCountPresent:
	//	*SinaUser_PagefriendsCount
	PagefriendsCountPresent isSinaUser_PagefriendsCountPresent `protobuf_oneof:"pagefriends_count_present"`
	// Authentication level
	//
	// Types that are valid to be assigned to VerifiedLevelPresent:
	//	*SinaUser_VerifiedLevel
	VerifiedLevelPresent isSinaUser_VerifiedLevelPresent `protobuf_oneof:"verified_level_present"`
	// Audio details page
	//
	// Types that are valid to be assigned to AudioDetailPagePresent:
	//	*SinaUser_AudioDetailPage
	AudioDetailPagePresent isSinaUser_AudioDetailPagePresent `protobuf_oneof:"audio_detail_page_present"`
	// Audio broadcast address
	//
	// Types that are valid to be assigned to AudioPlayAddrPresent:
	//	*SinaUser_AudioPlayAddr
	AudioPlayAddrPresent isSinaUser_AudioPlayAddrPresent `protobuf_oneof:"audio_play_addr_present"`
	// Blue v certification that content
	//
	// Types that are valid to be assigned to VerifiedReasonModifiedPresent:
	//	*SinaUser_VerifiedReasonModified
	VerifiedReasonModifiedPresent isSinaUser_VerifiedReasonModifiedPresent `protobuf_oneof:"verified_reason_modified_present"`
	// The contact of blue v
	//
	// Types that are valid to be assigned to VerifiedContactNamePresent:
	//	*SinaUser_VerifiedContactName
	VerifiedContactNamePresent isSinaUser_VerifiedContactNamePresent `protobuf_oneof:"verified_contact_name_present"`
	// Blue v contact email
	//
	// Types that are valid to be assigned to VerifiedContactEmailPresent:
	//	*SinaUser_VerifiedContactEmail
	VerifiedContactEmailPresent isSinaUser_VerifiedContactEmailPresent `protobuf_oneof:"verified_contact_email_present"`
	// Blue v contact phone
	//
	// Types that are valid to be assigned to VerifiedContactMobilePresent:
	//	*SinaUser_VerifiedContactMobile
	VerifiedContactMobilePresent isSinaUser_VerifiedContactMobilePresent `protobuf_oneof:"verified_contact_mobile_present"`
	// Information user level 0 ~ 48, the default is 0
	//
	// Types that are valid to be assigned to UrankPresent:
	//	*SinaUser_Urank
	UrankPresent isSinaUser_UrankPresent `protobuf_oneof:"urank_present"`
	// Block frozen whether user count. New strategy in January, 2015, sass, users are blocked after freezing, the attention on the number of people kill freeze fans will be + 1, this field to distinguish between old and new block frozen behavior. 0: not included in the block, freeze, fans, 1: the fans have been included in the block and freeze
	//
	// Types that are valid to be assigned to HasFrozenCountPresent:
	//	*SinaUser_HasFrozenCount
	HasFrozenCountPresent isSinaUser_HasFrozenCountPresent `protobuf_oneof:"has_frozen_count_present"`
	// Some state control user or functional properties
	//
	// Types that are valid to be assigned to ControllerSettingPresent:
	//	*SinaUser_ControllerSetting
	ControllerSettingPresent isSinaUser_ControllerSettingPresent `protobuf_oneof:"controller_setting_present"`
	// The user capacity decision markers
	//
	// Types that are valid to be assigned to UserAbilityPresent:
	//	*SinaUser_UserAbility
	UserAbilityPresent isSinaUser_UserAbilityPresent `protobuf_oneof:"user_ability_present"`
	// Member template id
	//
	// Types that are valid to be assigned to CardidPresent:
	//	*SinaUser_Cardid
	CardidPresent isSinaUser_CardidPresent `protobuf_oneof:"cardid_present"`
	// Head pendant id
	//
	// Types that are valid to be assigned to AvatargjIdPresent:
	//	*SinaUser_AvatargjId
	AvatargjIdPresent isSinaUser_AvatargjIdPresent `protobuf_oneof:"avatargj_id_present"`
	// User authentication information extension field, which is used to support paid blue v v information and gold
	//
	// Types that are valid to be assigned to VerifiedTypeExtPresent:
	//	*SinaUser_VerifiedTypeExt
	VerifiedTypeExtPresent isSinaUser_VerifiedTypeExtPresent `protobuf_oneof:"verified_type_ext_present"`
	// user insecurity label
	//
	// Types that are valid to be assigned to InsecurityPresent:
	//	*SinaUser_Insecurity
	InsecurityPresent isSinaUser_InsecurityPresent `protobuf_oneof:"insecurity_present"`
	// user insecurity label
	//
	// Types that are valid to be assigned to StorySegmentidPresent:
	//	*SinaUser_StorySegmentid
	StorySegmentidPresent isSinaUser_StorySegmentidPresent `protobuf_oneof:"story_segmentid_present"`
	// user attitude_style id
	//
	// Types that are valid to be assigned to AttitudeStylePresent:
	//	*SinaUser_AttitudeStyle
	AttitudeStylePresent isSinaUser_AttitudeStylePresent `protobuf_oneof:"attitude_style_present"`
	// vclub member flag
	//
	// Types that are valid to be assigned to VclubMemberPresent:
	//	*SinaUser_VclubMember
	VclubMemberPresent isSinaUser_VclubMemberPresent `protobuf_oneof:"vclub_member_present"`
	// Types that are valid to be assigned to GenderStatePresent:
	//	*SinaUser_GenderState
	GenderStatePresent isSinaUser_GenderStatePresent `protobuf_oneof:"gender_state_present"`
}

func (m *SinaUser) Reset()                    { *m = SinaUser{} }
func (m *SinaUser) String() string            { return proto.CompactTextString(m) }
func (*SinaUser) ProtoMessage()               {}
func (*SinaUser) Descriptor() ([]byte, []int) { return fileDescriptorUser, []int{0} }

type isSinaUser_IdPresent interface {
	isSinaUser_IdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_ScreenNamePresent interface {
	isSinaUser_ScreenNamePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_DomainPresent interface {
	isSinaUser_DomainPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CreatedAtPresent interface {
	isSinaUser_CreatedAtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_GenderPresent interface {
	isSinaUser_GenderPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_ProvincePresent interface {
	isSinaUser_ProvincePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CityPresent interface {
	isSinaUser_CityPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_DescriptionPresent interface {
	isSinaUser_DescriptionPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UrlPresent interface {
	isSinaUser_UrlPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AvatarVerPresent interface {
	isSinaUser_AvatarVerPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_WeihaoPresent interface {
	isSinaUser_WeihaoPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedReasonPresent interface {
	isSinaUser_VerifiedReasonPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_FollowersCountPresent interface {
	isSinaUser_FollowersCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_FriendsCountPresent interface {
	isSinaUser_FriendsCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_StatusesCountPresent interface {
	isSinaUser_StatusesCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_FavouritesCountPresent interface {
	isSinaUser_FavouritesCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_BiFollowersCountPresent interface {
	isSinaUser_BiFollowersCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_EmailPresent interface {
	isSinaUser_EmailPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_QqPresent interface {
	isSinaUser_QqPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_ClearGeoTimePresent interface {
	isSinaUser_ClearGeoTimePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_LevelPresent interface {
	isSinaUser_LevelPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UserTypePresent interface {
	isSinaUser_UserTypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_PrivacyPresent interface {
	isSinaUser_PrivacyPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_LangPresent interface {
	isSinaUser_LangPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CoverImgPidPresent interface {
	isSinaUser_CoverImgPidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CoverImgCoordinatesPresent interface {
	isSinaUser_CoverImgCoordinatesPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UlevelPresent interface {
	isSinaUser_UlevelPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_RegipPresent interface {
	isSinaUser_RegipPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_RegsourcePresent interface {
	isSinaUser_RegsourcePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UpdateTimePresent interface {
	isSinaUser_UpdateTimePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_StarPresent interface {
	isSinaUser_StarPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_SignPresent interface {
	isSinaUser_SignPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_RegionPresent interface {
	isSinaUser_RegionPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_MbtypePresent interface {
	isSinaUser_MbtypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_MbrankPresent interface {
	isSinaUser_MbrankPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_HasMblockWordPresent interface {
	isSinaUser_HasMblockWordPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AvatarHdPidPresent interface {
	isSinaUser_AvatarHdPidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AvatarHdCoordinatesPresent interface {
	isSinaUser_AvatarHdCoordinatesPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CoverImgPidMobilePresent interface {
	isSinaUser_CoverImgPidMobilePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CoverImgCoordinatesIphonePresent interface {
	isSinaUser_CoverImgCoordinatesIphonePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_PtypePresent interface {
	isSinaUser_PtypePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_MobilePresent interface {
	isSinaUser_MobilePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AbilityTagsPresent interface {
	isSinaUser_AbilityTagsPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_BlockWordExpirePresent interface {
	isSinaUser_BlockWordExpirePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_BlockAppExpirePresent interface {
	isSinaUser_BlockAppExpirePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedTradePresent interface {
	isSinaUser_VerifiedTradePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedReasonUrlPresent interface {
	isSinaUser_VerifiedReasonUrlPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedSourcePresent interface {
	isSinaUser_VerifiedSourcePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedSourceUrlPresent interface {
	isSinaUser_VerifiedSourceUrlPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UnicomFreePcPresent interface {
	isSinaUser_UnicomFreePcPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_LocationRightsPresent interface {
	isSinaUser_LocationRightsPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_MenuPresent interface {
	isSinaUser_MenuPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_WorldcupGuessPresent interface {
	isSinaUser_WorldcupGuessPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_DianpingsPresent interface {
	isSinaUser_DianpingsPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_SignExtPresent interface {
	isSinaUser_SignExtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_BadgeTopPresent interface {
	isSinaUser_BadgeTopPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedStatePresent interface {
	isSinaUser_VerifiedStatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CreditScorePresent interface {
	isSinaUser_CreditScorePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_PagefriendsCountPresent interface {
	isSinaUser_PagefriendsCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedLevelPresent interface {
	isSinaUser_VerifiedLevelPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AudioDetailPagePresent interface {
	isSinaUser_AudioDetailPagePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AudioPlayAddrPresent interface {
	isSinaUser_AudioPlayAddrPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedReasonModifiedPresent interface {
	isSinaUser_VerifiedReasonModifiedPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedContactNamePresent interface {
	isSinaUser_VerifiedContactNamePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedContactEmailPresent interface {
	isSinaUser_VerifiedContactEmailPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedContactMobilePresent interface {
	isSinaUser_VerifiedContactMobilePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UrankPresent interface {
	isSinaUser_UrankPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_HasFrozenCountPresent interface {
	isSinaUser_HasFrozenCountPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_ControllerSettingPresent interface {
	isSinaUser_ControllerSettingPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_UserAbilityPresent interface {
	isSinaUser_UserAbilityPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_CardidPresent interface {
	isSinaUser_CardidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AvatargjIdPresent interface {
	isSinaUser_AvatargjIdPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VerifiedTypeExtPresent interface {
	isSinaUser_VerifiedTypeExtPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_InsecurityPresent interface {
	isSinaUser_InsecurityPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_StorySegmentidPresent interface {
	isSinaUser_StorySegmentidPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_AttitudeStylePresent interface {
	isSinaUser_AttitudeStylePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_VclubMemberPresent interface {
	isSinaUser_VclubMemberPresent()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isSinaUser_GenderStatePresent interface {
	isSinaUser_GenderStatePresent()
	MarshalTo([]byte) (int, error)
	Size() int
}

type SinaUser_Id struct {
	Id uint64 `protobuf:"varint,401,opt,name=id,proto3,oneof"`
}
type SinaUser_ScreenName struct {
	ScreenName string `protobuf:"bytes,402,opt,name=screen_name,json=screenName,proto3,oneof"`
}
type SinaUser_Domain struct {
	Domain string `protobuf:"bytes,403,opt,name=domain,proto3,oneof"`
}
type SinaUser_CreatedAt struct {
	CreatedAt uint64 `protobuf:"varint,404,opt,name=created_at,json=createdAt,proto3,oneof"`
}
type SinaUser_Gender_ struct {
	Gender SinaUser_Gender `protobuf:"varint,405,opt,name=gender,proto3,enum=weibo.SinaUser_Gender,oneof"`
}
type SinaUser_Province struct {
	Province string `protobuf:"bytes,410,opt,name=province,proto3,oneof"`
}
type SinaUser_City struct {
	City string `protobuf:"bytes,411,opt,name=city,proto3,oneof"`
}
type SinaUser_Description struct {
	Description string `protobuf:"bytes,412,opt,name=description,proto3,oneof"`
}
type SinaUser_Url struct {
	Url string `protobuf:"bytes,413,opt,name=url,proto3,oneof"`
}
type SinaUser_AvatarVer struct {
	AvatarVer uint64 `protobuf:"varint,415,opt,name=avatar_ver,json=avatarVer,proto3,oneof"`
}
type SinaUser_Weihao struct {
	Weihao string `protobuf:"bytes,416,opt,name=weihao,proto3,oneof"`
}
type SinaUser_VerifiedReason struct {
	VerifiedReason string `protobuf:"bytes,424,opt,name=verified_reason,json=verifiedReason,proto3,oneof"`
}
type SinaUser_FollowersCount struct {
	FollowersCount uint32 `protobuf:"varint,441,opt,name=followers_count,json=followersCount,proto3,oneof"`
}
type SinaUser_FriendsCount struct {
	FriendsCount uint32 `protobuf:"varint,442,opt,name=friends_count,json=friendsCount,proto3,oneof"`
}
type SinaUser_StatusesCount struct {
	StatusesCount uint32 `protobuf:"varint,443,opt,name=statuses_count,json=statusesCount,proto3,oneof"`
}
type SinaUser_FavouritesCount struct {
	FavouritesCount uint32 `protobuf:"varint,444,opt,name=favourites_count,json=favouritesCount,proto3,oneof"`
}
type SinaUser_BiFollowersCount struct {
	BiFollowersCount uint32 `protobuf:"varint,445,opt,name=bi_followers_count,json=biFollowersCount,proto3,oneof"`
}
type SinaUser_Email struct {
	Email string `protobuf:"bytes,450,opt,name=email,proto3,oneof"`
}
type SinaUser_Qq struct {
	Qq string `protobuf:"bytes,451,opt,name=qq,proto3,oneof"`
}
type SinaUser_ClearGeoTime struct {
	ClearGeoTime uint64 `protobuf:"varint,457,opt,name=clear_geo_time,json=clearGeoTime,proto3,oneof"`
}
type SinaUser_Level struct {
	Level uint32 `protobuf:"varint,458,opt,name=level,proto3,oneof"`
}
type SinaUser_UserType struct {
	UserType uint32 `protobuf:"varint,459,opt,name=user_type,json=userType,proto3,oneof"`
}
type SinaUser_Privacy struct {
	Privacy uint64 `protobuf:"varint,460,opt,name=privacy,proto3,oneof"`
}
type SinaUser_Lang struct {
	Lang uint32 `protobuf:"varint,461,opt,name=lang,proto3,oneof"`
}
type SinaUser_CoverImgPid struct {
	CoverImgPid string `protobuf:"bytes,462,opt,name=coverImg_pid,json=coverImgPid,proto3,oneof"`
}
type SinaUser_CoverImgCoordinates struct {
	CoverImgCoordinates string `protobuf:"bytes,463,opt,name=coverImg_coordinates,json=coverImgCoordinates,proto3,oneof"`
}
type SinaUser_Ulevel struct {
	Ulevel uint64 `protobuf:"varint,465,opt,name=ulevel,proto3,oneof"`
}
type SinaUser_Regip struct {
	Regip uint64 `protobuf:"varint,466,opt,name=regip,proto3,oneof"`
}
type SinaUser_Regsource struct {
	Regsource uint64 `protobuf:"varint,467,opt,name=regsource,proto3,oneof"`
}
type SinaUser_UpdateTime struct {
	UpdateTime uint64 `protobuf:"varint,468,opt,name=update_time,json=updateTime,proto3,oneof"`
}
type SinaUser_Star struct {
	Star uint64 `protobuf:"varint,469,opt,name=star,proto3,oneof"`
}
type SinaUser_Sign struct {
	Sign uint64 `protobuf:"varint,470,opt,name=sign,proto3,oneof"`
}
type SinaUser_Region struct {
	Region uint64 `protobuf:"varint,471,opt,name=region,proto3,oneof"`
}
type SinaUser_Mbtype struct {
	Mbtype uint32 `protobuf:"varint,480,opt,name=mbtype,proto3,oneof"`
}
type SinaUser_Mbrank struct {
	Mbrank uint32 `protobuf:"varint,481,opt,name=mbrank,proto3,oneof"`
}
type SinaUser_HasMblockWord struct {
	HasMblockWord uint32 `protobuf:"varint,482,opt,name=has_mblock_word,json=hasMblockWord,proto3,oneof"`
}
type SinaUser_AvatarHdPid struct {
	AvatarHdPid string `protobuf:"bytes,484,opt,name=avatar_hd_pid,json=avatarHdPid,proto3,oneof"`
}
type SinaUser_AvatarHdCoordinates struct {
	AvatarHdCoordinates string `protobuf:"bytes,485,opt,name=avatar_hd_coordinates,json=avatarHdCoordinates,proto3,oneof"`
}
type SinaUser_CoverImgPidMobile struct {
	CoverImgPidMobile string `protobuf:"bytes,486,opt,name=coverImg_pid_mobile,json=coverImgPidMobile,proto3,oneof"`
}
type SinaUser_CoverImgCoordinatesIphone struct {
	CoverImgCoordinatesIphone string `protobuf:"bytes,487,opt,name=coverImg_coordinates_iphone,json=coverImgCoordinatesIphone,proto3,oneof"`
}
type SinaUser_Ptype struct {
	Ptype uint32 `protobuf:"varint,488,opt,name=ptype,proto3,oneof"`
}
type SinaUser_Mobile struct {
	Mobile string `protobuf:"bytes,489,opt,name=mobile,proto3,oneof"`
}
type SinaUser_AbilityTags struct {
	AbilityTags string `protobuf:"bytes,490,opt,name=ability_tags,json=abilityTags,proto3,oneof"`
}
type SinaUser_BlockWordExpire struct {
	BlockWordExpire uint64 `protobuf:"varint,491,opt,name=block_word_expire,json=blockWordExpire,proto3,oneof"`
}
type SinaUser_BlockAppExpire struct {
	BlockAppExpire uint64 `protobuf:"varint,492,opt,name=block_app_expire,json=blockAppExpire,proto3,oneof"`
}
type SinaUser_VerifiedTrade struct {
	VerifiedTrade string `protobuf:"bytes,493,opt,name=verified_trade,json=verifiedTrade,proto3,oneof"`
}
type SinaUser_VerifiedReasonUrl struct {
	VerifiedReasonUrl string `protobuf:"bytes,494,opt,name=verified_reason_url,json=verifiedReasonUrl,proto3,oneof"`
}
type SinaUser_VerifiedSource struct {
	VerifiedSource string `protobuf:"bytes,495,opt,name=verified_source,json=verifiedSource,proto3,oneof"`
}
type SinaUser_VerifiedSourceUrl struct {
	VerifiedSourceUrl string `protobuf:"bytes,496,opt,name=verified_source_url,json=verifiedSourceUrl,proto3,oneof"`
}
type SinaUser_UnicomFreePc struct {
	UnicomFreePc string `protobuf:"bytes,497,opt,name=unicom_free_pc,json=unicomFreePc,proto3,oneof"`
}
type SinaUser_LocationRights struct {
	LocationRights uint32 `protobuf:"varint,498,opt,name=location_rights,json=locationRights,proto3,oneof"`
}
type SinaUser_Menu struct {
	Menu string `protobuf:"bytes,499,opt,name=menu,proto3,oneof"`
}
type SinaUser_WorldcupGuess struct {
	WorldcupGuess uint32 `protobuf:"varint,500,opt,name=worldcup_guess,json=worldcupGuess,proto3,oneof"`
}
type SinaUser_Dianpings struct {
	Dianpings string `protobuf:"bytes,501,opt,name=dianpings,proto3,oneof"`
}
type SinaUser_SignExt struct {
	SignExt string `protobuf:"bytes,502,opt,name=sign_ext,json=signExt,proto3,oneof"`
}
type SinaUser_BadgeTop struct {
	BadgeTop string `protobuf:"bytes,503,opt,name=badge_top,json=badgeTop,proto3,oneof"`
}
type SinaUser_VerifiedState struct {
	VerifiedState uint32 `protobuf:"varint,504,opt,name=verified_state,json=verifiedState,proto3,oneof"`
}
type SinaUser_CreditScore struct {
	CreditScore uint32 `protobuf:"varint,505,opt,name=credit_score,json=creditScore,proto3,oneof"`
}
type SinaUser_PagefriendsCount struct {
	PagefriendsCount uint32 `protobuf:"varint,446,opt,name=pagefriends_count,json=pagefriendsCount,proto3,oneof"`
}
type SinaUser_VerifiedLevel struct {
	VerifiedLevel uint32 `protobuf:"varint,506,opt,name=verified_level,json=verifiedLevel,proto3,oneof"`
}
type SinaUser_AudioDetailPage struct {
	AudioDetailPage string `protobuf:"bytes,507,opt,name=audio_detail_page,json=audioDetailPage,proto3,oneof"`
}
type SinaUser_AudioPlayAddr struct {
	AudioPlayAddr string `protobuf:"bytes,508,opt,name=audio_play_addr,json=audioPlayAddr,proto3,oneof"`
}
type SinaUser_VerifiedReasonModified struct {
	VerifiedReasonModified string `protobuf:"bytes,509,opt,name=verified_reason_modified,json=verifiedReasonModified,proto3,oneof"`
}
type SinaUser_VerifiedContactName struct {
	VerifiedContactName string `protobuf:"bytes,510,opt,name=verified_contact_name,json=verifiedContactName,proto3,oneof"`
}
type SinaUser_VerifiedContactEmail struct {
	VerifiedContactEmail string `protobuf:"bytes,511,opt,name=verified_contact_email,json=verifiedContactEmail,proto3,oneof"`
}
type SinaUser_VerifiedContactMobile struct {
	VerifiedContactMobile string `protobuf:"bytes,512,opt,name=verified_contact_mobile,json=verifiedContactMobile,proto3,oneof"`
}
type SinaUser_Urank struct {
	Urank uint32 `protobuf:"varint,513,opt,name=urank,proto3,oneof"`
}
type SinaUser_HasFrozenCount struct {
	HasFrozenCount uint32 `protobuf:"varint,514,opt,name=has_frozen_count,json=hasFrozenCount,proto3,oneof"`
}
type SinaUser_ControllerSetting struct {
	ControllerSetting uint64 `protobuf:"varint,515,opt,name=controller_setting,json=controllerSetting,proto3,oneof"`
}
type SinaUser_UserAbility struct {
	UserAbility uint32 `protobuf:"varint,516,opt,name=user_ability,json=userAbility,proto3,oneof"`
}
type SinaUser_Cardid struct {
	Cardid string `protobuf:"bytes,517,opt,name=cardid,proto3,oneof"`
}
type SinaUser_AvatargjId struct {
	AvatargjId string `protobuf:"bytes,518,opt,name=avatargj_id,json=avatargjId,proto3,oneof"`
}
type SinaUser_VerifiedTypeExt struct {
	VerifiedTypeExt int32 `protobuf:"zigzag32,519,opt,name=verified_type_ext,json=verifiedTypeExt,proto3,oneof"`
}
type SinaUser_Insecurity struct {
	Insecurity uint32 `protobuf:"varint,520,opt,name=insecurity,proto3,oneof"`
}
type SinaUser_StorySegmentid struct {
	StorySegmentid uint64 `protobuf:"varint,521,opt,name=story_segmentid,json=storySegmentid,proto3,oneof"`
}
type SinaUser_AttitudeStyle struct {
	AttitudeStyle string `protobuf:"bytes,522,opt,name=attitude_style,json=attitudeStyle,proto3,oneof"`
}
type SinaUser_VclubMember struct {
	VclubMember uint32 `protobuf:"varint,523,opt,name=vclub_member,json=vclubMember,proto3,oneof"`
}
type SinaUser_GenderState struct {
	GenderState uint32 `protobuf:"varint,524,opt,name=gender_state,json=genderState,proto3,oneof"`
}

func (*SinaUser_Id) isSinaUser_IdPresent()                                               {}
func (*SinaUser_ScreenName) isSinaUser_ScreenNamePresent()                               {}
func (*SinaUser_Domain) isSinaUser_DomainPresent()                                       {}
func (*SinaUser_CreatedAt) isSinaUser_CreatedAtPresent()                                 {}
func (*SinaUser_Gender_) isSinaUser_GenderPresent()                                      {}
func (*SinaUser_Province) isSinaUser_ProvincePresent()                                   {}
func (*SinaUser_City) isSinaUser_CityPresent()                                           {}
func (*SinaUser_Description) isSinaUser_DescriptionPresent()                             {}
func (*SinaUser_Url) isSinaUser_UrlPresent()                                             {}
func (*SinaUser_AvatarVer) isSinaUser_AvatarVerPresent()                                 {}
func (*SinaUser_Weihao) isSinaUser_WeihaoPresent()                                       {}
func (*SinaUser_VerifiedReason) isSinaUser_VerifiedReasonPresent()                       {}
func (*SinaUser_FollowersCount) isSinaUser_FollowersCountPresent()                       {}
func (*SinaUser_FriendsCount) isSinaUser_FriendsCountPresent()                           {}
func (*SinaUser_StatusesCount) isSinaUser_StatusesCountPresent()                         {}
func (*SinaUser_FavouritesCount) isSinaUser_FavouritesCountPresent()                     {}
func (*SinaUser_BiFollowersCount) isSinaUser_BiFollowersCountPresent()                   {}
func (*SinaUser_Email) isSinaUser_EmailPresent()                                         {}
func (*SinaUser_Qq) isSinaUser_QqPresent()                                               {}
func (*SinaUser_ClearGeoTime) isSinaUser_ClearGeoTimePresent()                           {}
func (*SinaUser_Level) isSinaUser_LevelPresent()                                         {}
func (*SinaUser_UserType) isSinaUser_UserTypePresent()                                   {}
func (*SinaUser_Privacy) isSinaUser_PrivacyPresent()                                     {}
func (*SinaUser_Lang) isSinaUser_LangPresent()                                           {}
func (*SinaUser_CoverImgPid) isSinaUser_CoverImgPidPresent()                             {}
func (*SinaUser_CoverImgCoordinates) isSinaUser_CoverImgCoordinatesPresent()             {}
func (*SinaUser_Ulevel) isSinaUser_UlevelPresent()                                       {}
func (*SinaUser_Regip) isSinaUser_RegipPresent()                                         {}
func (*SinaUser_Regsource) isSinaUser_RegsourcePresent()                                 {}
func (*SinaUser_UpdateTime) isSinaUser_UpdateTimePresent()                               {}
func (*SinaUser_Star) isSinaUser_StarPresent()                                           {}
func (*SinaUser_Sign) isSinaUser_SignPresent()                                           {}
func (*SinaUser_Region) isSinaUser_RegionPresent()                                       {}
func (*SinaUser_Mbtype) isSinaUser_MbtypePresent()                                       {}
func (*SinaUser_Mbrank) isSinaUser_MbrankPresent()                                       {}
func (*SinaUser_HasMblockWord) isSinaUser_HasMblockWordPresent()                         {}
func (*SinaUser_AvatarHdPid) isSinaUser_AvatarHdPidPresent()                             {}
func (*SinaUser_AvatarHdCoordinates) isSinaUser_AvatarHdCoordinatesPresent()             {}
func (*SinaUser_CoverImgPidMobile) isSinaUser_CoverImgPidMobilePresent()                 {}
func (*SinaUser_CoverImgCoordinatesIphone) isSinaUser_CoverImgCoordinatesIphonePresent() {}
func (*SinaUser_Ptype) isSinaUser_PtypePresent()                                         {}
func (*SinaUser_Mobile) isSinaUser_MobilePresent()                                       {}
func (*SinaUser_AbilityTags) isSinaUser_AbilityTagsPresent()                             {}
func (*SinaUser_BlockWordExpire) isSinaUser_BlockWordExpirePresent()                     {}
func (*SinaUser_BlockAppExpire) isSinaUser_BlockAppExpirePresent()                       {}
func (*SinaUser_VerifiedTrade) isSinaUser_VerifiedTradePresent()                         {}
func (*SinaUser_VerifiedReasonUrl) isSinaUser_VerifiedReasonUrlPresent()                 {}
func (*SinaUser_VerifiedSource) isSinaUser_VerifiedSourcePresent()                       {}
func (*SinaUser_VerifiedSourceUrl) isSinaUser_VerifiedSourceUrlPresent()                 {}
func (*SinaUser_UnicomFreePc) isSinaUser_UnicomFreePcPresent()                           {}
func (*SinaUser_LocationRights) isSinaUser_LocationRightsPresent()                       {}
func (*SinaUser_Menu) isSinaUser_MenuPresent()                                           {}
func (*SinaUser_WorldcupGuess) isSinaUser_WorldcupGuessPresent()                         {}
func (*SinaUser_Dianpings) isSinaUser_DianpingsPresent()                                 {}
func (*SinaUser_SignExt) isSinaUser_SignExtPresent()                                     {}
func (*SinaUser_BadgeTop) isSinaUser_BadgeTopPresent()                                   {}
func (*SinaUser_VerifiedState) isSinaUser_VerifiedStatePresent()                         {}
func (*SinaUser_CreditScore) isSinaUser_CreditScorePresent()                             {}
func (*SinaUser_PagefriendsCount) isSinaUser_PagefriendsCountPresent()                   {}
func (*SinaUser_VerifiedLevel) isSinaUser_VerifiedLevelPresent()                         {}
func (*SinaUser_AudioDetailPage) isSinaUser_AudioDetailPagePresent()                     {}
func (*SinaUser_AudioPlayAddr) isSinaUser_AudioPlayAddrPresent()                         {}
func (*SinaUser_VerifiedReasonModified) isSinaUser_VerifiedReasonModifiedPresent()       {}
func (*SinaUser_VerifiedContactName) isSinaUser_VerifiedContactNamePresent()             {}
func (*SinaUser_VerifiedContactEmail) isSinaUser_VerifiedContactEmailPresent()           {}
func (*SinaUser_VerifiedContactMobile) isSinaUser_VerifiedContactMobilePresent()         {}
func (*SinaUser_Urank) isSinaUser_UrankPresent()                                         {}
func (*SinaUser_HasFrozenCount) isSinaUser_HasFrozenCountPresent()                       {}
func (*SinaUser_ControllerSetting) isSinaUser_ControllerSettingPresent()                 {}
func (*SinaUser_UserAbility) isSinaUser_UserAbilityPresent()                             {}
func (*SinaUser_Cardid) isSinaUser_CardidPresent()                                       {}
func (*SinaUser_AvatargjId) isSinaUser_AvatargjIdPresent()                               {}
func (*SinaUser_VerifiedTypeExt) isSinaUser_VerifiedTypeExtPresent()                     {}
func (*SinaUser_Insecurity) isSinaUser_InsecurityPresent()                               {}
func (*SinaUser_StorySegmentid) isSinaUser_StorySegmentidPresent()                       {}
func (*SinaUser_AttitudeStyle) isSinaUser_AttitudeStylePresent()                         {}
func (*SinaUser_VclubMember) isSinaUser_VclubMemberPresent()                             {}
func (*SinaUser_GenderState) isSinaUser_GenderStatePresent()                             {}

func (m *SinaUser) GetIdPresent() isSinaUser_IdPresent {
	if m != nil {
		return m.IdPresent
	}
	return nil
}
func (m *SinaUser) GetScreenNamePresent() isSinaUser_ScreenNamePresent {
	if m != nil {
		return m.ScreenNamePresent
	}
	return nil
}
func (m *SinaUser) GetDomainPresent() isSinaUser_DomainPresent {
	if m != nil {
		return m.DomainPresent
	}
	return nil
}
func (m *SinaUser) GetCreatedAtPresent() isSinaUser_CreatedAtPresent {
	if m != nil {
		return m.CreatedAtPresent
	}
	return nil
}
func (m *SinaUser) GetGenderPresent() isSinaUser_GenderPresent {
	if m != nil {
		return m.GenderPresent
	}
	return nil
}
func (m *SinaUser) GetProvincePresent() isSinaUser_ProvincePresent {
	if m != nil {
		return m.ProvincePresent
	}
	return nil
}
func (m *SinaUser) GetCityPresent() isSinaUser_CityPresent {
	if m != nil {
		return m.CityPresent
	}
	return nil
}
func (m *SinaUser) GetDescriptionPresent() isSinaUser_DescriptionPresent {
	if m != nil {
		return m.DescriptionPresent
	}
	return nil
}
func (m *SinaUser) GetUrlPresent() isSinaUser_UrlPresent {
	if m != nil {
		return m.UrlPresent
	}
	return nil
}
func (m *SinaUser) GetAvatarVerPresent() isSinaUser_AvatarVerPresent {
	if m != nil {
		return m.AvatarVerPresent
	}
	return nil
}
func (m *SinaUser) GetWeihaoPresent() isSinaUser_WeihaoPresent {
	if m != nil {
		return m.WeihaoPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedReasonPresent() isSinaUser_VerifiedReasonPresent {
	if m != nil {
		return m.VerifiedReasonPresent
	}
	return nil
}
func (m *SinaUser) GetFollowersCountPresent() isSinaUser_FollowersCountPresent {
	if m != nil {
		return m.FollowersCountPresent
	}
	return nil
}
func (m *SinaUser) GetFriendsCountPresent() isSinaUser_FriendsCountPresent {
	if m != nil {
		return m.FriendsCountPresent
	}
	return nil
}
func (m *SinaUser) GetStatusesCountPresent() isSinaUser_StatusesCountPresent {
	if m != nil {
		return m.StatusesCountPresent
	}
	return nil
}
func (m *SinaUser) GetFavouritesCountPresent() isSinaUser_FavouritesCountPresent {
	if m != nil {
		return m.FavouritesCountPresent
	}
	return nil
}
func (m *SinaUser) GetBiFollowersCountPresent() isSinaUser_BiFollowersCountPresent {
	if m != nil {
		return m.BiFollowersCountPresent
	}
	return nil
}
func (m *SinaUser) GetEmailPresent() isSinaUser_EmailPresent {
	if m != nil {
		return m.EmailPresent
	}
	return nil
}
func (m *SinaUser) GetQqPresent() isSinaUser_QqPresent {
	if m != nil {
		return m.QqPresent
	}
	return nil
}
func (m *SinaUser) GetClearGeoTimePresent() isSinaUser_ClearGeoTimePresent {
	if m != nil {
		return m.ClearGeoTimePresent
	}
	return nil
}
func (m *SinaUser) GetLevelPresent() isSinaUser_LevelPresent {
	if m != nil {
		return m.LevelPresent
	}
	return nil
}
func (m *SinaUser) GetUserTypePresent() isSinaUser_UserTypePresent {
	if m != nil {
		return m.UserTypePresent
	}
	return nil
}
func (m *SinaUser) GetPrivacyPresent() isSinaUser_PrivacyPresent {
	if m != nil {
		return m.PrivacyPresent
	}
	return nil
}
func (m *SinaUser) GetLangPresent() isSinaUser_LangPresent {
	if m != nil {
		return m.LangPresent
	}
	return nil
}
func (m *SinaUser) GetCoverImgPidPresent() isSinaUser_CoverImgPidPresent {
	if m != nil {
		return m.CoverImgPidPresent
	}
	return nil
}
func (m *SinaUser) GetCoverImgCoordinatesPresent() isSinaUser_CoverImgCoordinatesPresent {
	if m != nil {
		return m.CoverImgCoordinatesPresent
	}
	return nil
}
func (m *SinaUser) GetUlevelPresent() isSinaUser_UlevelPresent {
	if m != nil {
		return m.UlevelPresent
	}
	return nil
}
func (m *SinaUser) GetRegipPresent() isSinaUser_RegipPresent {
	if m != nil {
		return m.RegipPresent
	}
	return nil
}
func (m *SinaUser) GetRegsourcePresent() isSinaUser_RegsourcePresent {
	if m != nil {
		return m.RegsourcePresent
	}
	return nil
}
func (m *SinaUser) GetUpdateTimePresent() isSinaUser_UpdateTimePresent {
	if m != nil {
		return m.UpdateTimePresent
	}
	return nil
}
func (m *SinaUser) GetStarPresent() isSinaUser_StarPresent {
	if m != nil {
		return m.StarPresent
	}
	return nil
}
func (m *SinaUser) GetSignPresent() isSinaUser_SignPresent {
	if m != nil {
		return m.SignPresent
	}
	return nil
}
func (m *SinaUser) GetRegionPresent() isSinaUser_RegionPresent {
	if m != nil {
		return m.RegionPresent
	}
	return nil
}
func (m *SinaUser) GetMbtypePresent() isSinaUser_MbtypePresent {
	if m != nil {
		return m.MbtypePresent
	}
	return nil
}
func (m *SinaUser) GetMbrankPresent() isSinaUser_MbrankPresent {
	if m != nil {
		return m.MbrankPresent
	}
	return nil
}
func (m *SinaUser) GetHasMblockWordPresent() isSinaUser_HasMblockWordPresent {
	if m != nil {
		return m.HasMblockWordPresent
	}
	return nil
}
func (m *SinaUser) GetAvatarHdPidPresent() isSinaUser_AvatarHdPidPresent {
	if m != nil {
		return m.AvatarHdPidPresent
	}
	return nil
}
func (m *SinaUser) GetAvatarHdCoordinatesPresent() isSinaUser_AvatarHdCoordinatesPresent {
	if m != nil {
		return m.AvatarHdCoordinatesPresent
	}
	return nil
}
func (m *SinaUser) GetCoverImgPidMobilePresent() isSinaUser_CoverImgPidMobilePresent {
	if m != nil {
		return m.CoverImgPidMobilePresent
	}
	return nil
}
func (m *SinaUser) GetCoverImgCoordinatesIphonePresent() isSinaUser_CoverImgCoordinatesIphonePresent {
	if m != nil {
		return m.CoverImgCoordinatesIphonePresent
	}
	return nil
}
func (m *SinaUser) GetPtypePresent() isSinaUser_PtypePresent {
	if m != nil {
		return m.PtypePresent
	}
	return nil
}
func (m *SinaUser) GetMobilePresent() isSinaUser_MobilePresent {
	if m != nil {
		return m.MobilePresent
	}
	return nil
}
func (m *SinaUser) GetAbilityTagsPresent() isSinaUser_AbilityTagsPresent {
	if m != nil {
		return m.AbilityTagsPresent
	}
	return nil
}
func (m *SinaUser) GetBlockWordExpirePresent() isSinaUser_BlockWordExpirePresent {
	if m != nil {
		return m.BlockWordExpirePresent
	}
	return nil
}
func (m *SinaUser) GetBlockAppExpirePresent() isSinaUser_BlockAppExpirePresent {
	if m != nil {
		return m.BlockAppExpirePresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedTradePresent() isSinaUser_VerifiedTradePresent {
	if m != nil {
		return m.VerifiedTradePresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedReasonUrlPresent() isSinaUser_VerifiedReasonUrlPresent {
	if m != nil {
		return m.VerifiedReasonUrlPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedSourcePresent() isSinaUser_VerifiedSourcePresent {
	if m != nil {
		return m.VerifiedSourcePresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedSourceUrlPresent() isSinaUser_VerifiedSourceUrlPresent {
	if m != nil {
		return m.VerifiedSourceUrlPresent
	}
	return nil
}
func (m *SinaUser) GetUnicomFreePcPresent() isSinaUser_UnicomFreePcPresent {
	if m != nil {
		return m.UnicomFreePcPresent
	}
	return nil
}
func (m *SinaUser) GetLocationRightsPresent() isSinaUser_LocationRightsPresent {
	if m != nil {
		return m.LocationRightsPresent
	}
	return nil
}
func (m *SinaUser) GetMenuPresent() isSinaUser_MenuPresent {
	if m != nil {
		return m.MenuPresent
	}
	return nil
}
func (m *SinaUser) GetWorldcupGuessPresent() isSinaUser_WorldcupGuessPresent {
	if m != nil {
		return m.WorldcupGuessPresent
	}
	return nil
}
func (m *SinaUser) GetDianpingsPresent() isSinaUser_DianpingsPresent {
	if m != nil {
		return m.DianpingsPresent
	}
	return nil
}
func (m *SinaUser) GetSignExtPresent() isSinaUser_SignExtPresent {
	if m != nil {
		return m.SignExtPresent
	}
	return nil
}
func (m *SinaUser) GetBadgeTopPresent() isSinaUser_BadgeTopPresent {
	if m != nil {
		return m.BadgeTopPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedStatePresent() isSinaUser_VerifiedStatePresent {
	if m != nil {
		return m.VerifiedStatePresent
	}
	return nil
}
func (m *SinaUser) GetCreditScorePresent() isSinaUser_CreditScorePresent {
	if m != nil {
		return m.CreditScorePresent
	}
	return nil
}
func (m *SinaUser) GetPagefriendsCountPresent() isSinaUser_PagefriendsCountPresent {
	if m != nil {
		return m.PagefriendsCountPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedLevelPresent() isSinaUser_VerifiedLevelPresent {
	if m != nil {
		return m.VerifiedLevelPresent
	}
	return nil
}
func (m *SinaUser) GetAudioDetailPagePresent() isSinaUser_AudioDetailPagePresent {
	if m != nil {
		return m.AudioDetailPagePresent
	}
	return nil
}
func (m *SinaUser) GetAudioPlayAddrPresent() isSinaUser_AudioPlayAddrPresent {
	if m != nil {
		return m.AudioPlayAddrPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedReasonModifiedPresent() isSinaUser_VerifiedReasonModifiedPresent {
	if m != nil {
		return m.VerifiedReasonModifiedPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedContactNamePresent() isSinaUser_VerifiedContactNamePresent {
	if m != nil {
		return m.VerifiedContactNamePresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedContactEmailPresent() isSinaUser_VerifiedContactEmailPresent {
	if m != nil {
		return m.VerifiedContactEmailPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedContactMobilePresent() isSinaUser_VerifiedContactMobilePresent {
	if m != nil {
		return m.VerifiedContactMobilePresent
	}
	return nil
}
func (m *SinaUser) GetUrankPresent() isSinaUser_UrankPresent {
	if m != nil {
		return m.UrankPresent
	}
	return nil
}
func (m *SinaUser) GetHasFrozenCountPresent() isSinaUser_HasFrozenCountPresent {
	if m != nil {
		return m.HasFrozenCountPresent
	}
	return nil
}
func (m *SinaUser) GetControllerSettingPresent() isSinaUser_ControllerSettingPresent {
	if m != nil {
		return m.ControllerSettingPresent
	}
	return nil
}
func (m *SinaUser) GetUserAbilityPresent() isSinaUser_UserAbilityPresent {
	if m != nil {
		return m.UserAbilityPresent
	}
	return nil
}
func (m *SinaUser) GetCardidPresent() isSinaUser_CardidPresent {
	if m != nil {
		return m.CardidPresent
	}
	return nil
}
func (m *SinaUser) GetAvatargjIdPresent() isSinaUser_AvatargjIdPresent {
	if m != nil {
		return m.AvatargjIdPresent
	}
	return nil
}
func (m *SinaUser) GetVerifiedTypeExtPresent() isSinaUser_VerifiedTypeExtPresent {
	if m != nil {
		return m.VerifiedTypeExtPresent
	}
	return nil
}
func (m *SinaUser) GetInsecurityPresent() isSinaUser_InsecurityPresent {
	if m != nil {
		return m.InsecurityPresent
	}
	return nil
}
func (m *SinaUser) GetStorySegmentidPresent() isSinaUser_StorySegmentidPresent {
	if m != nil {
		return m.StorySegmentidPresent
	}
	return nil
}
func (m *SinaUser) GetAttitudeStylePresent() isSinaUser_AttitudeStylePresent {
	if m != nil {
		return m.AttitudeStylePresent
	}
	return nil
}
func (m *SinaUser) GetVclubMemberPresent() isSinaUser_VclubMemberPresent {
	if m != nil {
		return m.VclubMemberPresent
	}
	return nil
}
func (m *SinaUser) GetGenderStatePresent() isSinaUser_GenderStatePresent {
	if m != nil {
		return m.GenderStatePresent
	}
	return nil
}

func (m *SinaUser) GetId() uint64 {
	if x, ok := m.GetIdPresent().(*SinaUser_Id); ok {
		return x.Id
	}
	return 0
}

func (m *SinaUser) GetScreenName() string {
	if x, ok := m.GetScreenNamePresent().(*SinaUser_ScreenName); ok {
		return x.ScreenName
	}
	return ""
}

func (m *SinaUser) GetDomain() string {
	if x, ok := m.GetDomainPresent().(*SinaUser_Domain); ok {
		return x.Domain
	}
	return ""
}

func (m *SinaUser) GetCreatedAt() uint64 {
	if x, ok := m.GetCreatedAtPresent().(*SinaUser_CreatedAt); ok {
		return x.CreatedAt
	}
	return 0
}

func (m *SinaUser) GetGender() SinaUser_Gender {
	if x, ok := m.GetGenderPresent().(*SinaUser_Gender_); ok {
		return x.Gender
	}
	return SinaUser_FEMALE
}

func (m *SinaUser) GetProvince() string {
	if x, ok := m.GetProvincePresent().(*SinaUser_Province); ok {
		return x.Province
	}
	return ""
}

func (m *SinaUser) GetCity() string {
	if x, ok := m.GetCityPresent().(*SinaUser_City); ok {
		return x.City
	}
	return ""
}

func (m *SinaUser) GetDescription() string {
	if x, ok := m.GetDescriptionPresent().(*SinaUser_Description); ok {
		return x.Description
	}
	return ""
}

func (m *SinaUser) GetUrl() string {
	if x, ok := m.GetUrlPresent().(*SinaUser_Url); ok {
		return x.Url
	}
	return ""
}

func (m *SinaUser) GetAvatarVer() uint64 {
	if x, ok := m.GetAvatarVerPresent().(*SinaUser_AvatarVer); ok {
		return x.AvatarVer
	}
	return 0
}

func (m *SinaUser) GetWeihao() string {
	if x, ok := m.GetWeihaoPresent().(*SinaUser_Weihao); ok {
		return x.Weihao
	}
	return ""
}

func (m *SinaUser) GetVerifiedReason() string {
	if x, ok := m.GetVerifiedReasonPresent().(*SinaUser_VerifiedReason); ok {
		return x.VerifiedReason
	}
	return ""
}

func (m *SinaUser) GetFollowersCount() uint32 {
	if x, ok := m.GetFollowersCountPresent().(*SinaUser_FollowersCount); ok {
		return x.FollowersCount
	}
	return 0
}

func (m *SinaUser) GetFriendsCount() uint32 {
	if x, ok := m.GetFriendsCountPresent().(*SinaUser_FriendsCount); ok {
		return x.FriendsCount
	}
	return 0
}

func (m *SinaUser) GetStatusesCount() uint32 {
	if x, ok := m.GetStatusesCountPresent().(*SinaUser_StatusesCount); ok {
		return x.StatusesCount
	}
	return 0
}

func (m *SinaUser) GetFavouritesCount() uint32 {
	if x, ok := m.GetFavouritesCountPresent().(*SinaUser_FavouritesCount); ok {
		return x.FavouritesCount
	}
	return 0
}

func (m *SinaUser) GetBiFollowersCount() uint32 {
	if x, ok := m.GetBiFollowersCountPresent().(*SinaUser_BiFollowersCount); ok {
		return x.BiFollowersCount
	}
	return 0
}

func (m *SinaUser) GetEmail() string {
	if x, ok := m.GetEmailPresent().(*SinaUser_Email); ok {
		return x.Email
	}
	return ""
}

func (m *SinaUser) GetQq() string {
	if x, ok := m.GetQqPresent().(*SinaUser_Qq); ok {
		return x.Qq
	}
	return ""
}

func (m *SinaUser) GetClearGeoTime() uint64 {
	if x, ok := m.GetClearGeoTimePresent().(*SinaUser_ClearGeoTime); ok {
		return x.ClearGeoTime
	}
	return 0
}

func (m *SinaUser) GetLevel() uint32 {
	if x, ok := m.GetLevelPresent().(*SinaUser_Level); ok {
		return x.Level
	}
	return 0
}

func (m *SinaUser) GetUserType() uint32 {
	if x, ok := m.GetUserTypePresent().(*SinaUser_UserType); ok {
		return x.UserType
	}
	return 0
}

func (m *SinaUser) GetPrivacy() uint64 {
	if x, ok := m.GetPrivacyPresent().(*SinaUser_Privacy); ok {
		return x.Privacy
	}
	return 0
}

func (m *SinaUser) GetLang() uint32 {
	if x, ok := m.GetLangPresent().(*SinaUser_Lang); ok {
		return x.Lang
	}
	return 0
}

func (m *SinaUser) GetCoverImgPid() string {
	if x, ok := m.GetCoverImgPidPresent().(*SinaUser_CoverImgPid); ok {
		return x.CoverImgPid
	}
	return ""
}

func (m *SinaUser) GetCoverImgCoordinates() string {
	if x, ok := m.GetCoverImgCoordinatesPresent().(*SinaUser_CoverImgCoordinates); ok {
		return x.CoverImgCoordinates
	}
	return ""
}

func (m *SinaUser) GetUlevel() uint64 {
	if x, ok := m.GetUlevelPresent().(*SinaUser_Ulevel); ok {
		return x.Ulevel
	}
	return 0
}

func (m *SinaUser) GetRegip() uint64 {
	if x, ok := m.GetRegipPresent().(*SinaUser_Regip); ok {
		return x.Regip
	}
	return 0
}

func (m *SinaUser) GetRegsource() uint64 {
	if x, ok := m.GetRegsourcePresent().(*SinaUser_Regsource); ok {
		return x.Regsource
	}
	return 0
}

func (m *SinaUser) GetUpdateTime() uint64 {
	if x, ok := m.GetUpdateTimePresent().(*SinaUser_UpdateTime); ok {
		return x.UpdateTime
	}
	return 0
}

func (m *SinaUser) GetStar() uint64 {
	if x, ok := m.GetStarPresent().(*SinaUser_Star); ok {
		return x.Star
	}
	return 0
}

func (m *SinaUser) GetSign() uint64 {
	if x, ok := m.GetSignPresent().(*SinaUser_Sign); ok {
		return x.Sign
	}
	return 0
}

func (m *SinaUser) GetRegion() uint64 {
	if x, ok := m.GetRegionPresent().(*SinaUser_Region); ok {
		return x.Region
	}
	return 0
}

func (m *SinaUser) GetMbtype() uint32 {
	if x, ok := m.GetMbtypePresent().(*SinaUser_Mbtype); ok {
		return x.Mbtype
	}
	return 0
}

func (m *SinaUser) GetMbrank() uint32 {
	if x, ok := m.GetMbrankPresent().(*SinaUser_Mbrank); ok {
		return x.Mbrank
	}
	return 0
}

func (m *SinaUser) GetHasMblockWord() uint32 {
	if x, ok := m.GetHasMblockWordPresent().(*SinaUser_HasMblockWord); ok {
		return x.HasMblockWord
	}
	return 0
}

func (m *SinaUser) GetAvatarHdPid() string {
	if x, ok := m.GetAvatarHdPidPresent().(*SinaUser_AvatarHdPid); ok {
		return x.AvatarHdPid
	}
	return ""
}

func (m *SinaUser) GetAvatarHdCoordinates() string {
	if x, ok := m.GetAvatarHdCoordinatesPresent().(*SinaUser_AvatarHdCoordinates); ok {
		return x.AvatarHdCoordinates
	}
	return ""
}

func (m *SinaUser) GetCoverImgPidMobile() string {
	if x, ok := m.GetCoverImgPidMobilePresent().(*SinaUser_CoverImgPidMobile); ok {
		return x.CoverImgPidMobile
	}
	return ""
}

func (m *SinaUser) GetCoverImgCoordinatesIphone() string {
	if x, ok := m.GetCoverImgCoordinatesIphonePresent().(*SinaUser_CoverImgCoordinatesIphone); ok {
		return x.CoverImgCoordinatesIphone
	}
	return ""
}

func (m *SinaUser) GetPtype() uint32 {
	if x, ok := m.GetPtypePresent().(*SinaUser_Ptype); ok {
		return x.Ptype
	}
	return 0
}

func (m *SinaUser) GetMobile() string {
	if x, ok := m.GetMobilePresent().(*SinaUser_Mobile); ok {
		return x.Mobile
	}
	return ""
}

func (m *SinaUser) GetAbilityTags() string {
	if x, ok := m.GetAbilityTagsPresent().(*SinaUser_AbilityTags); ok {
		return x.AbilityTags
	}
	return ""
}

func (m *SinaUser) GetBlockWordExpire() uint64 {
	if x, ok := m.GetBlockWordExpirePresent().(*SinaUser_BlockWordExpire); ok {
		return x.BlockWordExpire
	}
	return 0
}

func (m *SinaUser) GetBlockAppExpire() uint64 {
	if x, ok := m.GetBlockAppExpirePresent().(*SinaUser_BlockAppExpire); ok {
		return x.BlockAppExpire
	}
	return 0
}

func (m *SinaUser) GetVerifiedTrade() string {
	if x, ok := m.GetVerifiedTradePresent().(*SinaUser_VerifiedTrade); ok {
		return x.VerifiedTrade
	}
	return ""
}

func (m *SinaUser) GetVerifiedReasonUrl() string {
	if x, ok := m.GetVerifiedReasonUrlPresent().(*SinaUser_VerifiedReasonUrl); ok {
		return x.VerifiedReasonUrl
	}
	return ""
}

func (m *SinaUser) GetVerifiedSource() string {
	if x, ok := m.GetVerifiedSourcePresent().(*SinaUser_VerifiedSource); ok {
		return x.VerifiedSource
	}
	return ""
}

func (m *SinaUser) GetVerifiedSourceUrl() string {
	if x, ok := m.GetVerifiedSourceUrlPresent().(*SinaUser_VerifiedSourceUrl); ok {
		return x.VerifiedSourceUrl
	}
	return ""
}

func (m *SinaUser) GetUnicomFreePc() string {
	if x, ok := m.GetUnicomFreePcPresent().(*SinaUser_UnicomFreePc); ok {
		return x.UnicomFreePc
	}
	return ""
}

func (m *SinaUser) GetLocationRights() uint32 {
	if x, ok := m.GetLocationRightsPresent().(*SinaUser_LocationRights); ok {
		return x.LocationRights
	}
	return 0
}

func (m *SinaUser) GetMenu() string {
	if x, ok := m.GetMenuPresent().(*SinaUser_Menu); ok {
		return x.Menu
	}
	return ""
}

func (m *SinaUser) GetWorldcupGuess() uint32 {
	if x, ok := m.GetWorldcupGuessPresent().(*SinaUser_WorldcupGuess); ok {
		return x.WorldcupGuess
	}
	return 0
}

func (m *SinaUser) GetDianpings() string {
	if x, ok := m.GetDianpingsPresent().(*SinaUser_Dianpings); ok {
		return x.Dianpings
	}
	return ""
}

func (m *SinaUser) GetSignExt() string {
	if x, ok := m.GetSignExtPresent().(*SinaUser_SignExt); ok {
		return x.SignExt
	}
	return ""
}

func (m *SinaUser) GetBadgeTop() string {
	if x, ok := m.GetBadgeTopPresent().(*SinaUser_BadgeTop); ok {
		return x.BadgeTop
	}
	return ""
}

func (m *SinaUser) GetVerifiedState() uint32 {
	if x, ok := m.GetVerifiedStatePresent().(*SinaUser_VerifiedState); ok {
		return x.VerifiedState
	}
	return 0
}

func (m *SinaUser) GetCreditScore() uint32 {
	if x, ok := m.GetCreditScorePresent().(*SinaUser_CreditScore); ok {
		return x.CreditScore
	}
	return 0
}

func (m *SinaUser) GetPagefriendsCount() uint32 {
	if x, ok := m.GetPagefriendsCountPresent().(*SinaUser_PagefriendsCount); ok {
		return x.PagefriendsCount
	}
	return 0
}

func (m *SinaUser) GetVerifiedLevel() uint32 {
	if x, ok := m.GetVerifiedLevelPresent().(*SinaUser_VerifiedLevel); ok {
		return x.VerifiedLevel
	}
	return 0
}

func (m *SinaUser) GetAudioDetailPage() string {
	if x, ok := m.GetAudioDetailPagePresent().(*SinaUser_AudioDetailPage); ok {
		return x.AudioDetailPage
	}
	return ""
}

func (m *SinaUser) GetAudioPlayAddr() string {
	if x, ok := m.GetAudioPlayAddrPresent().(*SinaUser_AudioPlayAddr); ok {
		return x.AudioPlayAddr
	}
	return ""
}

func (m *SinaUser) GetVerifiedReasonModified() string {
	if x, ok := m.GetVerifiedReasonModifiedPresent().(*SinaUser_VerifiedReasonModified); ok {
		return x.VerifiedReasonModified
	}
	return ""
}

func (m *SinaUser) GetVerifiedContactName() string {
	if x, ok := m.GetVerifiedContactNamePresent().(*SinaUser_VerifiedContactName); ok {
		return x.VerifiedContactName
	}
	return ""
}

func (m *SinaUser) GetVerifiedContactEmail() string {
	if x, ok := m.GetVerifiedContactEmailPresent().(*SinaUser_VerifiedContactEmail); ok {
		return x.VerifiedContactEmail
	}
	return ""
}

func (m *SinaUser) GetVerifiedContactMobile() string {
	if x, ok := m.GetVerifiedContactMobilePresent().(*SinaUser_VerifiedContactMobile); ok {
		return x.VerifiedContactMobile
	}
	return ""
}

func (m *SinaUser) GetUrank() uint32 {
	if x, ok := m.GetUrankPresent().(*SinaUser_Urank); ok {
		return x.Urank
	}
	return 0
}

func (m *SinaUser) GetHasFrozenCount() uint32 {
	if x, ok := m.GetHasFrozenCountPresent().(*SinaUser_HasFrozenCount); ok {
		return x.HasFrozenCount
	}
	return 0
}

func (m *SinaUser) GetControllerSetting() uint64 {
	if x, ok := m.GetControllerSettingPresent().(*SinaUser_ControllerSetting); ok {
		return x.ControllerSetting
	}
	return 0
}

func (m *SinaUser) GetUserAbility() uint32 {
	if x, ok := m.GetUserAbilityPresent().(*SinaUser_UserAbility); ok {
		return x.UserAbility
	}
	return 0
}

func (m *SinaUser) GetCardid() string {
	if x, ok := m.GetCardidPresent().(*SinaUser_Cardid); ok {
		return x.Cardid
	}
	return ""
}

func (m *SinaUser) GetAvatargjId() string {
	if x, ok := m.GetAvatargjIdPresent().(*SinaUser_AvatargjId); ok {
		return x.AvatargjId
	}
	return ""
}

func (m *SinaUser) GetVerifiedTypeExt() int32 {
	if x, ok := m.GetVerifiedTypeExtPresent().(*SinaUser_VerifiedTypeExt); ok {
		return x.VerifiedTypeExt
	}
	return 0
}

func (m *SinaUser) GetInsecurity() uint32 {
	if x, ok := m.GetInsecurityPresent().(*SinaUser_Insecurity); ok {
		return x.Insecurity
	}
	return 0
}

func (m *SinaUser) GetStorySegmentid() uint64 {
	if x, ok := m.GetStorySegmentidPresent().(*SinaUser_StorySegmentid); ok {
		return x.StorySegmentid
	}
	return 0
}

func (m *SinaUser) GetAttitudeStyle() string {
	if x, ok := m.GetAttitudeStylePresent().(*SinaUser_AttitudeStyle); ok {
		return x.AttitudeStyle
	}
	return ""
}

func (m *SinaUser) GetVclubMember() uint32 {
	if x, ok := m.GetVclubMemberPresent().(*SinaUser_VclubMember); ok {
		return x.VclubMember
	}
	return 0
}

func (m *SinaUser) GetGenderState() uint32 {
	if x, ok := m.GetGenderStatePresent().(*SinaUser_GenderState); ok {
		return x.GenderState
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SinaUser) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SinaUser_OneofMarshaler, _SinaUser_OneofUnmarshaler, _SinaUser_OneofSizer, []interface{}{
		(*SinaUser_Id)(nil),
		(*SinaUser_ScreenName)(nil),
		(*SinaUser_Domain)(nil),
		(*SinaUser_CreatedAt)(nil),
		(*SinaUser_Gender_)(nil),
		(*SinaUser_Province)(nil),
		(*SinaUser_City)(nil),
		(*SinaUser_Description)(nil),
		(*SinaUser_Url)(nil),
		(*SinaUser_AvatarVer)(nil),
		(*SinaUser_Weihao)(nil),
		(*SinaUser_VerifiedReason)(nil),
		(*SinaUser_FollowersCount)(nil),
		(*SinaUser_FriendsCount)(nil),
		(*SinaUser_StatusesCount)(nil),
		(*SinaUser_FavouritesCount)(nil),
		(*SinaUser_BiFollowersCount)(nil),
		(*SinaUser_Email)(nil),
		(*SinaUser_Qq)(nil),
		(*SinaUser_ClearGeoTime)(nil),
		(*SinaUser_Level)(nil),
		(*SinaUser_UserType)(nil),
		(*SinaUser_Privacy)(nil),
		(*SinaUser_Lang)(nil),
		(*SinaUser_CoverImgPid)(nil),
		(*SinaUser_CoverImgCoordinates)(nil),
		(*SinaUser_Ulevel)(nil),
		(*SinaUser_Regip)(nil),
		(*SinaUser_Regsource)(nil),
		(*SinaUser_UpdateTime)(nil),
		(*SinaUser_Star)(nil),
		(*SinaUser_Sign)(nil),
		(*SinaUser_Region)(nil),
		(*SinaUser_Mbtype)(nil),
		(*SinaUser_Mbrank)(nil),
		(*SinaUser_HasMblockWord)(nil),
		(*SinaUser_AvatarHdPid)(nil),
		(*SinaUser_AvatarHdCoordinates)(nil),
		(*SinaUser_CoverImgPidMobile)(nil),
		(*SinaUser_CoverImgCoordinatesIphone)(nil),
		(*SinaUser_Ptype)(nil),
		(*SinaUser_Mobile)(nil),
		(*SinaUser_AbilityTags)(nil),
		(*SinaUser_BlockWordExpire)(nil),
		(*SinaUser_BlockAppExpire)(nil),
		(*SinaUser_VerifiedTrade)(nil),
		(*SinaUser_VerifiedReasonUrl)(nil),
		(*SinaUser_VerifiedSource)(nil),
		(*SinaUser_VerifiedSourceUrl)(nil),
		(*SinaUser_UnicomFreePc)(nil),
		(*SinaUser_LocationRights)(nil),
		(*SinaUser_Menu)(nil),
		(*SinaUser_WorldcupGuess)(nil),
		(*SinaUser_Dianpings)(nil),
		(*SinaUser_SignExt)(nil),
		(*SinaUser_BadgeTop)(nil),
		(*SinaUser_VerifiedState)(nil),
		(*SinaUser_CreditScore)(nil),
		(*SinaUser_PagefriendsCount)(nil),
		(*SinaUser_VerifiedLevel)(nil),
		(*SinaUser_AudioDetailPage)(nil),
		(*SinaUser_AudioPlayAddr)(nil),
		(*SinaUser_VerifiedReasonModified)(nil),
		(*SinaUser_VerifiedContactName)(nil),
		(*SinaUser_VerifiedContactEmail)(nil),
		(*SinaUser_VerifiedContactMobile)(nil),
		(*SinaUser_Urank)(nil),
		(*SinaUser_HasFrozenCount)(nil),
		(*SinaUser_ControllerSetting)(nil),
		(*SinaUser_UserAbility)(nil),
		(*SinaUser_Cardid)(nil),
		(*SinaUser_AvatargjId)(nil),
		(*SinaUser_VerifiedTypeExt)(nil),
		(*SinaUser_Insecurity)(nil),
		(*SinaUser_StorySegmentid)(nil),
		(*SinaUser_AttitudeStyle)(nil),
		(*SinaUser_VclubMember)(nil),
		(*SinaUser_GenderState)(nil),
	}
}

func _SinaUser_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SinaUser)
	// id_present
	switch x := m.IdPresent.(type) {
	case *SinaUser_Id:
		_ = b.EncodeVarint(401<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Id))
	case nil:
	default:
		return fmt.Errorf("SinaUser.IdPresent has unexpected type %T", x)
	}
	// screen_name_present
	switch x := m.ScreenNamePresent.(type) {
	case *SinaUser_ScreenName:
		_ = b.EncodeVarint(402<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.ScreenName)
	case nil:
	default:
		return fmt.Errorf("SinaUser.ScreenNamePresent has unexpected type %T", x)
	}
	// domain_present
	switch x := m.DomainPresent.(type) {
	case *SinaUser_Domain:
		_ = b.EncodeVarint(403<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Domain)
	case nil:
	default:
		return fmt.Errorf("SinaUser.DomainPresent has unexpected type %T", x)
	}
	// created_at_present
	switch x := m.CreatedAtPresent.(type) {
	case *SinaUser_CreatedAt:
		_ = b.EncodeVarint(404<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.CreatedAt))
	case nil:
	default:
		return fmt.Errorf("SinaUser.CreatedAtPresent has unexpected type %T", x)
	}
	// gender_present
	switch x := m.GenderPresent.(type) {
	case *SinaUser_Gender_:
		_ = b.EncodeVarint(405<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Gender))
	case nil:
	default:
		return fmt.Errorf("SinaUser.GenderPresent has unexpected type %T", x)
	}
	// province_present
	switch x := m.ProvincePresent.(type) {
	case *SinaUser_Province:
		_ = b.EncodeVarint(410<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Province)
	case nil:
	default:
		return fmt.Errorf("SinaUser.ProvincePresent has unexpected type %T", x)
	}
	// city_present
	switch x := m.CityPresent.(type) {
	case *SinaUser_City:
		_ = b.EncodeVarint(411<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.City)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CityPresent has unexpected type %T", x)
	}
	// description_present
	switch x := m.DescriptionPresent.(type) {
	case *SinaUser_Description:
		_ = b.EncodeVarint(412<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Description)
	case nil:
	default:
		return fmt.Errorf("SinaUser.DescriptionPresent has unexpected type %T", x)
	}
	// url_present
	switch x := m.UrlPresent.(type) {
	case *SinaUser_Url:
		_ = b.EncodeVarint(413<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Url)
	case nil:
	default:
		return fmt.Errorf("SinaUser.UrlPresent has unexpected type %T", x)
	}
	// avatar_ver_present
	switch x := m.AvatarVerPresent.(type) {
	case *SinaUser_AvatarVer:
		_ = b.EncodeVarint(415<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.AvatarVer))
	case nil:
	default:
		return fmt.Errorf("SinaUser.AvatarVerPresent has unexpected type %T", x)
	}
	// weihao_present
	switch x := m.WeihaoPresent.(type) {
	case *SinaUser_Weihao:
		_ = b.EncodeVarint(416<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Weihao)
	case nil:
	default:
		return fmt.Errorf("SinaUser.WeihaoPresent has unexpected type %T", x)
	}
	// verified_reason_present
	switch x := m.VerifiedReasonPresent.(type) {
	case *SinaUser_VerifiedReason:
		_ = b.EncodeVarint(424<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedReason)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedReasonPresent has unexpected type %T", x)
	}
	// followers_count_present
	switch x := m.FollowersCountPresent.(type) {
	case *SinaUser_FollowersCount:
		_ = b.EncodeVarint(441<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.FollowersCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.FollowersCountPresent has unexpected type %T", x)
	}
	// friends_count_present
	switch x := m.FriendsCountPresent.(type) {
	case *SinaUser_FriendsCount:
		_ = b.EncodeVarint(442<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.FriendsCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.FriendsCountPresent has unexpected type %T", x)
	}
	// statuses_count_present
	switch x := m.StatusesCountPresent.(type) {
	case *SinaUser_StatusesCount:
		_ = b.EncodeVarint(443<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.StatusesCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.StatusesCountPresent has unexpected type %T", x)
	}
	// favourites_count_present
	switch x := m.FavouritesCountPresent.(type) {
	case *SinaUser_FavouritesCount:
		_ = b.EncodeVarint(444<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.FavouritesCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.FavouritesCountPresent has unexpected type %T", x)
	}
	// bi_followers_count_present
	switch x := m.BiFollowersCountPresent.(type) {
	case *SinaUser_BiFollowersCount:
		_ = b.EncodeVarint(445<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.BiFollowersCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.BiFollowersCountPresent has unexpected type %T", x)
	}
	// email_present
	switch x := m.EmailPresent.(type) {
	case *SinaUser_Email:
		_ = b.EncodeVarint(450<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Email)
	case nil:
	default:
		return fmt.Errorf("SinaUser.EmailPresent has unexpected type %T", x)
	}
	// qq_present
	switch x := m.QqPresent.(type) {
	case *SinaUser_Qq:
		_ = b.EncodeVarint(451<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Qq)
	case nil:
	default:
		return fmt.Errorf("SinaUser.QqPresent has unexpected type %T", x)
	}
	// clear_geo_time_present
	switch x := m.ClearGeoTimePresent.(type) {
	case *SinaUser_ClearGeoTime:
		_ = b.EncodeVarint(457<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ClearGeoTime))
	case nil:
	default:
		return fmt.Errorf("SinaUser.ClearGeoTimePresent has unexpected type %T", x)
	}
	// level_present
	switch x := m.LevelPresent.(type) {
	case *SinaUser_Level:
		_ = b.EncodeVarint(458<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Level))
	case nil:
	default:
		return fmt.Errorf("SinaUser.LevelPresent has unexpected type %T", x)
	}
	// user_type_present
	switch x := m.UserTypePresent.(type) {
	case *SinaUser_UserType:
		_ = b.EncodeVarint(459<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.UserType))
	case nil:
	default:
		return fmt.Errorf("SinaUser.UserTypePresent has unexpected type %T", x)
	}
	// privacy_present
	switch x := m.PrivacyPresent.(type) {
	case *SinaUser_Privacy:
		_ = b.EncodeVarint(460<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Privacy))
	case nil:
	default:
		return fmt.Errorf("SinaUser.PrivacyPresent has unexpected type %T", x)
	}
	// lang_present
	switch x := m.LangPresent.(type) {
	case *SinaUser_Lang:
		_ = b.EncodeVarint(461<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Lang))
	case nil:
	default:
		return fmt.Errorf("SinaUser.LangPresent has unexpected type %T", x)
	}
	// coverImg_pid_present
	switch x := m.CoverImgPidPresent.(type) {
	case *SinaUser_CoverImgPid:
		_ = b.EncodeVarint(462<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.CoverImgPid)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CoverImgPidPresent has unexpected type %T", x)
	}
	// coverImg_coordinates_present
	switch x := m.CoverImgCoordinatesPresent.(type) {
	case *SinaUser_CoverImgCoordinates:
		_ = b.EncodeVarint(463<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.CoverImgCoordinates)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CoverImgCoordinatesPresent has unexpected type %T", x)
	}
	// ulevel_present
	switch x := m.UlevelPresent.(type) {
	case *SinaUser_Ulevel:
		_ = b.EncodeVarint(465<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Ulevel))
	case nil:
	default:
		return fmt.Errorf("SinaUser.UlevelPresent has unexpected type %T", x)
	}
	// regip_present
	switch x := m.RegipPresent.(type) {
	case *SinaUser_Regip:
		_ = b.EncodeVarint(466<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Regip))
	case nil:
	default:
		return fmt.Errorf("SinaUser.RegipPresent has unexpected type %T", x)
	}
	// regsource_present
	switch x := m.RegsourcePresent.(type) {
	case *SinaUser_Regsource:
		_ = b.EncodeVarint(467<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Regsource))
	case nil:
	default:
		return fmt.Errorf("SinaUser.RegsourcePresent has unexpected type %T", x)
	}
	// update_time_present
	switch x := m.UpdateTimePresent.(type) {
	case *SinaUser_UpdateTime:
		_ = b.EncodeVarint(468<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.UpdateTime))
	case nil:
	default:
		return fmt.Errorf("SinaUser.UpdateTimePresent has unexpected type %T", x)
	}
	// star_present
	switch x := m.StarPresent.(type) {
	case *SinaUser_Star:
		_ = b.EncodeVarint(469<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Star))
	case nil:
	default:
		return fmt.Errorf("SinaUser.StarPresent has unexpected type %T", x)
	}
	// sign_present
	switch x := m.SignPresent.(type) {
	case *SinaUser_Sign:
		_ = b.EncodeVarint(470<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Sign))
	case nil:
	default:
		return fmt.Errorf("SinaUser.SignPresent has unexpected type %T", x)
	}
	// region_present
	switch x := m.RegionPresent.(type) {
	case *SinaUser_Region:
		_ = b.EncodeVarint(471<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Region))
	case nil:
	default:
		return fmt.Errorf("SinaUser.RegionPresent has unexpected type %T", x)
	}
	// mbtype_present
	switch x := m.MbtypePresent.(type) {
	case *SinaUser_Mbtype:
		_ = b.EncodeVarint(480<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Mbtype))
	case nil:
	default:
		return fmt.Errorf("SinaUser.MbtypePresent has unexpected type %T", x)
	}
	// mbrank_present
	switch x := m.MbrankPresent.(type) {
	case *SinaUser_Mbrank:
		_ = b.EncodeVarint(481<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Mbrank))
	case nil:
	default:
		return fmt.Errorf("SinaUser.MbrankPresent has unexpected type %T", x)
	}
	// has_mblock_word_present
	switch x := m.HasMblockWordPresent.(type) {
	case *SinaUser_HasMblockWord:
		_ = b.EncodeVarint(482<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.HasMblockWord))
	case nil:
	default:
		return fmt.Errorf("SinaUser.HasMblockWordPresent has unexpected type %T", x)
	}
	// avatar_hd_pid_present
	switch x := m.AvatarHdPidPresent.(type) {
	case *SinaUser_AvatarHdPid:
		_ = b.EncodeVarint(484<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AvatarHdPid)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AvatarHdPidPresent has unexpected type %T", x)
	}
	// avatar_hd_coordinates_present
	switch x := m.AvatarHdCoordinatesPresent.(type) {
	case *SinaUser_AvatarHdCoordinates:
		_ = b.EncodeVarint(485<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AvatarHdCoordinates)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AvatarHdCoordinatesPresent has unexpected type %T", x)
	}
	// coverImg_pid_mobile_present
	switch x := m.CoverImgPidMobilePresent.(type) {
	case *SinaUser_CoverImgPidMobile:
		_ = b.EncodeVarint(486<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.CoverImgPidMobile)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CoverImgPidMobilePresent has unexpected type %T", x)
	}
	// coverImg_coordinates_iphone_present
	switch x := m.CoverImgCoordinatesIphonePresent.(type) {
	case *SinaUser_CoverImgCoordinatesIphone:
		_ = b.EncodeVarint(487<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.CoverImgCoordinatesIphone)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CoverImgCoordinatesIphonePresent has unexpected type %T", x)
	}
	// ptype_present
	switch x := m.PtypePresent.(type) {
	case *SinaUser_Ptype:
		_ = b.EncodeVarint(488<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Ptype))
	case nil:
	default:
		return fmt.Errorf("SinaUser.PtypePresent has unexpected type %T", x)
	}
	// mobile_present
	switch x := m.MobilePresent.(type) {
	case *SinaUser_Mobile:
		_ = b.EncodeVarint(489<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Mobile)
	case nil:
	default:
		return fmt.Errorf("SinaUser.MobilePresent has unexpected type %T", x)
	}
	// ability_tags_present
	switch x := m.AbilityTagsPresent.(type) {
	case *SinaUser_AbilityTags:
		_ = b.EncodeVarint(490<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AbilityTags)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AbilityTagsPresent has unexpected type %T", x)
	}
	// block_word_expire_present
	switch x := m.BlockWordExpirePresent.(type) {
	case *SinaUser_BlockWordExpire:
		_ = b.EncodeVarint(491<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.BlockWordExpire))
	case nil:
	default:
		return fmt.Errorf("SinaUser.BlockWordExpirePresent has unexpected type %T", x)
	}
	// block_app_expire_present
	switch x := m.BlockAppExpirePresent.(type) {
	case *SinaUser_BlockAppExpire:
		_ = b.EncodeVarint(492<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.BlockAppExpire))
	case nil:
	default:
		return fmt.Errorf("SinaUser.BlockAppExpirePresent has unexpected type %T", x)
	}
	// verified_trade_present
	switch x := m.VerifiedTradePresent.(type) {
	case *SinaUser_VerifiedTrade:
		_ = b.EncodeVarint(493<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedTrade)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedTradePresent has unexpected type %T", x)
	}
	// verified_reason_url_present
	switch x := m.VerifiedReasonUrlPresent.(type) {
	case *SinaUser_VerifiedReasonUrl:
		_ = b.EncodeVarint(494<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedReasonUrl)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedReasonUrlPresent has unexpected type %T", x)
	}
	// verified_source_present
	switch x := m.VerifiedSourcePresent.(type) {
	case *SinaUser_VerifiedSource:
		_ = b.EncodeVarint(495<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedSource)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedSourcePresent has unexpected type %T", x)
	}
	// verified_source_url_present
	switch x := m.VerifiedSourceUrlPresent.(type) {
	case *SinaUser_VerifiedSourceUrl:
		_ = b.EncodeVarint(496<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedSourceUrl)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedSourceUrlPresent has unexpected type %T", x)
	}
	// unicom_free_pc_present
	switch x := m.UnicomFreePcPresent.(type) {
	case *SinaUser_UnicomFreePc:
		_ = b.EncodeVarint(497<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.UnicomFreePc)
	case nil:
	default:
		return fmt.Errorf("SinaUser.UnicomFreePcPresent has unexpected type %T", x)
	}
	// location_rights_present
	switch x := m.LocationRightsPresent.(type) {
	case *SinaUser_LocationRights:
		_ = b.EncodeVarint(498<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.LocationRights))
	case nil:
	default:
		return fmt.Errorf("SinaUser.LocationRightsPresent has unexpected type %T", x)
	}
	// menu_present
	switch x := m.MenuPresent.(type) {
	case *SinaUser_Menu:
		_ = b.EncodeVarint(499<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Menu)
	case nil:
	default:
		return fmt.Errorf("SinaUser.MenuPresent has unexpected type %T", x)
	}
	// worldcup_guess_present
	switch x := m.WorldcupGuessPresent.(type) {
	case *SinaUser_WorldcupGuess:
		_ = b.EncodeVarint(500<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.WorldcupGuess))
	case nil:
	default:
		return fmt.Errorf("SinaUser.WorldcupGuessPresent has unexpected type %T", x)
	}
	// dianpings_present
	switch x := m.DianpingsPresent.(type) {
	case *SinaUser_Dianpings:
		_ = b.EncodeVarint(501<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Dianpings)
	case nil:
	default:
		return fmt.Errorf("SinaUser.DianpingsPresent has unexpected type %T", x)
	}
	// sign_ext_present
	switch x := m.SignExtPresent.(type) {
	case *SinaUser_SignExt:
		_ = b.EncodeVarint(502<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.SignExt)
	case nil:
	default:
		return fmt.Errorf("SinaUser.SignExtPresent has unexpected type %T", x)
	}
	// badge_top_present
	switch x := m.BadgeTopPresent.(type) {
	case *SinaUser_BadgeTop:
		_ = b.EncodeVarint(503<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.BadgeTop)
	case nil:
	default:
		return fmt.Errorf("SinaUser.BadgeTopPresent has unexpected type %T", x)
	}
	// verified_state_present
	switch x := m.VerifiedStatePresent.(type) {
	case *SinaUser_VerifiedState:
		_ = b.EncodeVarint(504<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.VerifiedState))
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedStatePresent has unexpected type %T", x)
	}
	// credit_score_present
	switch x := m.CreditScorePresent.(type) {
	case *SinaUser_CreditScore:
		_ = b.EncodeVarint(505<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.CreditScore))
	case nil:
	default:
		return fmt.Errorf("SinaUser.CreditScorePresent has unexpected type %T", x)
	}
	// pagefriends_count_present
	switch x := m.PagefriendsCountPresent.(type) {
	case *SinaUser_PagefriendsCount:
		_ = b.EncodeVarint(446<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.PagefriendsCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.PagefriendsCountPresent has unexpected type %T", x)
	}
	// verified_level_present
	switch x := m.VerifiedLevelPresent.(type) {
	case *SinaUser_VerifiedLevel:
		_ = b.EncodeVarint(506<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.VerifiedLevel))
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedLevelPresent has unexpected type %T", x)
	}
	// audio_detail_page_present
	switch x := m.AudioDetailPagePresent.(type) {
	case *SinaUser_AudioDetailPage:
		_ = b.EncodeVarint(507<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AudioDetailPage)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AudioDetailPagePresent has unexpected type %T", x)
	}
	// audio_play_addr_present
	switch x := m.AudioPlayAddrPresent.(type) {
	case *SinaUser_AudioPlayAddr:
		_ = b.EncodeVarint(508<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AudioPlayAddr)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AudioPlayAddrPresent has unexpected type %T", x)
	}
	// verified_reason_modified_present
	switch x := m.VerifiedReasonModifiedPresent.(type) {
	case *SinaUser_VerifiedReasonModified:
		_ = b.EncodeVarint(509<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedReasonModified)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedReasonModifiedPresent has unexpected type %T", x)
	}
	// verified_contact_name_present
	switch x := m.VerifiedContactNamePresent.(type) {
	case *SinaUser_VerifiedContactName:
		_ = b.EncodeVarint(510<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedContactName)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedContactNamePresent has unexpected type %T", x)
	}
	// verified_contact_email_present
	switch x := m.VerifiedContactEmailPresent.(type) {
	case *SinaUser_VerifiedContactEmail:
		_ = b.EncodeVarint(511<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedContactEmail)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedContactEmailPresent has unexpected type %T", x)
	}
	// verified_contact_mobile_present
	switch x := m.VerifiedContactMobilePresent.(type) {
	case *SinaUser_VerifiedContactMobile:
		_ = b.EncodeVarint(512<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.VerifiedContactMobile)
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedContactMobilePresent has unexpected type %T", x)
	}
	// urank_present
	switch x := m.UrankPresent.(type) {
	case *SinaUser_Urank:
		_ = b.EncodeVarint(513<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Urank))
	case nil:
	default:
		return fmt.Errorf("SinaUser.UrankPresent has unexpected type %T", x)
	}
	// has_frozen_count_present
	switch x := m.HasFrozenCountPresent.(type) {
	case *SinaUser_HasFrozenCount:
		_ = b.EncodeVarint(514<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.HasFrozenCount))
	case nil:
	default:
		return fmt.Errorf("SinaUser.HasFrozenCountPresent has unexpected type %T", x)
	}
	// controller_setting_present
	switch x := m.ControllerSettingPresent.(type) {
	case *SinaUser_ControllerSetting:
		_ = b.EncodeVarint(515<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.ControllerSetting))
	case nil:
	default:
		return fmt.Errorf("SinaUser.ControllerSettingPresent has unexpected type %T", x)
	}
	// user_ability_present
	switch x := m.UserAbilityPresent.(type) {
	case *SinaUser_UserAbility:
		_ = b.EncodeVarint(516<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.UserAbility))
	case nil:
	default:
		return fmt.Errorf("SinaUser.UserAbilityPresent has unexpected type %T", x)
	}
	// cardid_present
	switch x := m.CardidPresent.(type) {
	case *SinaUser_Cardid:
		_ = b.EncodeVarint(517<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Cardid)
	case nil:
	default:
		return fmt.Errorf("SinaUser.CardidPresent has unexpected type %T", x)
	}
	// avatargj_id_present
	switch x := m.AvatargjIdPresent.(type) {
	case *SinaUser_AvatargjId:
		_ = b.EncodeVarint(518<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AvatargjId)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AvatargjIdPresent has unexpected type %T", x)
	}
	// verified_type_ext_present
	switch x := m.VerifiedTypeExtPresent.(type) {
	case *SinaUser_VerifiedTypeExt:
		_ = b.EncodeVarint(519<<3 | proto.WireVarint)
		_ = b.EncodeZigzag32(uint64(x.VerifiedTypeExt))
	case nil:
	default:
		return fmt.Errorf("SinaUser.VerifiedTypeExtPresent has unexpected type %T", x)
	}
	// insecurity_present
	switch x := m.InsecurityPresent.(type) {
	case *SinaUser_Insecurity:
		_ = b.EncodeVarint(520<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Insecurity))
	case nil:
	default:
		return fmt.Errorf("SinaUser.InsecurityPresent has unexpected type %T", x)
	}
	// story_segmentid_present
	switch x := m.StorySegmentidPresent.(type) {
	case *SinaUser_StorySegmentid:
		_ = b.EncodeVarint(521<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.StorySegmentid))
	case nil:
	default:
		return fmt.Errorf("SinaUser.StorySegmentidPresent has unexpected type %T", x)
	}
	// attitude_style_present
	switch x := m.AttitudeStylePresent.(type) {
	case *SinaUser_AttitudeStyle:
		_ = b.EncodeVarint(522<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.AttitudeStyle)
	case nil:
	default:
		return fmt.Errorf("SinaUser.AttitudeStylePresent has unexpected type %T", x)
	}
	// vclub_member_present
	switch x := m.VclubMemberPresent.(type) {
	case *SinaUser_VclubMember:
		_ = b.EncodeVarint(523<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.VclubMember))
	case nil:
	default:
		return fmt.Errorf("SinaUser.VclubMemberPresent has unexpected type %T", x)
	}
	// gender_state_present
	switch x := m.GenderStatePresent.(type) {
	case *SinaUser_GenderState:
		_ = b.EncodeVarint(524<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.GenderState))
	case nil:
	default:
		return fmt.Errorf("SinaUser.GenderStatePresent has unexpected type %T", x)
	}
	return nil
}

func _SinaUser_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SinaUser)
	switch tag {
	case 401: // id_present.id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IdPresent = &SinaUser_Id{x}
		return true, err
	case 402: // screen_name_present.screen_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ScreenNamePresent = &SinaUser_ScreenName{x}
		return true, err
	case 403: // domain_present.domain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.DomainPresent = &SinaUser_Domain{x}
		return true, err
	case 404: // created_at_present.created_at
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CreatedAtPresent = &SinaUser_CreatedAt{x}
		return true, err
	case 405: // gender_present.gender
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.GenderPresent = &SinaUser_Gender_{SinaUser_Gender(x)}
		return true, err
	case 410: // province_present.province
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ProvincePresent = &SinaUser_Province{x}
		return true, err
	case 411: // city_present.city
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CityPresent = &SinaUser_City{x}
		return true, err
	case 412: // description_present.description
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.DescriptionPresent = &SinaUser_Description{x}
		return true, err
	case 413: // url_present.url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.UrlPresent = &SinaUser_Url{x}
		return true, err
	case 415: // avatar_ver_present.avatar_ver
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AvatarVerPresent = &SinaUser_AvatarVer{x}
		return true, err
	case 416: // weihao_present.weihao
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.WeihaoPresent = &SinaUser_Weihao{x}
		return true, err
	case 424: // verified_reason_present.verified_reason
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedReasonPresent = &SinaUser_VerifiedReason{x}
		return true, err
	case 441: // followers_count_present.followers_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FollowersCountPresent = &SinaUser_FollowersCount{uint32(x)}
		return true, err
	case 442: // friends_count_present.friends_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FriendsCountPresent = &SinaUser_FriendsCount{uint32(x)}
		return true, err
	case 443: // statuses_count_present.statuses_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StatusesCountPresent = &SinaUser_StatusesCount{uint32(x)}
		return true, err
	case 444: // favourites_count_present.favourites_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FavouritesCountPresent = &SinaUser_FavouritesCount{uint32(x)}
		return true, err
	case 445: // bi_followers_count_present.bi_followers_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BiFollowersCountPresent = &SinaUser_BiFollowersCount{uint32(x)}
		return true, err
	case 450: // email_present.email
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.EmailPresent = &SinaUser_Email{x}
		return true, err
	case 451: // qq_present.qq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.QqPresent = &SinaUser_Qq{x}
		return true, err
	case 457: // clear_geo_time_present.clear_geo_time
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ClearGeoTimePresent = &SinaUser_ClearGeoTime{x}
		return true, err
	case 458: // level_present.level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LevelPresent = &SinaUser_Level{uint32(x)}
		return true, err
	case 459: // user_type_present.user_type
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UserTypePresent = &SinaUser_UserType{uint32(x)}
		return true, err
	case 460: // privacy_present.privacy
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PrivacyPresent = &SinaUser_Privacy{x}
		return true, err
	case 461: // lang_present.lang
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LangPresent = &SinaUser_Lang{uint32(x)}
		return true, err
	case 462: // coverImg_pid_present.coverImg_pid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CoverImgPidPresent = &SinaUser_CoverImgPid{x}
		return true, err
	case 463: // coverImg_coordinates_present.coverImg_coordinates
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CoverImgCoordinatesPresent = &SinaUser_CoverImgCoordinates{x}
		return true, err
	case 465: // ulevel_present.ulevel
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UlevelPresent = &SinaUser_Ulevel{x}
		return true, err
	case 466: // regip_present.regip
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RegipPresent = &SinaUser_Regip{x}
		return true, err
	case 467: // regsource_present.regsource
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RegsourcePresent = &SinaUser_Regsource{x}
		return true, err
	case 468: // update_time_present.update_time
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UpdateTimePresent = &SinaUser_UpdateTime{x}
		return true, err
	case 469: // star_present.star
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StarPresent = &SinaUser_Star{x}
		return true, err
	case 470: // sign_present.sign
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SignPresent = &SinaUser_Sign{x}
		return true, err
	case 471: // region_present.region
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.RegionPresent = &SinaUser_Region{x}
		return true, err
	case 480: // mbtype_present.mbtype
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MbtypePresent = &SinaUser_Mbtype{uint32(x)}
		return true, err
	case 481: // mbrank_present.mbrank
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MbrankPresent = &SinaUser_Mbrank{uint32(x)}
		return true, err
	case 482: // has_mblock_word_present.has_mblock_word
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HasMblockWordPresent = &SinaUser_HasMblockWord{uint32(x)}
		return true, err
	case 484: // avatar_hd_pid_present.avatar_hd_pid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AvatarHdPidPresent = &SinaUser_AvatarHdPid{x}
		return true, err
	case 485: // avatar_hd_coordinates_present.avatar_hd_coordinates
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AvatarHdCoordinatesPresent = &SinaUser_AvatarHdCoordinates{x}
		return true, err
	case 486: // coverImg_pid_mobile_present.coverImg_pid_mobile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CoverImgPidMobilePresent = &SinaUser_CoverImgPidMobile{x}
		return true, err
	case 487: // coverImg_coordinates_iphone_present.coverImg_coordinates_iphone
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CoverImgCoordinatesIphonePresent = &SinaUser_CoverImgCoordinatesIphone{x}
		return true, err
	case 488: // ptype_present.ptype
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PtypePresent = &SinaUser_Ptype{uint32(x)}
		return true, err
	case 489: // mobile_present.mobile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.MobilePresent = &SinaUser_Mobile{x}
		return true, err
	case 490: // ability_tags_present.ability_tags
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AbilityTagsPresent = &SinaUser_AbilityTags{x}
		return true, err
	case 491: // block_word_expire_present.block_word_expire
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BlockWordExpirePresent = &SinaUser_BlockWordExpire{x}
		return true, err
	case 492: // block_app_expire_present.block_app_expire
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.BlockAppExpirePresent = &SinaUser_BlockAppExpire{x}
		return true, err
	case 493: // verified_trade_present.verified_trade
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedTradePresent = &SinaUser_VerifiedTrade{x}
		return true, err
	case 494: // verified_reason_url_present.verified_reason_url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedReasonUrlPresent = &SinaUser_VerifiedReasonUrl{x}
		return true, err
	case 495: // verified_source_present.verified_source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedSourcePresent = &SinaUser_VerifiedSource{x}
		return true, err
	case 496: // verified_source_url_present.verified_source_url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedSourceUrlPresent = &SinaUser_VerifiedSourceUrl{x}
		return true, err
	case 497: // unicom_free_pc_present.unicom_free_pc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.UnicomFreePcPresent = &SinaUser_UnicomFreePc{x}
		return true, err
	case 498: // location_rights_present.location_rights
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.LocationRightsPresent = &SinaUser_LocationRights{uint32(x)}
		return true, err
	case 499: // menu_present.menu
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.MenuPresent = &SinaUser_Menu{x}
		return true, err
	case 500: // worldcup_guess_present.worldcup_guess
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.WorldcupGuessPresent = &SinaUser_WorldcupGuess{uint32(x)}
		return true, err
	case 501: // dianpings_present.dianpings
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.DianpingsPresent = &SinaUser_Dianpings{x}
		return true, err
	case 502: // sign_ext_present.sign_ext
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.SignExtPresent = &SinaUser_SignExt{x}
		return true, err
	case 503: // badge_top_present.badge_top
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.BadgeTopPresent = &SinaUser_BadgeTop{x}
		return true, err
	case 504: // verified_state_present.verified_state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.VerifiedStatePresent = &SinaUser_VerifiedState{uint32(x)}
		return true, err
	case 505: // credit_score_present.credit_score
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CreditScorePresent = &SinaUser_CreditScore{uint32(x)}
		return true, err
	case 446: // pagefriends_count_present.pagefriends_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.PagefriendsCountPresent = &SinaUser_PagefriendsCount{uint32(x)}
		return true, err
	case 506: // verified_level_present.verified_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.VerifiedLevelPresent = &SinaUser_VerifiedLevel{uint32(x)}
		return true, err
	case 507: // audio_detail_page_present.audio_detail_page
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AudioDetailPagePresent = &SinaUser_AudioDetailPage{x}
		return true, err
	case 508: // audio_play_addr_present.audio_play_addr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AudioPlayAddrPresent = &SinaUser_AudioPlayAddr{x}
		return true, err
	case 509: // verified_reason_modified_present.verified_reason_modified
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedReasonModifiedPresent = &SinaUser_VerifiedReasonModified{x}
		return true, err
	case 510: // verified_contact_name_present.verified_contact_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedContactNamePresent = &SinaUser_VerifiedContactName{x}
		return true, err
	case 511: // verified_contact_email_present.verified_contact_email
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedContactEmailPresent = &SinaUser_VerifiedContactEmail{x}
		return true, err
	case 512: // verified_contact_mobile_present.verified_contact_mobile
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VerifiedContactMobilePresent = &SinaUser_VerifiedContactMobile{x}
		return true, err
	case 513: // urank_present.urank
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UrankPresent = &SinaUser_Urank{uint32(x)}
		return true, err
	case 514: // has_frozen_count_present.has_frozen_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HasFrozenCountPresent = &SinaUser_HasFrozenCount{uint32(x)}
		return true, err
	case 515: // controller_setting_present.controller_setting
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ControllerSettingPresent = &SinaUser_ControllerSetting{x}
		return true, err
	case 516: // user_ability_present.user_ability
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UserAbilityPresent = &SinaUser_UserAbility{uint32(x)}
		return true, err
	case 517: // cardid_present.cardid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.CardidPresent = &SinaUser_Cardid{x}
		return true, err
	case 518: // avatargj_id_present.avatargj_id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AvatargjIdPresent = &SinaUser_AvatargjId{x}
		return true, err
	case 519: // verified_type_ext_present.verified_type_ext
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag32()
		m.VerifiedTypeExtPresent = &SinaUser_VerifiedTypeExt{int32(x)}
		return true, err
	case 520: // insecurity_present.insecurity
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.InsecurityPresent = &SinaUser_Insecurity{uint32(x)}
		return true, err
	case 521: // story_segmentid_present.story_segmentid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StorySegmentidPresent = &SinaUser_StorySegmentid{x}
		return true, err
	case 522: // attitude_style_present.attitude_style
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.AttitudeStylePresent = &SinaUser_AttitudeStyle{x}
		return true, err
	case 523: // vclub_member_present.vclub_member
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.VclubMemberPresent = &SinaUser_VclubMember{uint32(x)}
		return true, err
	case 524: // gender_state_present.gender_state
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.GenderStatePresent = &SinaUser_GenderState{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _SinaUser_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SinaUser)
	// id_present
	switch x := m.IdPresent.(type) {
	case *SinaUser_Id:
		n += proto.SizeVarint(401<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Id))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// screen_name_present
	switch x := m.ScreenNamePresent.(type) {
	case *SinaUser_ScreenName:
		n += proto.SizeVarint(402<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ScreenName)))
		n += len(x.ScreenName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// domain_present
	switch x := m.DomainPresent.(type) {
	case *SinaUser_Domain:
		n += proto.SizeVarint(403<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Domain)))
		n += len(x.Domain)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// created_at_present
	switch x := m.CreatedAtPresent.(type) {
	case *SinaUser_CreatedAt:
		n += proto.SizeVarint(404<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.CreatedAt))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// gender_present
	switch x := m.GenderPresent.(type) {
	case *SinaUser_Gender_:
		n += proto.SizeVarint(405<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Gender))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// province_present
	switch x := m.ProvincePresent.(type) {
	case *SinaUser_Province:
		n += proto.SizeVarint(410<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Province)))
		n += len(x.Province)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// city_present
	switch x := m.CityPresent.(type) {
	case *SinaUser_City:
		n += proto.SizeVarint(411<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.City)))
		n += len(x.City)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// description_present
	switch x := m.DescriptionPresent.(type) {
	case *SinaUser_Description:
		n += proto.SizeVarint(412<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Description)))
		n += len(x.Description)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// url_present
	switch x := m.UrlPresent.(type) {
	case *SinaUser_Url:
		n += proto.SizeVarint(413<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Url)))
		n += len(x.Url)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// avatar_ver_present
	switch x := m.AvatarVerPresent.(type) {
	case *SinaUser_AvatarVer:
		n += proto.SizeVarint(415<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.AvatarVer))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// weihao_present
	switch x := m.WeihaoPresent.(type) {
	case *SinaUser_Weihao:
		n += proto.SizeVarint(416<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Weihao)))
		n += len(x.Weihao)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_reason_present
	switch x := m.VerifiedReasonPresent.(type) {
	case *SinaUser_VerifiedReason:
		n += proto.SizeVarint(424<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedReason)))
		n += len(x.VerifiedReason)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// followers_count_present
	switch x := m.FollowersCountPresent.(type) {
	case *SinaUser_FollowersCount:
		n += proto.SizeVarint(441<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.FollowersCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// friends_count_present
	switch x := m.FriendsCountPresent.(type) {
	case *SinaUser_FriendsCount:
		n += proto.SizeVarint(442<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.FriendsCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// statuses_count_present
	switch x := m.StatusesCountPresent.(type) {
	case *SinaUser_StatusesCount:
		n += proto.SizeVarint(443<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.StatusesCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// favourites_count_present
	switch x := m.FavouritesCountPresent.(type) {
	case *SinaUser_FavouritesCount:
		n += proto.SizeVarint(444<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.FavouritesCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// bi_followers_count_present
	switch x := m.BiFollowersCountPresent.(type) {
	case *SinaUser_BiFollowersCount:
		n += proto.SizeVarint(445<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BiFollowersCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// email_present
	switch x := m.EmailPresent.(type) {
	case *SinaUser_Email:
		n += proto.SizeVarint(450<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Email)))
		n += len(x.Email)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// qq_present
	switch x := m.QqPresent.(type) {
	case *SinaUser_Qq:
		n += proto.SizeVarint(451<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Qq)))
		n += len(x.Qq)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// clear_geo_time_present
	switch x := m.ClearGeoTimePresent.(type) {
	case *SinaUser_ClearGeoTime:
		n += proto.SizeVarint(457<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ClearGeoTime))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// level_present
	switch x := m.LevelPresent.(type) {
	case *SinaUser_Level:
		n += proto.SizeVarint(458<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Level))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// user_type_present
	switch x := m.UserTypePresent.(type) {
	case *SinaUser_UserType:
		n += proto.SizeVarint(459<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.UserType))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// privacy_present
	switch x := m.PrivacyPresent.(type) {
	case *SinaUser_Privacy:
		n += proto.SizeVarint(460<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Privacy))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// lang_present
	switch x := m.LangPresent.(type) {
	case *SinaUser_Lang:
		n += proto.SizeVarint(461<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Lang))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// coverImg_pid_present
	switch x := m.CoverImgPidPresent.(type) {
	case *SinaUser_CoverImgPid:
		n += proto.SizeVarint(462<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CoverImgPid)))
		n += len(x.CoverImgPid)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// coverImg_coordinates_present
	switch x := m.CoverImgCoordinatesPresent.(type) {
	case *SinaUser_CoverImgCoordinates:
		n += proto.SizeVarint(463<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CoverImgCoordinates)))
		n += len(x.CoverImgCoordinates)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ulevel_present
	switch x := m.UlevelPresent.(type) {
	case *SinaUser_Ulevel:
		n += proto.SizeVarint(465<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Ulevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// regip_present
	switch x := m.RegipPresent.(type) {
	case *SinaUser_Regip:
		n += proto.SizeVarint(466<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Regip))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// regsource_present
	switch x := m.RegsourcePresent.(type) {
	case *SinaUser_Regsource:
		n += proto.SizeVarint(467<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Regsource))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// update_time_present
	switch x := m.UpdateTimePresent.(type) {
	case *SinaUser_UpdateTime:
		n += proto.SizeVarint(468<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.UpdateTime))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// star_present
	switch x := m.StarPresent.(type) {
	case *SinaUser_Star:
		n += proto.SizeVarint(469<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Star))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sign_present
	switch x := m.SignPresent.(type) {
	case *SinaUser_Sign:
		n += proto.SizeVarint(470<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Sign))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// region_present
	switch x := m.RegionPresent.(type) {
	case *SinaUser_Region:
		n += proto.SizeVarint(471<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Region))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mbtype_present
	switch x := m.MbtypePresent.(type) {
	case *SinaUser_Mbtype:
		n += proto.SizeVarint(480<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Mbtype))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mbrank_present
	switch x := m.MbrankPresent.(type) {
	case *SinaUser_Mbrank:
		n += proto.SizeVarint(481<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Mbrank))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// has_mblock_word_present
	switch x := m.HasMblockWordPresent.(type) {
	case *SinaUser_HasMblockWord:
		n += proto.SizeVarint(482<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.HasMblockWord))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// avatar_hd_pid_present
	switch x := m.AvatarHdPidPresent.(type) {
	case *SinaUser_AvatarHdPid:
		n += proto.SizeVarint(484<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AvatarHdPid)))
		n += len(x.AvatarHdPid)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// avatar_hd_coordinates_present
	switch x := m.AvatarHdCoordinatesPresent.(type) {
	case *SinaUser_AvatarHdCoordinates:
		n += proto.SizeVarint(485<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AvatarHdCoordinates)))
		n += len(x.AvatarHdCoordinates)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// coverImg_pid_mobile_present
	switch x := m.CoverImgPidMobilePresent.(type) {
	case *SinaUser_CoverImgPidMobile:
		n += proto.SizeVarint(486<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CoverImgPidMobile)))
		n += len(x.CoverImgPidMobile)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// coverImg_coordinates_iphone_present
	switch x := m.CoverImgCoordinatesIphonePresent.(type) {
	case *SinaUser_CoverImgCoordinatesIphone:
		n += proto.SizeVarint(487<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CoverImgCoordinatesIphone)))
		n += len(x.CoverImgCoordinatesIphone)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ptype_present
	switch x := m.PtypePresent.(type) {
	case *SinaUser_Ptype:
		n += proto.SizeVarint(488<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Ptype))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mobile_present
	switch x := m.MobilePresent.(type) {
	case *SinaUser_Mobile:
		n += proto.SizeVarint(489<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Mobile)))
		n += len(x.Mobile)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ability_tags_present
	switch x := m.AbilityTagsPresent.(type) {
	case *SinaUser_AbilityTags:
		n += proto.SizeVarint(490<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AbilityTags)))
		n += len(x.AbilityTags)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// block_word_expire_present
	switch x := m.BlockWordExpirePresent.(type) {
	case *SinaUser_BlockWordExpire:
		n += proto.SizeVarint(491<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BlockWordExpire))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// block_app_expire_present
	switch x := m.BlockAppExpirePresent.(type) {
	case *SinaUser_BlockAppExpire:
		n += proto.SizeVarint(492<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BlockAppExpire))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_trade_present
	switch x := m.VerifiedTradePresent.(type) {
	case *SinaUser_VerifiedTrade:
		n += proto.SizeVarint(493<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedTrade)))
		n += len(x.VerifiedTrade)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_reason_url_present
	switch x := m.VerifiedReasonUrlPresent.(type) {
	case *SinaUser_VerifiedReasonUrl:
		n += proto.SizeVarint(494<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedReasonUrl)))
		n += len(x.VerifiedReasonUrl)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_source_present
	switch x := m.VerifiedSourcePresent.(type) {
	case *SinaUser_VerifiedSource:
		n += proto.SizeVarint(495<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedSource)))
		n += len(x.VerifiedSource)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_source_url_present
	switch x := m.VerifiedSourceUrlPresent.(type) {
	case *SinaUser_VerifiedSourceUrl:
		n += proto.SizeVarint(496<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedSourceUrl)))
		n += len(x.VerifiedSourceUrl)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// unicom_free_pc_present
	switch x := m.UnicomFreePcPresent.(type) {
	case *SinaUser_UnicomFreePc:
		n += proto.SizeVarint(497<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.UnicomFreePc)))
		n += len(x.UnicomFreePc)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// location_rights_present
	switch x := m.LocationRightsPresent.(type) {
	case *SinaUser_LocationRights:
		n += proto.SizeVarint(498<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.LocationRights))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// menu_present
	switch x := m.MenuPresent.(type) {
	case *SinaUser_Menu:
		n += proto.SizeVarint(499<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Menu)))
		n += len(x.Menu)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// worldcup_guess_present
	switch x := m.WorldcupGuessPresent.(type) {
	case *SinaUser_WorldcupGuess:
		n += proto.SizeVarint(500<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.WorldcupGuess))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// dianpings_present
	switch x := m.DianpingsPresent.(type) {
	case *SinaUser_Dianpings:
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Dianpings)))
		n += len(x.Dianpings)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sign_ext_present
	switch x := m.SignExtPresent.(type) {
	case *SinaUser_SignExt:
		n += proto.SizeVarint(502<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.SignExt)))
		n += len(x.SignExt)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// badge_top_present
	switch x := m.BadgeTopPresent.(type) {
	case *SinaUser_BadgeTop:
		n += proto.SizeVarint(503<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.BadgeTop)))
		n += len(x.BadgeTop)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_state_present
	switch x := m.VerifiedStatePresent.(type) {
	case *SinaUser_VerifiedState:
		n += proto.SizeVarint(504<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.VerifiedState))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// credit_score_present
	switch x := m.CreditScorePresent.(type) {
	case *SinaUser_CreditScore:
		n += proto.SizeVarint(505<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.CreditScore))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pagefriends_count_present
	switch x := m.PagefriendsCountPresent.(type) {
	case *SinaUser_PagefriendsCount:
		n += proto.SizeVarint(446<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.PagefriendsCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_level_present
	switch x := m.VerifiedLevelPresent.(type) {
	case *SinaUser_VerifiedLevel:
		n += proto.SizeVarint(506<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.VerifiedLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// audio_detail_page_present
	switch x := m.AudioDetailPagePresent.(type) {
	case *SinaUser_AudioDetailPage:
		n += proto.SizeVarint(507<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AudioDetailPage)))
		n += len(x.AudioDetailPage)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// audio_play_addr_present
	switch x := m.AudioPlayAddrPresent.(type) {
	case *SinaUser_AudioPlayAddr:
		n += proto.SizeVarint(508<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AudioPlayAddr)))
		n += len(x.AudioPlayAddr)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_reason_modified_present
	switch x := m.VerifiedReasonModifiedPresent.(type) {
	case *SinaUser_VerifiedReasonModified:
		n += proto.SizeVarint(509<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedReasonModified)))
		n += len(x.VerifiedReasonModified)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_contact_name_present
	switch x := m.VerifiedContactNamePresent.(type) {
	case *SinaUser_VerifiedContactName:
		n += proto.SizeVarint(510<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedContactName)))
		n += len(x.VerifiedContactName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_contact_email_present
	switch x := m.VerifiedContactEmailPresent.(type) {
	case *SinaUser_VerifiedContactEmail:
		n += proto.SizeVarint(511<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedContactEmail)))
		n += len(x.VerifiedContactEmail)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_contact_mobile_present
	switch x := m.VerifiedContactMobilePresent.(type) {
	case *SinaUser_VerifiedContactMobile:
		n += proto.SizeVarint(512<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.VerifiedContactMobile)))
		n += len(x.VerifiedContactMobile)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// urank_present
	switch x := m.UrankPresent.(type) {
	case *SinaUser_Urank:
		n += proto.SizeVarint(513<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Urank))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// has_frozen_count_present
	switch x := m.HasFrozenCountPresent.(type) {
	case *SinaUser_HasFrozenCount:
		n += proto.SizeVarint(514<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.HasFrozenCount))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// controller_setting_present
	switch x := m.ControllerSettingPresent.(type) {
	case *SinaUser_ControllerSetting:
		n += proto.SizeVarint(515<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ControllerSetting))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// user_ability_present
	switch x := m.UserAbilityPresent.(type) {
	case *SinaUser_UserAbility:
		n += proto.SizeVarint(516<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.UserAbility))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cardid_present
	switch x := m.CardidPresent.(type) {
	case *SinaUser_Cardid:
		n += proto.SizeVarint(517<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Cardid)))
		n += len(x.Cardid)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// avatargj_id_present
	switch x := m.AvatargjIdPresent.(type) {
	case *SinaUser_AvatargjId:
		n += proto.SizeVarint(518<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AvatargjId)))
		n += len(x.AvatargjId)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// verified_type_ext_present
	switch x := m.VerifiedTypeExtPresent.(type) {
	case *SinaUser_VerifiedTypeExt:
		n += proto.SizeVarint(519<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64((uint32(x.VerifiedTypeExt) << 1) ^ uint32((int32(x.VerifiedTypeExt) >> 31))))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// insecurity_present
	switch x := m.InsecurityPresent.(type) {
	case *SinaUser_Insecurity:
		n += proto.SizeVarint(520<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Insecurity))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// story_segmentid_present
	switch x := m.StorySegmentidPresent.(type) {
	case *SinaUser_StorySegmentid:
		n += proto.SizeVarint(521<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.StorySegmentid))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// attitude_style_present
	switch x := m.AttitudeStylePresent.(type) {
	case *SinaUser_AttitudeStyle:
		n += proto.SizeVarint(522<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.AttitudeStyle)))
		n += len(x.AttitudeStyle)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// vclub_member_present
	switch x := m.VclubMemberPresent.(type) {
	case *SinaUser_VclubMember:
		n += proto.SizeVarint(523<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.VclubMember))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// gender_state_present
	switch x := m.GenderStatePresent.(type) {
	case *SinaUser_GenderState:
		n += proto.SizeVarint(524<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.GenderState))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*SinaUser)(nil), "weibo.SinaUser")
	proto.RegisterEnum("weibo.SinaUser_Gender", SinaUser_Gender_name, SinaUser_Gender_value)
}
func (m *SinaUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SinaUser) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.IdPresent != nil {
		nn1, err := m.IdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.ScreenNamePresent != nil {
		nn2, err := m.ScreenNamePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.DomainPresent != nil {
		nn3, err := m.DomainPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if m.CreatedAtPresent != nil {
		nn4, err := m.CreatedAtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	if m.GenderPresent != nil {
		nn5, err := m.GenderPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn5
	}
	if m.ProvincePresent != nil {
		nn6, err := m.ProvincePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.CityPresent != nil {
		nn7, err := m.CityPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn7
	}
	if m.DescriptionPresent != nil {
		nn8, err := m.DescriptionPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn8
	}
	if m.UrlPresent != nil {
		nn9, err := m.UrlPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn9
	}
	if m.AvatarVerPresent != nil {
		nn10, err := m.AvatarVerPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn10
	}
	if m.WeihaoPresent != nil {
		nn11, err := m.WeihaoPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn11
	}
	if m.VerifiedReasonPresent != nil {
		nn12, err := m.VerifiedReasonPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn12
	}
	if m.FollowersCountPresent != nil {
		nn13, err := m.FollowersCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn13
	}
	if m.FriendsCountPresent != nil {
		nn14, err := m.FriendsCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn14
	}
	if m.StatusesCountPresent != nil {
		nn15, err := m.StatusesCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn15
	}
	if m.FavouritesCountPresent != nil {
		nn16, err := m.FavouritesCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn16
	}
	if m.BiFollowersCountPresent != nil {
		nn17, err := m.BiFollowersCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn17
	}
	if m.PagefriendsCountPresent != nil {
		nn18, err := m.PagefriendsCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn18
	}
	if m.EmailPresent != nil {
		nn19, err := m.EmailPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn19
	}
	if m.QqPresent != nil {
		nn20, err := m.QqPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn20
	}
	if m.ClearGeoTimePresent != nil {
		nn21, err := m.ClearGeoTimePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn21
	}
	if m.LevelPresent != nil {
		nn22, err := m.LevelPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn22
	}
	if m.UserTypePresent != nil {
		nn23, err := m.UserTypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn23
	}
	if m.PrivacyPresent != nil {
		nn24, err := m.PrivacyPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn24
	}
	if m.LangPresent != nil {
		nn25, err := m.LangPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn25
	}
	if m.CoverImgPidPresent != nil {
		nn26, err := m.CoverImgPidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn26
	}
	if m.CoverImgCoordinatesPresent != nil {
		nn27, err := m.CoverImgCoordinatesPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn27
	}
	if m.UlevelPresent != nil {
		nn28, err := m.UlevelPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn28
	}
	if m.RegipPresent != nil {
		nn29, err := m.RegipPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn29
	}
	if m.RegsourcePresent != nil {
		nn30, err := m.RegsourcePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn30
	}
	if m.UpdateTimePresent != nil {
		nn31, err := m.UpdateTimePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn31
	}
	if m.StarPresent != nil {
		nn32, err := m.StarPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn32
	}
	if m.SignPresent != nil {
		nn33, err := m.SignPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn33
	}
	if m.RegionPresent != nil {
		nn34, err := m.RegionPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn34
	}
	if m.MbtypePresent != nil {
		nn35, err := m.MbtypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn35
	}
	if m.MbrankPresent != nil {
		nn36, err := m.MbrankPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn36
	}
	if m.HasMblockWordPresent != nil {
		nn37, err := m.HasMblockWordPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn37
	}
	if len(m.MbPrivileges) > 0 {
		dAtA39 := make([]byte, len(m.MbPrivileges)*10)
		var j38 int
		for _, num := range m.MbPrivileges {
			for num >= 1<<7 {
				dAtA39[j38] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j38++
			}
			dAtA39[j38] = uint8(num)
			j38++
		}
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1e
		i++
		i = encodeVarintUser(dAtA, i, uint64(j38))
		i += copy(dAtA[i:], dAtA39[:j38])
	}
	if m.AvatarHdPidPresent != nil {
		nn40, err := m.AvatarHdPidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn40
	}
	if m.AvatarHdCoordinatesPresent != nil {
		nn41, err := m.AvatarHdCoordinatesPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn41
	}
	if m.CoverImgPidMobilePresent != nil {
		nn42, err := m.CoverImgPidMobilePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn42
	}
	if m.CoverImgCoordinatesIphonePresent != nil {
		nn43, err := m.CoverImgCoordinatesIphonePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn43
	}
	if m.PtypePresent != nil {
		nn44, err := m.PtypePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn44
	}
	if m.MobilePresent != nil {
		nn45, err := m.MobilePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn45
	}
	if m.AbilityTagsPresent != nil {
		nn46, err := m.AbilityTagsPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn46
	}
	if m.BlockWordExpirePresent != nil {
		nn47, err := m.BlockWordExpirePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn47
	}
	if m.BlockAppExpirePresent != nil {
		nn48, err := m.BlockAppExpirePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn48
	}
	if m.VerifiedTradePresent != nil {
		nn49, err := m.VerifiedTradePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn49
	}
	if m.VerifiedReasonUrlPresent != nil {
		nn50, err := m.VerifiedReasonUrlPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn50
	}
	if m.VerifiedSourcePresent != nil {
		nn51, err := m.VerifiedSourcePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn51
	}
	if m.VerifiedSourceUrlPresent != nil {
		nn52, err := m.VerifiedSourceUrlPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn52
	}
	if m.UnicomFreePcPresent != nil {
		nn53, err := m.UnicomFreePcPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn53
	}
	if m.LocationRightsPresent != nil {
		nn54, err := m.LocationRightsPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn54
	}
	if m.MenuPresent != nil {
		nn55, err := m.MenuPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn55
	}
	if m.WorldcupGuessPresent != nil {
		nn56, err := m.WorldcupGuessPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn56
	}
	if m.DianpingsPresent != nil {
		nn57, err := m.DianpingsPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn57
	}
	if m.SignExtPresent != nil {
		nn58, err := m.SignExtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn58
	}
	if m.BadgeTopPresent != nil {
		nn59, err := m.BadgeTopPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn59
	}
	if m.VerifiedStatePresent != nil {
		nn60, err := m.VerifiedStatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn60
	}
	if m.CreditScorePresent != nil {
		nn61, err := m.CreditScorePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn61
	}
	if m.VerifiedLevelPresent != nil {
		nn62, err := m.VerifiedLevelPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn62
	}
	if m.AudioDetailPagePresent != nil {
		nn63, err := m.AudioDetailPagePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn63
	}
	if m.AudioPlayAddrPresent != nil {
		nn64, err := m.AudioPlayAddrPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn64
	}
	if m.VerifiedReasonModifiedPresent != nil {
		nn65, err := m.VerifiedReasonModifiedPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn65
	}
	if m.VerifiedContactNamePresent != nil {
		nn66, err := m.VerifiedContactNamePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn66
	}
	if m.VerifiedContactEmailPresent != nil {
		nn67, err := m.VerifiedContactEmailPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn67
	}
	if m.VerifiedContactMobilePresent != nil {
		nn68, err := m.VerifiedContactMobilePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn68
	}
	if m.UrankPresent != nil {
		nn69, err := m.UrankPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn69
	}
	if m.HasFrozenCountPresent != nil {
		nn70, err := m.HasFrozenCountPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn70
	}
	if m.ControllerSettingPresent != nil {
		nn71, err := m.ControllerSettingPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn71
	}
	if m.UserAbilityPresent != nil {
		nn72, err := m.UserAbilityPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn72
	}
	if m.CardidPresent != nil {
		nn73, err := m.CardidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn73
	}
	if m.AvatargjIdPresent != nil {
		nn74, err := m.AvatargjIdPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn74
	}
	if m.VerifiedTypeExtPresent != nil {
		nn75, err := m.VerifiedTypeExtPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn75
	}
	if m.InsecurityPresent != nil {
		nn76, err := m.InsecurityPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn76
	}
	if m.StorySegmentidPresent != nil {
		nn77, err := m.StorySegmentidPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn77
	}
	if m.AttitudeStylePresent != nil {
		nn78, err := m.AttitudeStylePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn78
	}
	if m.VclubMemberPresent != nil {
		nn79, err := m.VclubMemberPresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn79
	}
	if m.GenderStatePresent != nil {
		nn80, err := m.GenderStatePresent.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn80
	}
	return i, nil
}

func (m *SinaUser_Id) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Id))
	return i, nil
}
func (m *SinaUser_ScreenName) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.ScreenName)))
	i += copy(dAtA[i:], m.ScreenName)
	return i, nil
}
func (m *SinaUser_Domain) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x9a
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Domain)))
	i += copy(dAtA[i:], m.Domain)
	return i, nil
}
func (m *SinaUser_CreatedAt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.CreatedAt))
	return i, nil
}
func (m *SinaUser_Gender_) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Gender))
	return i, nil
}
func (m *SinaUser_Province) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Province)))
	i += copy(dAtA[i:], m.Province)
	return i, nil
}
func (m *SinaUser_City) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xda
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.City)))
	i += copy(dAtA[i:], m.City)
	return i, nil
}
func (m *SinaUser_Description) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe2
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Description)))
	i += copy(dAtA[i:], m.Description)
	return i, nil
}
func (m *SinaUser_Url) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Url)))
	i += copy(dAtA[i:], m.Url)
	return i, nil
}
func (m *SinaUser_AvatarVer) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf8
	i++
	dAtA[i] = 0x19
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.AvatarVer))
	return i, nil
}
func (m *SinaUser_Weihao) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x82
	i++
	dAtA[i] = 0x1a
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Weihao)))
	i += copy(dAtA[i:], m.Weihao)
	return i, nil
}
func (m *SinaUser_VerifiedReason) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc2
	i++
	dAtA[i] = 0x1a
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedReason)))
	i += copy(dAtA[i:], m.VerifiedReason)
	return i, nil
}
func (m *SinaUser_FollowersCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.FollowersCount))
	return i, nil
}
func (m *SinaUser_FriendsCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.FriendsCount))
	return i, nil
}
func (m *SinaUser_StatusesCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.StatusesCount))
	return i, nil
}
func (m *SinaUser_FavouritesCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.FavouritesCount))
	return i, nil
}
func (m *SinaUser_BiFollowersCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.BiFollowersCount))
	return i, nil
}
func (m *SinaUser_PagefriendsCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf0
	i++
	dAtA[i] = 0x1b
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.PagefriendsCount))
	return i, nil
}
func (m *SinaUser_Email) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Email)))
	i += copy(dAtA[i:], m.Email)
	return i, nil
}
func (m *SinaUser_Qq) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x9a
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Qq)))
	i += copy(dAtA[i:], m.Qq)
	return i, nil
}
func (m *SinaUser_ClearGeoTime) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.ClearGeoTime))
	return i, nil
}
func (m *SinaUser_Level) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Level))
	return i, nil
}
func (m *SinaUser_UserType) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.UserType))
	return i, nil
}
func (m *SinaUser_Privacy) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Privacy))
	return i, nil
}
func (m *SinaUser_Lang) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Lang))
	return i, nil
}
func (m *SinaUser_CoverImgPid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.CoverImgPid)))
	i += copy(dAtA[i:], m.CoverImgPid)
	return i, nil
}
func (m *SinaUser_CoverImgCoordinates) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xfa
	i++
	dAtA[i] = 0x1c
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.CoverImgCoordinates)))
	i += copy(dAtA[i:], m.CoverImgCoordinates)
	return i, nil
}
func (m *SinaUser_Ulevel) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Ulevel))
	return i, nil
}
func (m *SinaUser_Regip) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Regip))
	return i, nil
}
func (m *SinaUser_Regsource) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Regsource))
	return i, nil
}
func (m *SinaUser_UpdateTime) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.UpdateTime))
	return i, nil
}
func (m *SinaUser_Star) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa8
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Star))
	return i, nil
}
func (m *SinaUser_Sign) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb0
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Sign))
	return i, nil
}
func (m *SinaUser_Region) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x1d
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Region))
	return i, nil
}
func (m *SinaUser_Mbtype) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x80
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Mbtype))
	return i, nil
}
func (m *SinaUser_Mbrank) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Mbrank))
	return i, nil
}
func (m *SinaUser_HasMblockWord) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.HasMblockWord))
	return i, nil
}
func (m *SinaUser_AvatarHdPid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa2
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AvatarHdPid)))
	i += copy(dAtA[i:], m.AvatarHdPid)
	return i, nil
}
func (m *SinaUser_AvatarHdCoordinates) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xaa
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AvatarHdCoordinates)))
	i += copy(dAtA[i:], m.AvatarHdCoordinates)
	return i, nil
}
func (m *SinaUser_CoverImgPidMobile) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.CoverImgPidMobile)))
	i += copy(dAtA[i:], m.CoverImgPidMobile)
	return i, nil
}
func (m *SinaUser_CoverImgCoordinatesIphone) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xba
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.CoverImgCoordinatesIphone)))
	i += copy(dAtA[i:], m.CoverImgCoordinatesIphone)
	return i, nil
}
func (m *SinaUser_Ptype) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Ptype))
	return i, nil
}
func (m *SinaUser_Mobile) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xca
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Mobile)))
	i += copy(dAtA[i:], m.Mobile)
	return i, nil
}
func (m *SinaUser_AbilityTags) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AbilityTags)))
	i += copy(dAtA[i:], m.AbilityTags)
	return i, nil
}
func (m *SinaUser_BlockWordExpire) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.BlockWordExpire))
	return i, nil
}
func (m *SinaUser_BlockAppExpire) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.BlockAppExpire))
	return i, nil
}
func (m *SinaUser_VerifiedTrade) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedTrade)))
	i += copy(dAtA[i:], m.VerifiedTrade)
	return i, nil
}
func (m *SinaUser_VerifiedReasonUrl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedReasonUrl)))
	i += copy(dAtA[i:], m.VerifiedReasonUrl)
	return i, nil
}
func (m *SinaUser_VerifiedSource) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xfa
	i++
	dAtA[i] = 0x1e
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedSource)))
	i += copy(dAtA[i:], m.VerifiedSource)
	return i, nil
}
func (m *SinaUser_VerifiedSourceUrl) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x82
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedSourceUrl)))
	i += copy(dAtA[i:], m.VerifiedSourceUrl)
	return i, nil
}
func (m *SinaUser_UnicomFreePc) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x8a
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.UnicomFreePc)))
	i += copy(dAtA[i:], m.UnicomFreePc)
	return i, nil
}
func (m *SinaUser_LocationRights) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.LocationRights))
	return i, nil
}
func (m *SinaUser_Menu) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x9a
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Menu)))
	i += copy(dAtA[i:], m.Menu)
	return i, nil
}
func (m *SinaUser_WorldcupGuess) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.WorldcupGuess))
	return i, nil
}
func (m *SinaUser_Dianpings) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xaa
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Dianpings)))
	i += copy(dAtA[i:], m.Dianpings)
	return i, nil
}
func (m *SinaUser_SignExt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.SignExt)))
	i += copy(dAtA[i:], m.SignExt)
	return i, nil
}
func (m *SinaUser_BadgeTop) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xba
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.BadgeTop)))
	i += copy(dAtA[i:], m.BadgeTop)
	return i, nil
}
func (m *SinaUser_VerifiedState) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.VerifiedState))
	return i, nil
}
func (m *SinaUser_CreditScore) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.CreditScore))
	return i, nil
}
func (m *SinaUser_VerifiedLevel) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd0
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.VerifiedLevel))
	return i, nil
}
func (m *SinaUser_AudioDetailPage) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xda
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AudioDetailPage)))
	i += copy(dAtA[i:], m.AudioDetailPage)
	return i, nil
}
func (m *SinaUser_AudioPlayAddr) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe2
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AudioPlayAddr)))
	i += copy(dAtA[i:], m.AudioPlayAddr)
	return i, nil
}
func (m *SinaUser_VerifiedReasonModified) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedReasonModified)))
	i += copy(dAtA[i:], m.VerifiedReasonModified)
	return i, nil
}
func (m *SinaUser_VerifiedContactName) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedContactName)))
	i += copy(dAtA[i:], m.VerifiedContactName)
	return i, nil
}
func (m *SinaUser_VerifiedContactEmail) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xfa
	i++
	dAtA[i] = 0x1f
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedContactEmail)))
	i += copy(dAtA[i:], m.VerifiedContactEmail)
	return i, nil
}
func (m *SinaUser_VerifiedContactMobile) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x82
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.VerifiedContactMobile)))
	i += copy(dAtA[i:], m.VerifiedContactMobile)
	return i, nil
}
func (m *SinaUser_Urank) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Urank))
	return i, nil
}
func (m *SinaUser_HasFrozenCount) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x90
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.HasFrozenCount))
	return i, nil
}
func (m *SinaUser_ControllerSetting) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.ControllerSetting))
	return i, nil
}
func (m *SinaUser_UserAbility) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.UserAbility))
	return i, nil
}
func (m *SinaUser_Cardid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xaa
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.Cardid)))
	i += copy(dAtA[i:], m.Cardid)
	return i, nil
}
func (m *SinaUser_AvatargjId) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AvatargjId)))
	i += copy(dAtA[i:], m.AvatargjId)
	return i, nil
}
func (m *SinaUser_VerifiedTypeExt) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xb8
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64((uint32(m.VerifiedTypeExt)<<1)^uint32((m.VerifiedTypeExt>>31))))
	return i, nil
}
func (m *SinaUser_Insecurity) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc0
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.Insecurity))
	return i, nil
}
func (m *SinaUser_StorySegmentid) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xc8
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.StorySegmentid))
	return i, nil
}
func (m *SinaUser_AttitudeStyle) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(len(m.AttitudeStyle)))
	i += copy(dAtA[i:], m.AttitudeStyle)
	return i, nil
}
func (m *SinaUser_VclubMember) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xd8
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.VclubMember))
	return i, nil
}
func (m *SinaUser_GenderState) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe0
	i++
	dAtA[i] = 0x20
	i++
	i = encodeVarintUser(dAtA, i, uint64(m.GenderState))
	return i, nil
}
func encodeFixed64User(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32User(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintUser(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SinaUser) Size() (n int) {
	var l int
	_ = l
	if m.IdPresent != nil {
		n += m.IdPresent.Size()
	}
	if m.ScreenNamePresent != nil {
		n += m.ScreenNamePresent.Size()
	}
	if m.DomainPresent != nil {
		n += m.DomainPresent.Size()
	}
	if m.CreatedAtPresent != nil {
		n += m.CreatedAtPresent.Size()
	}
	if m.GenderPresent != nil {
		n += m.GenderPresent.Size()
	}
	if m.ProvincePresent != nil {
		n += m.ProvincePresent.Size()
	}
	if m.CityPresent != nil {
		n += m.CityPresent.Size()
	}
	if m.DescriptionPresent != nil {
		n += m.DescriptionPresent.Size()
	}
	if m.UrlPresent != nil {
		n += m.UrlPresent.Size()
	}
	if m.AvatarVerPresent != nil {
		n += m.AvatarVerPresent.Size()
	}
	if m.WeihaoPresent != nil {
		n += m.WeihaoPresent.Size()
	}
	if m.VerifiedReasonPresent != nil {
		n += m.VerifiedReasonPresent.Size()
	}
	if m.FollowersCountPresent != nil {
		n += m.FollowersCountPresent.Size()
	}
	if m.FriendsCountPresent != nil {
		n += m.FriendsCountPresent.Size()
	}
	if m.StatusesCountPresent != nil {
		n += m.StatusesCountPresent.Size()
	}
	if m.FavouritesCountPresent != nil {
		n += m.FavouritesCountPresent.Size()
	}
	if m.BiFollowersCountPresent != nil {
		n += m.BiFollowersCountPresent.Size()
	}
	if m.PagefriendsCountPresent != nil {
		n += m.PagefriendsCountPresent.Size()
	}
	if m.EmailPresent != nil {
		n += m.EmailPresent.Size()
	}
	if m.QqPresent != nil {
		n += m.QqPresent.Size()
	}
	if m.ClearGeoTimePresent != nil {
		n += m.ClearGeoTimePresent.Size()
	}
	if m.LevelPresent != nil {
		n += m.LevelPresent.Size()
	}
	if m.UserTypePresent != nil {
		n += m.UserTypePresent.Size()
	}
	if m.PrivacyPresent != nil {
		n += m.PrivacyPresent.Size()
	}
	if m.LangPresent != nil {
		n += m.LangPresent.Size()
	}
	if m.CoverImgPidPresent != nil {
		n += m.CoverImgPidPresent.Size()
	}
	if m.CoverImgCoordinatesPresent != nil {
		n += m.CoverImgCoordinatesPresent.Size()
	}
	if m.UlevelPresent != nil {
		n += m.UlevelPresent.Size()
	}
	if m.RegipPresent != nil {
		n += m.RegipPresent.Size()
	}
	if m.RegsourcePresent != nil {
		n += m.RegsourcePresent.Size()
	}
	if m.UpdateTimePresent != nil {
		n += m.UpdateTimePresent.Size()
	}
	if m.StarPresent != nil {
		n += m.StarPresent.Size()
	}
	if m.SignPresent != nil {
		n += m.SignPresent.Size()
	}
	if m.RegionPresent != nil {
		n += m.RegionPresent.Size()
	}
	if m.MbtypePresent != nil {
		n += m.MbtypePresent.Size()
	}
	if m.MbrankPresent != nil {
		n += m.MbrankPresent.Size()
	}
	if m.HasMblockWordPresent != nil {
		n += m.HasMblockWordPresent.Size()
	}
	if len(m.MbPrivileges) > 0 {
		l = 0
		for _, e := range m.MbPrivileges {
			l += sovUser(uint64(e))
		}
		n += 2 + sovUser(uint64(l)) + l
	}
	if m.AvatarHdPidPresent != nil {
		n += m.AvatarHdPidPresent.Size()
	}
	if m.AvatarHdCoordinatesPresent != nil {
		n += m.AvatarHdCoordinatesPresent.Size()
	}
	if m.CoverImgPidMobilePresent != nil {
		n += m.CoverImgPidMobilePresent.Size()
	}
	if m.CoverImgCoordinatesIphonePresent != nil {
		n += m.CoverImgCoordinatesIphonePresent.Size()
	}
	if m.PtypePresent != nil {
		n += m.PtypePresent.Size()
	}
	if m.MobilePresent != nil {
		n += m.MobilePresent.Size()
	}
	if m.AbilityTagsPresent != nil {
		n += m.AbilityTagsPresent.Size()
	}
	if m.BlockWordExpirePresent != nil {
		n += m.BlockWordExpirePresent.Size()
	}
	if m.BlockAppExpirePresent != nil {
		n += m.BlockAppExpirePresent.Size()
	}
	if m.VerifiedTradePresent != nil {
		n += m.VerifiedTradePresent.Size()
	}
	if m.VerifiedReasonUrlPresent != nil {
		n += m.VerifiedReasonUrlPresent.Size()
	}
	if m.VerifiedSourcePresent != nil {
		n += m.VerifiedSourcePresent.Size()
	}
	if m.VerifiedSourceUrlPresent != nil {
		n += m.VerifiedSourceUrlPresent.Size()
	}
	if m.UnicomFreePcPresent != nil {
		n += m.UnicomFreePcPresent.Size()
	}
	if m.LocationRightsPresent != nil {
		n += m.LocationRightsPresent.Size()
	}
	if m.MenuPresent != nil {
		n += m.MenuPresent.Size()
	}
	if m.WorldcupGuessPresent != nil {
		n += m.WorldcupGuessPresent.Size()
	}
	if m.DianpingsPresent != nil {
		n += m.DianpingsPresent.Size()
	}
	if m.SignExtPresent != nil {
		n += m.SignExtPresent.Size()
	}
	if m.BadgeTopPresent != nil {
		n += m.BadgeTopPresent.Size()
	}
	if m.VerifiedStatePresent != nil {
		n += m.VerifiedStatePresent.Size()
	}
	if m.CreditScorePresent != nil {
		n += m.CreditScorePresent.Size()
	}
	if m.VerifiedLevelPresent != nil {
		n += m.VerifiedLevelPresent.Size()
	}
	if m.AudioDetailPagePresent != nil {
		n += m.AudioDetailPagePresent.Size()
	}
	if m.AudioPlayAddrPresent != nil {
		n += m.AudioPlayAddrPresent.Size()
	}
	if m.VerifiedReasonModifiedPresent != nil {
		n += m.VerifiedReasonModifiedPresent.Size()
	}
	if m.VerifiedContactNamePresent != nil {
		n += m.VerifiedContactNamePresent.Size()
	}
	if m.VerifiedContactEmailPresent != nil {
		n += m.VerifiedContactEmailPresent.Size()
	}
	if m.VerifiedContactMobilePresent != nil {
		n += m.VerifiedContactMobilePresent.Size()
	}
	if m.UrankPresent != nil {
		n += m.UrankPresent.Size()
	}
	if m.HasFrozenCountPresent != nil {
		n += m.HasFrozenCountPresent.Size()
	}
	if m.ControllerSettingPresent != nil {
		n += m.ControllerSettingPresent.Size()
	}
	if m.UserAbilityPresent != nil {
		n += m.UserAbilityPresent.Size()
	}
	if m.CardidPresent != nil {
		n += m.CardidPresent.Size()
	}
	if m.AvatargjIdPresent != nil {
		n += m.AvatargjIdPresent.Size()
	}
	if m.VerifiedTypeExtPresent != nil {
		n += m.VerifiedTypeExtPresent.Size()
	}
	if m.InsecurityPresent != nil {
		n += m.InsecurityPresent.Size()
	}
	if m.StorySegmentidPresent != nil {
		n += m.StorySegmentidPresent.Size()
	}
	if m.AttitudeStylePresent != nil {
		n += m.AttitudeStylePresent.Size()
	}
	if m.VclubMemberPresent != nil {
		n += m.VclubMemberPresent.Size()
	}
	if m.GenderStatePresent != nil {
		n += m.GenderStatePresent.Size()
	}
	return n
}

func (m *SinaUser_Id) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Id))
	return n
}
func (m *SinaUser_ScreenName) Size() (n int) {
	var l int
	_ = l
	l = len(m.ScreenName)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Domain) Size() (n int) {
	var l int
	_ = l
	l = len(m.Domain)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_CreatedAt) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.CreatedAt))
	return n
}
func (m *SinaUser_Gender_) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Gender))
	return n
}
func (m *SinaUser_Province) Size() (n int) {
	var l int
	_ = l
	l = len(m.Province)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_City) Size() (n int) {
	var l int
	_ = l
	l = len(m.City)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Description) Size() (n int) {
	var l int
	_ = l
	l = len(m.Description)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Url) Size() (n int) {
	var l int
	_ = l
	l = len(m.Url)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_AvatarVer) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.AvatarVer))
	return n
}
func (m *SinaUser_Weihao) Size() (n int) {
	var l int
	_ = l
	l = len(m.Weihao)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedReason) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedReason)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_FollowersCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.FollowersCount))
	return n
}
func (m *SinaUser_FriendsCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.FriendsCount))
	return n
}
func (m *SinaUser_StatusesCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.StatusesCount))
	return n
}
func (m *SinaUser_FavouritesCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.FavouritesCount))
	return n
}
func (m *SinaUser_BiFollowersCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.BiFollowersCount))
	return n
}
func (m *SinaUser_PagefriendsCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.PagefriendsCount))
	return n
}
func (m *SinaUser_Email) Size() (n int) {
	var l int
	_ = l
	l = len(m.Email)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Qq) Size() (n int) {
	var l int
	_ = l
	l = len(m.Qq)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_ClearGeoTime) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.ClearGeoTime))
	return n
}
func (m *SinaUser_Level) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Level))
	return n
}
func (m *SinaUser_UserType) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.UserType))
	return n
}
func (m *SinaUser_Privacy) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Privacy))
	return n
}
func (m *SinaUser_Lang) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Lang))
	return n
}
func (m *SinaUser_CoverImgPid) Size() (n int) {
	var l int
	_ = l
	l = len(m.CoverImgPid)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_CoverImgCoordinates) Size() (n int) {
	var l int
	_ = l
	l = len(m.CoverImgCoordinates)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Ulevel) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Ulevel))
	return n
}
func (m *SinaUser_Regip) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Regip))
	return n
}
func (m *SinaUser_Regsource) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Regsource))
	return n
}
func (m *SinaUser_UpdateTime) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.UpdateTime))
	return n
}
func (m *SinaUser_Star) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Star))
	return n
}
func (m *SinaUser_Sign) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Sign))
	return n
}
func (m *SinaUser_Region) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Region))
	return n
}
func (m *SinaUser_Mbtype) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Mbtype))
	return n
}
func (m *SinaUser_Mbrank) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Mbrank))
	return n
}
func (m *SinaUser_HasMblockWord) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.HasMblockWord))
	return n
}
func (m *SinaUser_AvatarHdPid) Size() (n int) {
	var l int
	_ = l
	l = len(m.AvatarHdPid)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_AvatarHdCoordinates) Size() (n int) {
	var l int
	_ = l
	l = len(m.AvatarHdCoordinates)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_CoverImgPidMobile) Size() (n int) {
	var l int
	_ = l
	l = len(m.CoverImgPidMobile)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_CoverImgCoordinatesIphone) Size() (n int) {
	var l int
	_ = l
	l = len(m.CoverImgCoordinatesIphone)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Ptype) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Ptype))
	return n
}
func (m *SinaUser_Mobile) Size() (n int) {
	var l int
	_ = l
	l = len(m.Mobile)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_AbilityTags) Size() (n int) {
	var l int
	_ = l
	l = len(m.AbilityTags)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_BlockWordExpire) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.BlockWordExpire))
	return n
}
func (m *SinaUser_BlockAppExpire) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.BlockAppExpire))
	return n
}
func (m *SinaUser_VerifiedTrade) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedTrade)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedReasonUrl) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedReasonUrl)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedSource) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedSource)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedSourceUrl) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedSourceUrl)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_UnicomFreePc) Size() (n int) {
	var l int
	_ = l
	l = len(m.UnicomFreePc)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_LocationRights) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.LocationRights))
	return n
}
func (m *SinaUser_Menu) Size() (n int) {
	var l int
	_ = l
	l = len(m.Menu)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_WorldcupGuess) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.WorldcupGuess))
	return n
}
func (m *SinaUser_Dianpings) Size() (n int) {
	var l int
	_ = l
	l = len(m.Dianpings)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_SignExt) Size() (n int) {
	var l int
	_ = l
	l = len(m.SignExt)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_BadgeTop) Size() (n int) {
	var l int
	_ = l
	l = len(m.BadgeTop)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedState) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.VerifiedState))
	return n
}
func (m *SinaUser_CreditScore) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.CreditScore))
	return n
}
func (m *SinaUser_VerifiedLevel) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.VerifiedLevel))
	return n
}
func (m *SinaUser_AudioDetailPage) Size() (n int) {
	var l int
	_ = l
	l = len(m.AudioDetailPage)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_AudioPlayAddr) Size() (n int) {
	var l int
	_ = l
	l = len(m.AudioPlayAddr)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedReasonModified) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedReasonModified)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedContactName) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedContactName)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedContactEmail) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedContactEmail)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedContactMobile) Size() (n int) {
	var l int
	_ = l
	l = len(m.VerifiedContactMobile)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_Urank) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Urank))
	return n
}
func (m *SinaUser_HasFrozenCount) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.HasFrozenCount))
	return n
}
func (m *SinaUser_ControllerSetting) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.ControllerSetting))
	return n
}
func (m *SinaUser_UserAbility) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.UserAbility))
	return n
}
func (m *SinaUser_Cardid) Size() (n int) {
	var l int
	_ = l
	l = len(m.Cardid)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_AvatargjId) Size() (n int) {
	var l int
	_ = l
	l = len(m.AvatargjId)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VerifiedTypeExt) Size() (n int) {
	var l int
	_ = l
	n += 2 + sozUser(uint64(m.VerifiedTypeExt))
	return n
}
func (m *SinaUser_Insecurity) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.Insecurity))
	return n
}
func (m *SinaUser_StorySegmentid) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.StorySegmentid))
	return n
}
func (m *SinaUser_AttitudeStyle) Size() (n int) {
	var l int
	_ = l
	l = len(m.AttitudeStyle)
	n += 2 + l + sovUser(uint64(l))
	return n
}
func (m *SinaUser_VclubMember) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.VclubMember))
	return n
}
func (m *SinaUser_GenderState) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovUser(uint64(m.GenderState))
	return n
}

func sovUser(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozUser(x uint64) (n int) {
	return sovUser(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SinaUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SinaUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SinaUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 401:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdPresent = &SinaUser_Id{v}
		case 402:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScreenName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScreenNamePresent = &SinaUser_ScreenName{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 403:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DomainPresent = &SinaUser_Domain{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 404:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreatedAtPresent = &SinaUser_CreatedAt{v}
		case 405:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			var v SinaUser_Gender
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (SinaUser_Gender(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GenderPresent = &SinaUser_Gender_{v}
		case 410:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Province", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProvincePresent = &SinaUser_Province{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 411:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CityPresent = &SinaUser_City{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 412:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DescriptionPresent = &SinaUser_Description{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 413:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlPresent = &SinaUser_Url{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 415:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarVer", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AvatarVerPresent = &SinaUser_AvatarVer{v}
		case 416:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weihao", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WeihaoPresent = &SinaUser_Weihao{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 424:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedReason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedReasonPresent = &SinaUser_VerifiedReason{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 441:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowersCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FollowersCountPresent = &SinaUser_FollowersCount{v}
		case 442:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FriendsCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FriendsCountPresent = &SinaUser_FriendsCount{v}
		case 443:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusesCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StatusesCountPresent = &SinaUser_StatusesCount{v}
		case 444:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FavouritesCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FavouritesCountPresent = &SinaUser_FavouritesCount{v}
		case 445:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BiFollowersCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BiFollowersCountPresent = &SinaUser_BiFollowersCount{v}
		case 446:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PagefriendsCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PagefriendsCountPresent = &SinaUser_PagefriendsCount{v}
		case 450:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailPresent = &SinaUser_Email{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 451:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qq", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.QqPresent = &SinaUser_Qq{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 457:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearGeoTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearGeoTimePresent = &SinaUser_ClearGeoTime{v}
		case 458:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LevelPresent = &SinaUser_Level{v}
		case 459:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserTypePresent = &SinaUser_UserType{v}
		case 460:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Privacy", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PrivacyPresent = &SinaUser_Privacy{v}
		case 461:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LangPresent = &SinaUser_Lang{v}
		case 462:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImgPid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImgPidPresent = &SinaUser_CoverImgPid{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 463:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImgCoordinates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImgCoordinatesPresent = &SinaUser_CoverImgCoordinates{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 465:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ulevel", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UlevelPresent = &SinaUser_Ulevel{v}
		case 466:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Regip", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RegipPresent = &SinaUser_Regip{v}
		case 467:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Regsource", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RegsourcePresent = &SinaUser_Regsource{v}
		case 468:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpdateTimePresent = &SinaUser_UpdateTime{v}
		case 469:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Star", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StarPresent = &SinaUser_Star{v}
		case 470:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sign", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SignPresent = &SinaUser_Sign{v}
		case 471:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RegionPresent = &SinaUser_Region{v}
		case 480:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mbtype", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MbtypePresent = &SinaUser_Mbtype{v}
		case 481:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mbrank", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MbrankPresent = &SinaUser_Mbrank{v}
		case 482:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMblockWord", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasMblockWordPresent = &SinaUser_HasMblockWord{v}
		case 483:
			if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowUser
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthUser
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowUser
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MbPrivileges = append(m.MbPrivileges, v)
				}
			} else if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowUser
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MbPrivileges = append(m.MbPrivileges, v)
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MbPrivileges", wireType)
			}
		case 484:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarHdPid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarHdPidPresent = &SinaUser_AvatarHdPid{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 485:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarHdCoordinates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarHdCoordinatesPresent = &SinaUser_AvatarHdCoordinates{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 486:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImgPidMobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImgPidMobilePresent = &SinaUser_CoverImgPidMobile{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 487:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverImgCoordinatesIphone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverImgCoordinatesIphonePresent = &SinaUser_CoverImgCoordinatesIphone{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 488:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ptype", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PtypePresent = &SinaUser_Ptype{v}
		case 489:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MobilePresent = &SinaUser_Mobile{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 490:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AbilityTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AbilityTagsPresent = &SinaUser_AbilityTags{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 491:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockWordExpire", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BlockWordExpirePresent = &SinaUser_BlockWordExpire{v}
		case 492:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockAppExpire", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BlockAppExpirePresent = &SinaUser_BlockAppExpire{v}
		case 493:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedTrade", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedTradePresent = &SinaUser_VerifiedTrade{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 494:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedReasonUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedReasonUrlPresent = &SinaUser_VerifiedReasonUrl{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 495:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedSourcePresent = &SinaUser_VerifiedSource{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 496:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedSourceUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedSourceUrlPresent = &SinaUser_VerifiedSourceUrl{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 497:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnicomFreePc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UnicomFreePcPresent = &SinaUser_UnicomFreePc{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 498:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationRights", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocationRightsPresent = &SinaUser_LocationRights{v}
		case 499:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Menu", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuPresent = &SinaUser_Menu{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 500:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorldcupGuess", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WorldcupGuessPresent = &SinaUser_WorldcupGuess{v}
		case 501:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dianpings", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DianpingsPresent = &SinaUser_Dianpings{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 502:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignExt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SignExtPresent = &SinaUser_SignExt{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 503:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadgeTop", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BadgeTopPresent = &SinaUser_BadgeTop{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 504:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedState", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VerifiedStatePresent = &SinaUser_VerifiedState{v}
		case 505:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreditScore", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CreditScorePresent = &SinaUser_CreditScore{v}
		case 506:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedLevel", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VerifiedLevelPresent = &SinaUser_VerifiedLevel{v}
		case 507:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudioDetailPage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudioDetailPagePresent = &SinaUser_AudioDetailPage{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 508:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudioPlayAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudioPlayAddrPresent = &SinaUser_AudioPlayAddr{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 509:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedReasonModified", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedReasonModifiedPresent = &SinaUser_VerifiedReasonModified{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 510:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedContactName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedContactNamePresent = &SinaUser_VerifiedContactName{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 511:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedContactEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedContactEmailPresent = &SinaUser_VerifiedContactEmail{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 512:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedContactMobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiedContactMobilePresent = &SinaUser_VerifiedContactMobile{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 513:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Urank", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UrankPresent = &SinaUser_Urank{v}
		case 514:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasFrozenCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasFrozenCountPresent = &SinaUser_HasFrozenCount{v}
		case 515:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerSetting", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ControllerSettingPresent = &SinaUser_ControllerSetting{v}
		case 516:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAbility", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserAbilityPresent = &SinaUser_UserAbility{v}
		case 517:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cardid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardidPresent = &SinaUser_Cardid{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 518:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatargjId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatargjIdPresent = &SinaUser_AvatargjId{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 519:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiedTypeExt", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = int32((uint32(v) >> 1) ^ uint32(((v&1)<<31)>>31))
			m.VerifiedTypeExtPresent = &SinaUser_VerifiedTypeExt{v}
		case 520:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Insecurity", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InsecurityPresent = &SinaUser_Insecurity{v}
		case 521:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorySegmentid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StorySegmentidPresent = &SinaUser_StorySegmentid{v}
		case 522:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttitudeStyle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AttitudeStylePresent = &SinaUser_AttitudeStyle{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 523:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VclubMember", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VclubMemberPresent = &SinaUser_VclubMember{v}
		case 524:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenderState", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GenderStatePresent = &SinaUser_GenderState{v}
		default:
			iNdEx = preIndex
			skippy, err := skipUser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthUser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthUser
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowUser
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipUser(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthUser = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUser   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("user.proto", fileDescriptorUser) }

var fileDescriptorUser = []byte{
	// 2061 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x58, 0x47, 0x73, 0xdc, 0xc8,
	0x15, 0x16, 0x25, 0x8a, 0x22, 0xdf, 0x04, 0x72, 0x40, 0x91, 0x6a, 0x2a, 0x50, 0x94, 0xb4, 0x92,
	0xb8, 0x41, 0xdc, 0xd5, 0x06, 0xaf, 0xe5, 0x75, 0xa2, 0xb4, 0xa4, 0x28, 0x5b, 0x74, 0xb1, 0x1e,
	0xb9, 0xde, 0x23, 0xaa, 0x07, 0x68, 0x0e, 0xdb, 0x8b, 0x01, 0xc0, 0x06, 0x40, 0x6a, 0x7c, 0x72,
	0xce, 0x17, 0xa7, 0x2a, 0x97, 0x43, 0xd9, 0x47, 0x57, 0xf9, 0x17, 0x38, 0x1e, 0xec, 0x8b, 0x73,
	0x0e, 0xd7, 0xb5, 0xd6, 0x39, 0xe7, 0x9c, 0xaa, 0xfb, 0x01, 0x98, 0xc6, 0x70, 0xd6, 0x37, 0xf6,
	0xf7, 0x7d, 0x1d, 0xf0, 0xfa, 0xf5, 0x7b, 0x1f, 0x07, 0x20, 0x4b, 0x84, 0x5a, 0x8a, 0x55, 0x94,
	0x46, 0xce, 0xd1, 0x7d, 0x21, 0xdb, 0xd1, 0xf9, 0x4f, 0x5c, 0x82, 0xf1, 0x4d, 0x19, 0xf2, 0xa7,
	0x12, 0xa1, 0x9c, 0x16, 0x1c, 0x96, 0x3e, 0x7b, 0xf7, 0x91, 0x85, 0x91, 0xc5, 0xd1, 0xb5, 0x43,
	0x78, 0x58, 0xfa, 0xce, 0x79, 0xa8, 0x25, 0x9e, 0x12, 0x22, 0x74, 0x43, 0xde, 0x15, 0xec, 0x3d,
	0x9a, 0x9b, 0x58, 0x1b, 0x41, 0x20, 0xf4, 0x55, 0xbc, 0x2b, 0x9c, 0x39, 0x18, 0xf3, 0xa3, 0x2e,
	0x97, 0x21, 0x7b, 0x2f, 0xd1, 0x87, 0x31, 0x07, 0x9c, 0x05, 0x00, 0x4f, 0x09, 0x9e, 0x0a, 0xdf,
	0xe5, 0x29, 0x7b, 0x1f, 0xad, 0x7c, 0x04, 0x27, 0x72, 0x70, 0x39, 0x75, 0xae, 0xc2, 0x58, 0x47,
	0x84, 0xbe, 0x50, 0xec, 0xfd, 0x9a, 0x6d, 0x3e, 0x3c, 0xbb, 0x64, 0x4e, 0xb6, 0x54, 0x9c, 0x6a,
	0xe9, 0xa6, 0xa1, 0xd7, 0x46, 0x31, 0x17, 0x3a, 0x67, 0x60, 0x3c, 0x56, 0xd1, 0x9e, 0x0c, 0x3d,
	0xc1, 0x3e, 0x48, 0x3b, 0x1e, 0xc5, 0x12, 0x72, 0x66, 0x60, 0xd4, 0x93, 0x69, 0x8f, 0x7d, 0x88,
	0xa8, 0x31, 0x34, 0x43, 0xe7, 0x02, 0xd4, 0x7c, 0x91, 0x78, 0x4a, 0xc6, 0xa9, 0x8c, 0x42, 0xf6,
	0x61, 0x62, 0x8f, 0xa1, 0x8d, 0x3a, 0xd3, 0x70, 0x24, 0x53, 0x01, 0xfb, 0x08, 0x91, 0xe3, 0xa8,
	0x47, 0xfa, 0x23, 0xf8, 0x1e, 0x4f, 0xb9, 0x72, 0xf7, 0x84, 0x62, 0x1f, 0xa5, 0x8f, 0x98, 0xc0,
	0x09, 0x02, 0x5f, 0x2d, 0x94, 0x8e, 0xc0, 0xbe, 0x90, 0x3b, 0x3c, 0x62, 0x1f, 0xa3, 0x99, 0x80,
	0x39, 0xe0, 0xdc, 0x07, 0x93, 0x7b, 0x42, 0xc9, 0x6d, 0x29, 0x7c, 0x57, 0x09, 0x9e, 0x44, 0x21,
	0xfb, 0x38, 0x69, 0x6a, 0xd8, 0x2c, 0x18, 0x34, 0x84, 0xd6, 0x6e, 0x47, 0x41, 0x10, 0xed, 0x0b,
	0x95, 0xb8, 0x5e, 0x94, 0x85, 0x29, 0xfb, 0xa4, 0xd6, 0x36, 0xd6, 0xea, 0xd8, 0x2c, 0x99, 0x1b,
	0x9a, 0x70, 0x2e, 0x41, 0x63, 0x5b, 0x49, 0x11, 0xfa, 0x85, 0xf2, 0x53, 0xa4, 0x6c, 0x60, 0x3d,
	0xc7, 0x49, 0xb7, 0x08, 0xcd, 0x24, 0xe5, 0x69, 0x96, 0x88, 0x42, 0xf8, 0x69, 0x12, 0x36, 0xb1,
	0x51, 0x10, 0xa4, 0x7c, 0x00, 0xa6, 0xb6, 0xf9, 0x5e, 0x94, 0x29, 0x99, 0x96, 0xda, 0xcf, 0x90,
	0x76, 0x12, 0x27, 0xfb, 0x14, 0xa9, 0x1f, 0x04, 0xa7, 0x2d, 0xdd, 0xc1, 0xe3, 0x7e, 0x96, 0xf4,
	0x53, 0x38, 0xd5, 0x96, 0xab, 0xd5, 0x03, 0x2f, 0x41, 0x2b, 0xe6, 0x1d, 0x51, 0x3d, 0xf4, 0xe7,
	0x48, 0xff, 0x22, 0x9c, 0xb2, 0x38, 0xd2, 0x9f, 0x80, 0xa3, 0xa2, 0xcb, 0x65, 0xc0, 0x3e, 0x4f,
	0xe1, 0x6a, 0x21, 0x8d, 0x75, 0x96, 0xee, 0xee, 0xb2, 0x2f, 0x10, 0xea, 0xe0, 0xe1, 0xdd, 0x5d,
	0xe7, 0x32, 0x34, 0xbd, 0x40, 0x70, 0xe5, 0x76, 0x44, 0xe4, 0xa6, 0xb2, 0x2b, 0xd8, 0x97, 0xe8,
	0x96, 0xa6, 0xb1, 0x6e, 0x88, 0x9b, 0x22, 0xda, 0x92, 0x5d, 0xa1, 0x17, 0x0d, 0xc4, 0x9e, 0x08,
	0xd8, 0x97, 0x69, 0xe3, 0xe3, 0x48, 0x63, 0x67, 0x1e, 0x26, 0xf4, 0xe3, 0x70, 0xd3, 0x5e, 0x2c,
	0xd8, 0x57, 0x88, 0x9c, 0xc1, 0x71, 0x8d, 0x6d, 0xf5, 0x62, 0xe1, 0x9c, 0x82, 0x63, 0xb1, 0x92,
	0x7b, 0xdc, 0xeb, 0xb1, 0xaf, 0xd2, 0xd2, 0xb3, 0x58, 0x20, 0x3a, 0xe3, 0x02, 0x1e, 0x76, 0xd8,
	0xd7, 0x68, 0xde, 0x09, 0x34, 0x43, 0xe7, 0x1e, 0xa8, 0x7b, 0xd1, 0x9e, 0x50, 0xb7, 0xba, 0x1d,
	0x37, 0x96, 0x3e, 0xfb, 0x3a, 0x1d, 0x99, 0x61, 0xad, 0x80, 0x37, 0xa4, 0xef, 0x3c, 0x0a, 0xc7,
	0x4b, 0x95, 0x17, 0x45, 0xca, 0x97, 0x21, 0x4f, 0x45, 0xc2, 0xbe, 0x41, 0xea, 0x39, 0x9c, 0x2e,
	0xe8, 0x1b, 0x7d, 0x56, 0x67, 0x5c, 0x46, 0x5f, 0xf2, 0x2d, 0x3a, 0xce, 0x49, 0xcc, 0x01, 0xfd,
	0x8d, 0x4a, 0x74, 0x64, 0xcc, 0xbe, 0x4d, 0xcc, 0x29, 0xa4, 0xb1, 0x73, 0x16, 0x26, 0x94, 0xe8,
	0x24, 0x51, 0xa6, 0x3c, 0xc1, 0xbe, 0x43, 0xe4, 0x69, 0xec, 0x63, 0xfa, 0xb1, 0x67, 0xb1, 0xcf,
	0x53, 0x41, 0x31, 0xfc, 0x2e, 0x49, 0xce, 0x20, 0x10, 0x6a, 0x22, 0x38, 0x03, 0xa3, 0x49, 0xca,
	0x15, 0xfb, 0x1e, 0x91, 0xf3, 0x68, 0x86, 0x06, 0x96, 0x9d, 0x90, 0x7d, 0x9f, 0xe0, 0xb3, 0x68,
	0x86, 0xfa, 0x98, 0x7a, 0xef, 0x28, 0x64, 0x3f, 0x20, 0x62, 0x01, 0x73, 0x40, 0x53, 0xdd, 0xb6,
	0x09, 0xf7, 0xb3, 0x14, 0xb6, 0x73, 0x98, 0x03, 0x44, 0x29, 0x1e, 0x3e, 0xc3, 0x7e, 0x48, 0xd4,
	0x79, 0xcc, 0x01, 0xe7, 0x5e, 0x98, 0xdc, 0xe1, 0x89, 0xdb, 0x6d, 0x07, 0x91, 0xf7, 0x8c, 0xbb,
	0x1f, 0x29, 0x9f, 0xdd, 0x25, 0xcd, 0x05, 0x6c, 0xec, 0xf0, 0x64, 0xdd, 0x10, 0x4f, 0x47, 0xca,
	0x77, 0x16, 0xa1, 0xd1, 0x6d, 0xbb, 0xfa, 0x8e, 0x64, 0x20, 0x3a, 0x22, 0x61, 0xcf, 0x1d, 0x59,
	0x38, 0xb2, 0x38, 0x7a, 0xfd, 0xf0, 0xd4, 0x21, 0xac, 0x77, 0xdb, 0x1b, 0x25, 0xe1, 0x5c, 0x84,
	0x46, 0xfe, 0xc0, 0x77, 0x7c, 0x73, 0x53, 0x3f, 0xa2, 0xd8, 0xdf, 0x83, 0x35, 0xc2, 0xd7, 0x7c,
	0x7d, 0x53, 0x8f, 0xc1, 0x4c, 0x5f, 0x66, 0x5f, 0xd5, 0x8f, 0x49, 0x7e, 0x11, 0xa7, 0x0b, 0xb9,
	0x7d, 0x55, 0x57, 0x61, 0xda, 0x4e, 0x03, 0xb7, 0x1b, 0xb5, 0x65, 0x20, 0xd8, 0x4f, 0x68, 0xd2,
	0x25, 0x6c, 0x59, 0xd9, 0xb0, 0x6e, 0x38, 0x67, 0x19, 0x4e, 0x0d, 0xcb, 0x09, 0x57, 0xc6, 0x3b,
	0x51, 0x28, 0xd8, 0x4f, 0x69, 0xea, 0x65, 0x9c, 0x1b, 0x92, 0x1a, 0xb7, 0x8c, 0x46, 0x67, 0x41,
	0x6c, 0xa2, 0xfb, 0x33, 0x0a, 0xcf, 0x22, 0xd2, 0xd8, 0x04, 0x97, 0x4e, 0xf0, 0x73, 0x5a, 0xe6,
	0x5e, 0xcc, 0x01, 0x9d, 0xb0, 0xbc, 0x2d, 0x03, 0x99, 0xf6, 0xdc, 0x94, 0x77, 0x12, 0xf6, 0x0b,
	0x12, 0xdc, 0x87, 0xb5, 0x1c, 0xde, 0xe2, 0x9d, 0xc4, 0xb9, 0x02, 0xad, 0x7e, 0xf4, 0x5d, 0x71,
	0x27, 0x96, 0x4a, 0xb0, 0x5f, 0xd2, 0xf5, 0xde, 0x8f, 0x93, 0xe5, 0x05, 0xac, 0x18, 0xc6, 0xb9,
	0x1f, 0xa6, 0x48, 0xce, 0xe3, 0xb8, 0x50, 0xff, 0x8a, 0xd4, 0x0f, 0x60, 0xd3, 0x50, 0xcb, 0x71,
	0x9c, 0x8b, 0x17, 0xa1, 0xac, 0x89, 0x6e, 0xaa, 0xb8, 0x2f, 0xd8, 0xaf, 0xe9, 0x0c, 0x57, 0xb0,
	0x51, 0x10, 0x5b, 0x1a, 0xd7, 0x51, 0x1d, 0xa8, 0xab, 0xae, 0xae, 0xdc, 0xbf, 0x21, 0xf9, 0x12,
	0xb6, 0xaa, 0xb5, 0xf5, 0x29, 0x15, 0x54, 0x4a, 0x71, 0xfe, 0x0a, 0x7e, 0x4b, 0xf2, 0x07, 0xfb,
	0xa5, 0x78, 0x93, 0x9e, 0x82, 0xbd, 0x3c, 0x69, 0xcd, 0xf2, 0xbf, 0x23, 0xfd, 0x43, 0xfd, 0xe5,
	0x49, 0xaf, 0x97, 0xbf, 0x0c, 0xcd, 0x2c, 0x94, 0x5e, 0xd4, 0x75, 0xb7, 0x95, 0x10, 0x6e, 0xec,
	0xb1, 0xdf, 0x93, 0xfa, 0x2a, 0xd6, 0x89, 0x58, 0x55, 0x42, 0x6c, 0x78, 0xfa, 0x1c, 0x41, 0xe4,
	0x71, 0xdd, 0x70, 0x5c, 0x25, 0x3b, 0x3b, 0x69, 0xc2, 0xfe, 0x40, 0x97, 0xf4, 0x30, 0x36, 0x0b,
	0x06, 0x0d, 0xa1, 0xdf, 0x55, 0x57, 0x84, 0x19, 0xfb, 0x23, 0x2d, 0xf5, 0x08, 0x9a, 0xa1, 0x8e,
	0xd3, 0x7e, 0xa4, 0x02, 0xdf, 0xcb, 0x62, 0xb7, 0x93, 0x89, 0x24, 0x61, 0x7f, 0xa2, 0x15, 0x1e,
	0xc5, 0x46, 0x41, 0xdc, 0xd4, 0xb8, 0x7e, 0xf4, 0xbe, 0xe4, 0x61, 0x2c, 0xc3, 0x4e, 0xc2, 0xfe,
	0x4c, 0xab, 0x3c, 0x86, 0x7d, 0xcc, 0x39, 0x0d, 0xe3, 0xfa, 0xa9, 0xba, 0xe2, 0x4e, 0xca, 0xfe,
	0x42, 0xfc, 0x0b, 0xf0, 0x98, 0x86, 0x56, 0xee, 0xa4, 0xba, 0x2e, 0xb6, 0xb9, 0xdf, 0x11, 0x6e,
	0x1a, 0xc5, 0xec, 0xaf, 0x44, 0x3f, 0x8e, 0xe3, 0x06, 0xdb, 0x8a, 0xe2, 0xca, 0x85, 0xe9, 0x76,
	0x22, 0xd8, 0xdf, 0xe8, 0x20, 0x2f, 0xec, 0x5f, 0xd8, 0xa6, 0xc6, 0x4d, 0x35, 0x54, 0xc2, 0x97,
	0xa9, 0x9b, 0x78, 0x91, 0x12, 0xec, 0xef, 0xa4, 0xbb, 0x86, 0x35, 0x82, 0x37, 0x35, 0x5a, 0x59,
	0x8f, 0xea, 0xdb, 0x3f, 0x48, 0xf7, 0x44, 0x7f, 0xbd, 0xdb, 0xa6, 0xcc, 0x5d, 0x81, 0x16, 0xcf,
	0x7c, 0x19, 0xb9, 0xbe, 0x48, 0xb9, 0x0c, 0x5c, 0xdd, 0x40, 0xd8, 0x3f, 0xe9, 0x84, 0x2f, 0xc6,
	0x49, 0xc3, 0x3d, 0x69, 0xa8, 0x0d, 0xde, 0x11, 0xba, 0x70, 0x90, 0x3c, 0x0e, 0x78, 0xcf, 0xe5,
	0xbe, 0xaf, 0xd8, 0xbf, 0x48, 0xfc, 0x12, 0x6c, 0x18, 0x66, 0x23, 0xe0, 0xbd, 0x65, 0xdf, 0x57,
	0xce, 0x13, 0xc0, 0x06, 0x53, 0xab, 0x1b, 0xf9, 0x66, 0xcc, 0xfe, 0x4d, 0x73, 0x5e, 0x8a, 0xb3,
	0xd5, 0xfc, 0x5a, 0xcf, 0x05, 0xba, 0x48, 0x94, 0x93, 0xbd, 0x28, 0x4c, 0xb9, 0x97, 0x92, 0x75,
	0xfa, 0x0f, 0xcd, 0x7c, 0x19, 0x96, 0x89, 0x75, 0x83, 0x68, 0xe3, 0xa1, 0x1e, 0x87, 0xd9, 0x03,
	0xd3, 0xa8, 0xfd, 0xfd, 0x97, 0xe6, 0xbd, 0x1c, 0x8f, 0x0f, 0xcc, 0x5b, 0x31, 0xdd, 0xf0, 0x1a,
	0x9c, 0x38, 0x30, 0x31, 0x7f, 0xdf, 0xaf, 0x1b, 0x35, 0x33, 0x97, 0x71, 0x66, 0x60, 0x66, 0x5e,
	0x65, 0x4e, 0xc0, 0xd1, 0xcc, 0x54, 0xd9, 0xd7, 0x8f, 0x9a, 0x10, 0x5f, 0x47, 0x1a, 0xeb, 0x27,
	0xab, 0x8b, 0xec, 0xb6, 0x8a, 0x5e, 0x2b, 0xc2, 0xbc, 0x53, 0xbf, 0x81, 0x34, 0x37, 0xb0, 0xb9,
	0xc3, 0x93, 0x55, 0xc3, 0x50, 0x9f, 0x7e, 0x08, 0x1c, 0xbd, 0xaf, 0x8a, 0x82, 0x40, 0x28, 0x37,
	0x11, 0x69, 0x2a, 0xc3, 0x0e, 0x7b, 0xe3, 0xa8, 0x79, 0xe1, 0x4f, 0xea, 0xea, 0x56, 0x90, 0x9b,
	0xc4, 0xe9, 0x4c, 0x30, 0xbd, 0x36, 0x2f, 0x2a, 0xec, 0x4d, 0xb4, 0xf4, 0x0a, 0xd6, 0x34, 0xbc,
	0x4c, 0xa8, 0xae, 0x53, 0x1e, 0x57, 0xbe, 0xf4, 0xd9, 0x9b, 0xe9, 0x3b, 0x56, 0x31, 0x07, 0x74,
	0x9f, 0xa2, 0x42, 0xdb, 0x79, 0x8d, 0x2b, 0x7d, 0xf6, 0x16, 0xe2, 0x6f, 0x22, 0x14, 0xe8, 0x2d,
	0x5f, 0xa7, 0x47, 0xbf, 0x92, 0xf4, 0x62, 0x61, 0xf2, 0xfb, 0xad, 0x5a, 0xd9, 0x5a, 0x5b, 0xc3,
	0xb2, 0x10, 0xe8, 0xe6, 0xae, 0xf3, 0xfc, 0x1c, 0x80, 0x0c, 0x13, 0xe1, 0x69, 0x8b, 0xd3, 0x63,
	0x6f, 0xa3, 0x13, 0xdd, 0x42, 0x0b, 0xd4, 0xcf, 0x36, 0x49, 0x23, 0xd5, 0x73, 0x13, 0xd1, 0xe9,
	0x8a, 0x30, 0x95, 0x3e, 0x7b, 0x3b, 0x7d, 0xe5, 0x2b, 0xb0, 0x69, 0x98, 0xcd, 0x82, 0xd0, 0x69,
	0xcc, 0xd3, 0x54, 0xa6, 0x99, 0x2f, 0xdc, 0x24, 0xed, 0x05, 0x82, 0xbd, 0x83, 0x0e, 0xf9, 0x4a,
	0x6c, 0x14, 0xc4, 0xa6, 0xc6, 0x75, 0x30, 0xf6, 0xbc, 0x20, 0x6b, 0xbb, 0x5d, 0xd1, 0x6d, 0x0b,
	0xc5, 0xde, 0x49, 0x5b, 0xdf, 0xc6, 0x9a, 0x81, 0xd7, 0x0d, 0xaa, 0x55, 0x64, 0x7e, 0xf3, 0x47,
	0xf6, 0x2e, 0x52, 0xad, 0x63, 0x8d, 0x60, 0xf3, 0xc4, 0xce, 0xcf, 0xc3, 0x18, 0x99, 0x65, 0x07,
	0x60, 0x6c, 0x75, 0x65, 0x7d, 0xf9, 0xf6, 0xca, 0xd4, 0x21, 0x67, 0x1c, 0x46, 0xcd, 0x5f, 0x23,
	0xd7, 0xeb, 0x00, 0xd2, 0x77, 0x63, 0x25, 0x12, 0x11, 0xa6, 0xd7, 0x67, 0x60, 0xda, 0xb2, 0xf6,
	0x25, 0x3c, 0x05, 0x4d, 0x32, 0xef, 0x25, 0x72, 0x1c, 0x9c, 0xbe, 0x89, 0xb7, 0x75, 0xf9, 0x91,
	0x0a, 0xc4, 0x81, 0xa9, 0xc2, 0x84, 0x97, 0x58, 0x13, 0xea, 0xda, 0x7d, 0xdb, 0x9b, 0x5a, 0x7e,
	0xbb, 0x84, 0x1b, 0x50, 0xcb, 0x54, 0x60, 0xef, 0xd8, 0x77, 0xdc, 0xf6, 0x8e, 0x64, 0xaa, 0x4b,
	0x64, 0xce, 0x4a, 0xfe, 0xfc, 0xa5, 0x5a, 0xd4, 0x80, 0x39, 0x2d, 0xa9, 0x13, 0x30, 0x53, 0x71,
	0xa1, 0x25, 0xc1, 0x60, 0xb6, 0xea, 0x95, 0x4b, 0xe6, 0x24, 0xb0, 0x41, 0x6f, 0x5c, 0x72, 0xa7,
	0xe1, 0xe4, 0x41, 0x27, 0x5c, 0xb2, 0x93, 0xd0, 0x30, 0xef, 0xb8, 0x04, 0xea, 0x00, 0xbb, 0xbb,
	0xf6, 0x96, 0x55, 0xe7, 0x6a, 0x4f, 0x34, 0x05, 0xb0, 0x04, 0xa6, 0xa1, 0x55, 0x5a, 0xd4, 0x12,
	0x6c, 0xc1, 0x64, 0xee, 0x42, 0xed, 0x90, 0x6b, 0xfb, 0x59, 0x8e, 0x67, 0x2d, 0x83, 0x19, 0x5b,
	0xf7, 0x3f, 0x0f, 0xa7, 0x87, 0x9a, 0x0c, 0x2b, 0xdc, 0x59, 0xf5, 0x04, 0x93, 0xd0, 0x30, 0x4e,
	0xd2, 0x3e, 0x52, 0xe9, 0x1e, 0xed, 0x2b, 0xb6, 0x5c, 0xa4, 0x7d, 0x2c, 0xed, 0x14, 0x2b, 0x63,
	0xdd, 0x77, 0xac, 0xed, 0xc8, 0x19, 0xda, 0x08, 0x19, 0xc2, 0x2a, 0xa2, 0x4b, 0x94, 0x7d, 0xcd,
	0x03, 0x7e, 0xd0, 0xbe, 0xe6, 0x8a, 0xab, 0x2b, 0x89, 0xb3, 0x70, 0x66, 0xa8, 0x8f, 0x2b, 0x05,
	0x67, 0x2c, 0xfb, 0xd5, 0x77, 0x6c, 0x25, 0x7d, 0x11, 0x2e, 0xfc, 0x1f, 0x77, 0x66, 0x47, 0x2b,
	0x3e, 0x70, 0xfa, 0xea, 0x4a, 0xb3, 0x70, 0xdc, 0x36, 0x5c, 0x25, 0x7e, 0x0a, 0xe6, 0x0e, 0x58,
	0x2c, 0x3b, 0x17, 0x07, 0x0d, 0x95, 0x9d, 0x4e, 0x55, 0xff, 0x64, 0x7f, 0xd3, 0x10, 0xbf, 0x34,
	0xf4, 0x25, 0x0d, 0xdc, 0xa7, 0x3d, 0xb3, 0x6f, 0x85, 0xec, 0x2d, 0xab, 0xb6, 0xc7, 0x5e, 0x73,
	0xc0, 0xe7, 0xd8, 0x97, 0xaf, 0x7d, 0x8c, 0xbd, 0x48, 0xd5, 0xcf, 0xd8, 0x29, 0x56, 0x7a, 0x15,
	0xbb, 0xd2, 0x14, 0x9e, 0xc5, 0x16, 0x96, 0x4e, 0x65, 0x68, 0x3c, 0x4c, 0xe5, 0xac, 0xbc, 0x0a,
	0xcb, 0x8e, 0xd8, 0xa1, 0x3f, 0xf0, 0x6f, 0xea, 0xd0, 0xe5, 0xaa, 0x4f, 0xe3, 0x14, 0xcc, 0x1d,
	0x70, 0x23, 0x76, 0x20, 0x06, 0xbc, 0x47, 0x49, 0x9d, 0x87, 0x85, 0xe7, 0xf3, 0x1a, 0x76, 0xbe,
	0x0e, 0xb5, 0x14, 0xa5, 0x60, 0x01, 0xe6, 0x87, 0x9b, 0x87, 0x52, 0x71, 0x0e, 0xce, 0x3e, 0x8f,
	0x4b, 0xb0, 0xd3, 0x35, 0xab, 0x3c, 0xad, 0x93, 0xc0, 0x06, 0x5d, 0x80, 0x5d, 0xf3, 0x0e, 0x36,
	0x7d, 0x3b, 0xb6, 0x76, 0x83, 0xb7, 0x1f, 0x00, 0x75, 0x70, 0xbb, 0x56, 0x58, 0x9d, 0xdc, 0x8e,
	0xe6, 0x81, 0xe6, 0x6d, 0x37, 0x87, 0x7e, 0x57, 0xb6, 0x63, 0x3c, 0xd0, 0x9d, 0xed, 0x5b, 0xab,
	0x36, 0x63, 0xfb, 0xa0, 0x76, 0xf3, 0xb5, 0x71, 0xbb, 0xdd, 0x96, 0xf8, 0xb5, 0x2f, 0xde, 0x9d,
	0x1f, 0xf9, 0xe6, 0xdd, 0xf9, 0x91, 0x67, 0xef, 0xce, 0x8f, 0x7c, 0xe0, 0xb9, 0xf9, 0x43, 0x30,
	0xe7, 0x85, 0x4b, 0x89, 0x0c, 0xf9, 0x12, 0x8f, 0xe5, 0x92, 0xcf, 0x53, 0x4e, 0x3f, 0xaf, 0xb5,
	0xb3, 0xed, 0xeb, 0xf5, 0xe2, 0x17, 0xac, 0xa7, 0x15, 0x8f, 0xdb, 0x63, 0x06, 0x7f, 0xe4, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x18, 0xdf, 0x30, 0x84, 0x13, 0x00, 0x00,
}
